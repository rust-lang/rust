error: called `.get().unwrap()` on a slice
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:38:17
   |
LL |         let _ = boxed_slice.get(1).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-D clippy::get-unwrap` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::get_unwrap)]`
help: using `[]` is clearer and more concise
   |
LL |         let _ = &boxed_slice[1];
   |                 ~~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:38:17
   |
LL |         let _ = boxed_slice.get(1).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message
   = note: `-D clippy::unwrap-used` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::unwrap_used)]`

error: called `.get().unwrap()` on a slice
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:39:17
   |
LL |         let _ = some_slice.get(0).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _ = &some_slice[0];
   |                 ~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:39:17
   |
LL |         let _ = some_slice.get(0).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a Vec
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:40:17
   |
LL |         let _ = some_vec.get(0).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _ = &some_vec[0];
   |                 ~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:40:17
   |
LL |         let _ = some_vec.get(0).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a VecDeque
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:41:17
   |
LL |         let _ = some_vecdeque.get(0).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _ = &some_vecdeque[0];
   |                 ~~~~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:41:17
   |
LL |         let _ = some_vecdeque.get(0).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a HashMap
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:42:17
   |
LL |         let _ = some_hashmap.get(&1).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _ = &some_hashmap[&1];
   |                 ~~~~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:42:17
   |
LL |         let _ = some_hashmap.get(&1).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a BTreeMap
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:43:17
   |
LL |         let _ = some_btreemap.get(&1).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _ = &some_btreemap[&1];
   |                 ~~~~~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:43:17
   |
LL |         let _ = some_btreemap.get(&1).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a slice
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:47:21
   |
LL |         let _: u8 = *boxed_slice.get(1).unwrap();
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _: u8 = boxed_slice[1];
   |                     ~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:47:22
   |
LL |         let _: u8 = *boxed_slice.get(1).unwrap();
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get_mut().unwrap()` on a slice
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:52:9
   |
LL |         *boxed_slice.get_mut(0).unwrap() = 1;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         boxed_slice[0] = 1;
   |         ~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:52:10
   |
LL |         *boxed_slice.get_mut(0).unwrap() = 1;
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get_mut().unwrap()` on a slice
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:53:9
   |
LL |         *some_slice.get_mut(0).unwrap() = 1;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         some_slice[0] = 1;
   |         ~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:53:10
   |
LL |         *some_slice.get_mut(0).unwrap() = 1;
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get_mut().unwrap()` on a Vec
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:54:9
   |
LL |         *some_vec.get_mut(0).unwrap() = 1;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         some_vec[0] = 1;
   |         ~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:54:10
   |
LL |         *some_vec.get_mut(0).unwrap() = 1;
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get_mut().unwrap()` on a VecDeque
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:55:9
   |
LL |         *some_vecdeque.get_mut(0).unwrap() = 1;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         some_vecdeque[0] = 1;
   |         ~~~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:55:10
   |
LL |         *some_vecdeque.get_mut(0).unwrap() = 1;
   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a Vec
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:67:17
   |
LL |         let _ = some_vec.get(0..1).unwrap().to_vec();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _ = some_vec[0..1].to_vec();
   |                 ~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:67:17
   |
LL |         let _ = some_vec.get(0..1).unwrap().to_vec();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get_mut().unwrap()` on a Vec
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:68:17
   |
LL |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _ = some_vec[0..1].to_vec();
   |                 ~~~~~~~~~~~~~~

error: used `unwrap()` on an `Option` value
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:68:17
   |
LL |         let _ = some_vec.get_mut(0..1).unwrap().to_vec();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: consider using `expect()` to provide a better panic message

error: called `.get().unwrap()` on a slice
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:75:13
   |
LL |     let _ = boxed_slice.get(1).unwrap();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |     let _ = &boxed_slice[1];
   |             ~~~~~~~~~~~~~~~

error: called `.get().unwrap()` on a slice
  --> tests/ui-toml/unwrap_used/unwrap_used.rs:94:17
   |
LL |         let _ = Box::new([0]).get(1).unwrap();
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: using `[]` is clearer and more concise
   |
LL |         let _ = &Box::new([0])[1];
   |                 ~~~~~~~~~~~~~~~~~

error: aborting due to 28 previous errors

