error: calls to `push` immediately after creation
  --> tests/ui/vec_init_then_push.rs:5:5
   |
LL | /     let mut def_err: Vec<u32> = Default::default();
LL | |
LL | |
LL | |     def_err.push(0);
   | |____________________^ help: consider using the `vec![]` macro: `let def_err: Vec<u32> = vec![..];`
   |
   = note: `-D clippy::vec-init-then-push` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::vec_init_then_push)]`

error: calls to `push` immediately after creation
  --> tests/ui/vec_init_then_push.rs:10:5
   |
LL | /     let mut new_err = Vec::<u32>::new();
LL | |
LL | |     new_err.push(1);
   | |____________________^ help: consider using the `vec![]` macro: `let mut new_err = vec![..];`

error: calls to `push` immediately after creation
  --> tests/ui/vec_init_then_push.rs:14:5
   |
LL | /     let mut cap_err = Vec::with_capacity(2);
LL | |
LL | |     cap_err.push(0);
LL | |     cap_err.push(1);
LL | |     cap_err.push(2);
   | |____________________^ help: consider using the `vec![]` macro: `let mut cap_err = vec![..];`

error: calls to `push` immediately after creation
  --> tests/ui/vec_init_then_push.rs:27:5
   |
LL | /     new_err = Vec::new();
LL | |
LL | |     new_err.push(0);
   | |____________________^ help: consider using the `vec![]` macro: `new_err = vec![..];`

error: calls to `push` immediately after creation
  --> tests/ui/vec_init_then_push.rs:78:5
   |
LL | /     let mut v = Vec::new();
LL | |
LL | |     v.push(x);
LL | |     v.push(1);
   | |______________^ help: consider using the `vec![]` macro: `let mut v = vec![..];`

error: calls to `push` immediately after creation
  --> tests/ui/vec_init_then_push.rs:87:5
   |
LL | /     let mut v = Vec::new();
LL | |
LL | |     v.push(0);
LL | |     v.push(1);
...  |
LL | |     v.push(1);
LL | |     v.push(0);
   | |______________^ help: consider using the `vec![]` macro: `let mut v = vec![..];`

error: calls to `push` immediately after creation
  --> tests/ui/vec_init_then_push.rs:101:5
   |
LL | /     let mut v2 = Vec::new();
LL | |
LL | |     v2.push(0);
LL | |     v2.push(1);
...  |
LL | |     v2.push(1);
LL | |     v2.push(0);
   | |_______________^ help: consider using the `vec![]` macro: `let mut v2 = vec![..];`

error: calls to `push` immediately after creation
  --> tests/ui/vec_init_then_push.rs:117:5
   |
LL | /     let mut v = Vec::new();
LL | |
LL | |     v.push((0i32, 0i32));
   | |_________________________^ help: consider using the `vec![]` macro: `let v = vec![..];`

error: aborting due to 8 previous errors

