error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_unfixable.rs:23:5
   |
LL |     x.field.map(|value| { do_nothing(value); do_nothing(value) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { ... }`
   |
   = note: `-D clippy::result-map-unit-fn` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::result_map_unit_fn)]`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_unfixable.rs:28:5
   |
LL |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { ... }`

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_unfixable.rs:34:5
   |
LL | //     x.field.map(|value| {
LL | ||
LL | ||
LL | ||         do_nothing(value);
LL | ||         do_nothing(value)
LL | ||     });
   | ||______^- help: try: `if let Ok(value) = x.field { ... }`
   |  |______|
   |

error: called `map(f)` on an `Result` value where `f` is a closure that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_unfixable.rs:40:5
   |
LL |     x.field.map(|value| { do_nothing(value); do_nothing(value); });
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(value) = x.field { ... }`

error: called `map(f)` on an `Result` value where `f` is a function that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_unfixable.rs:46:5
   |
LL |     "12".parse::<i32>().map(diverge);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(a) = "12".parse::<i32>() { diverge(a) }`

error: called `map(f)` on an `Result` value where `f` is a function that returns the unit type `()`
  --> tests/ui/result_map_unit_fn_unfixable.rs:54:5
   |
LL |     y.map(do_nothing);
   |     ^^^^^^^^^^^^^^^^^-
   |     |
   |     help: try: `if let Ok(_y) = y { do_nothing(_y) }`

error: aborting due to 6 previous errors

