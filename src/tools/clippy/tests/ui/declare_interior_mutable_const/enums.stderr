error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:12:1
   |
LL | const UNFROZEN_VARIANT: OptionalCell = OptionalCell::Unfrozen(Cell::new(true));
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider making this `Sync` so that it can go in a static item or using a `thread_local`
   = note: `-D clippy::declare-interior-mutable-const` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::declare_interior_mutable_const)]`

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:23:1
   |
LL | const UNFROZEN_VARIANT_FROM_FN: OptionalCell = unfrozen_variant();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider making this `Sync` so that it can go in a static item or using a `thread_local`

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:45:1
   |
LL | / const NESTED_UNFROZEN_VARIANT: NestedOutermost = NestedOutermost {
LL | |
LL | |     outer: NestedOuter::NestedInner(NestedInner {
LL | |         inner: NestedInnermost::Unfrozen(AtomicUsize::new(2)),
LL | |     }),
LL | | };
   | |__^
   |
   = help: consider making this a static item

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:60:5
   |
LL |     const TO_BE_UNFROZEN_VARIANT: OptionalCell;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:61:5
   |
LL |     const TO_BE_FROZEN_VARIANT: OptionalCell;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:64:5
   |
LL |     const DEFAULTED_ON_UNFROZEN_VARIANT: OptionalCell = OptionalCell::Unfrozen(Cell::new(false));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:90:5
   |
LL |     const TO_BE_UNFROZEN_VARIANT: Option<Self::ToBeUnfrozen> = Some(Self::ToBeUnfrozen::new(4));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:102:5
   |
LL |     const UNFROZEN_VARIANT: BothOfCellAndGeneric<T> = BothOfCellAndGeneric::Unfrozen(Cell::new(std::ptr::null()));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:105:5
   |
LL |     const GENERIC_VARIANT: BothOfCellAndGeneric<T> = BothOfCellAndGeneric::Generic(std::ptr::null());
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:111:5
   |
LL |     const NO_ENUM: Cell<*const T> = Cell::new(std::ptr::null());
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:118:5
   |
LL | /     const UNFROZEN_VARIANT: BothOfCellAndGeneric<Self::AssocType> =
LL | |         BothOfCellAndGeneric::Unfrozen(Cell::new(std::ptr::null()));
   | |____________________________________________________________________^

error: a `const` item should not be interior mutable
  --> tests/ui/declare_interior_mutable_const/enums.rs:120:5
   |
LL |     const GENERIC_VARIANT: BothOfCellAndGeneric<Self::AssocType> = BothOfCellAndGeneric::Generic(std::ptr::null());
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 12 previous errors

