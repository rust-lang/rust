error: you seem to be trying to use `Box<Vec<..>>`. Consider using just `Vec<..>`
  --> tests/ui/box_collection.rs:21:15
   |
LL | fn test1(foo: Box<Vec<bool>>) {}
   |               ^^^^^^^^^^^^^^
   |
   = help: `Vec<..>` is already on the heap, `Box<Vec<..>>` makes an extra allocation
   = note: `-D clippy::box-collection` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::box_collection)]`

error: you seem to be trying to use `Box<String>`. Consider using just `String`
  --> tests/ui/box_collection.rs:29:15
   |
LL | fn test3(foo: Box<String>) {}
   |               ^^^^^^^^^^^
   |
   = help: `String` is already on the heap, `Box<String>` makes an extra allocation

error: you seem to be trying to use `Box<HashMap<..>>`. Consider using just `HashMap<..>`
  --> tests/ui/box_collection.rs:32:15
   |
LL | fn test4(foo: Box<HashMap<String, String>>) {}
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `HashMap<..>` is already on the heap, `Box<HashMap<..>>` makes an extra allocation

error: you seem to be trying to use `Box<HashSet<..>>`. Consider using just `HashSet<..>`
  --> tests/ui/box_collection.rs:35:15
   |
LL | fn test5(foo: Box<HashSet<i64>>) {}
   |               ^^^^^^^^^^^^^^^^^
   |
   = help: `HashSet<..>` is already on the heap, `Box<HashSet<..>>` makes an extra allocation

error: you seem to be trying to use `Box<VecDeque<..>>`. Consider using just `VecDeque<..>`
  --> tests/ui/box_collection.rs:38:15
   |
LL | fn test6(foo: Box<VecDeque<i32>>) {}
   |               ^^^^^^^^^^^^^^^^^^
   |
   = help: `VecDeque<..>` is already on the heap, `Box<VecDeque<..>>` makes an extra allocation

error: you seem to be trying to use `Box<LinkedList<..>>`. Consider using just `LinkedList<..>`
  --> tests/ui/box_collection.rs:41:15
   |
LL | fn test7(foo: Box<LinkedList<i16>>) {}
   |               ^^^^^^^^^^^^^^^^^^^^
   |
   = help: `LinkedList<..>` is already on the heap, `Box<LinkedList<..>>` makes an extra allocation

error: you seem to be trying to use `Box<BTreeMap<..>>`. Consider using just `BTreeMap<..>`
  --> tests/ui/box_collection.rs:44:15
   |
LL | fn test8(foo: Box<BTreeMap<i8, String>>) {}
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `BTreeMap<..>` is already on the heap, `Box<BTreeMap<..>>` makes an extra allocation

error: you seem to be trying to use `Box<BTreeSet<..>>`. Consider using just `BTreeSet<..>`
  --> tests/ui/box_collection.rs:47:15
   |
LL | fn test9(foo: Box<BTreeSet<u64>>) {}
   |               ^^^^^^^^^^^^^^^^^^
   |
   = help: `BTreeSet<..>` is already on the heap, `Box<BTreeSet<..>>` makes an extra allocation

error: you seem to be trying to use `Box<BinaryHeap<..>>`. Consider using just `BinaryHeap<..>`
  --> tests/ui/box_collection.rs:50:16
   |
LL | fn test10(foo: Box<BinaryHeap<u32>>) {}
   |                ^^^^^^^^^^^^^^^^^^^^
   |
   = help: `BinaryHeap<..>` is already on the heap, `Box<BinaryHeap<..>>` makes an extra allocation

error: aborting due to 9 previous errors

