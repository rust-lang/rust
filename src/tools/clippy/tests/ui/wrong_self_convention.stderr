error: methods called `from_*` usually take no `self`
  --> tests/ui/wrong_self_convention.rs:16:17
   |
LL |     fn from_i32(self) {}
   |                 ^^^^
   |
   = help: consider choosing a less ambiguous name
   = note: `-D clippy::wrong-self-convention` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::wrong_self_convention)]`

error: methods called `from_*` usually take no `self`
  --> tests/ui/wrong_self_convention.rs:23:21
   |
LL |     pub fn from_i64(self) {}
   |                     ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `as_*` usually take `self` by reference or `self` by mutable reference
  --> tests/ui/wrong_self_convention.rs:36:15
   |
LL |     fn as_i32(self) {}
   |               ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `into_*` usually take `self` by value
  --> tests/ui/wrong_self_convention.rs:39:17
   |
LL |     fn into_i32(&self) {}
   |                 ^^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `is_*` usually take `self` by mutable reference or `self` by reference or no `self`
  --> tests/ui/wrong_self_convention.rs:42:15
   |
LL |     fn is_i32(self) {}
   |               ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods with the following characteristics: (`to_*` and `self` type is not `Copy`) usually take `self` by reference
  --> tests/ui/wrong_self_convention.rs:45:15
   |
LL |     fn to_i32(self) {}
   |               ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `from_*` usually take no `self`
  --> tests/ui/wrong_self_convention.rs:48:17
   |
LL |     fn from_i32(self) {}
   |                 ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `as_*` usually take `self` by reference or `self` by mutable reference
  --> tests/ui/wrong_self_convention.rs:51:19
   |
LL |     pub fn as_i64(self) {}
   |                   ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `into_*` usually take `self` by value
  --> tests/ui/wrong_self_convention.rs:53:21
   |
LL |     pub fn into_i64(&self) {}
   |                     ^^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `is_*` usually take `self` by mutable reference or `self` by reference or no `self`
  --> tests/ui/wrong_self_convention.rs:55:19
   |
LL |     pub fn is_i64(self) {}
   |                   ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods with the following characteristics: (`to_*` and `self` type is not `Copy`) usually take `self` by reference
  --> tests/ui/wrong_self_convention.rs:57:19
   |
LL |     pub fn to_i64(self) {}
   |                   ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `from_*` usually take no `self`
  --> tests/ui/wrong_self_convention.rs:59:21
   |
LL |     pub fn from_i64(self) {}
   |                     ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `as_*` usually take `self` by reference or `self` by mutable reference
  --> tests/ui/wrong_self_convention.rs:105:19
   |
LL |         fn as_i32(self) {}
   |                   ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `into_*` usually take `self` by value
  --> tests/ui/wrong_self_convention.rs:109:25
   |
LL |         fn into_i32_ref(&self) {}
   |                         ^^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `is_*` usually take `self` by mutable reference or `self` by reference or no `self`
  --> tests/ui/wrong_self_convention.rs:112:19
   |
LL |         fn is_i32(self) {}
   |                   ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `from_*` usually take no `self`
  --> tests/ui/wrong_self_convention.rs:117:21
   |
LL |         fn from_i32(self) {}
   |                     ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `as_*` usually take `self` by reference or `self` by mutable reference
  --> tests/ui/wrong_self_convention.rs:133:19
   |
LL |         fn as_i32(self);
   |                   ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `into_*` usually take `self` by value
  --> tests/ui/wrong_self_convention.rs:137:25
   |
LL |         fn into_i32_ref(&self);
   |                         ^^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `is_*` usually take `self` by mutable reference or `self` by reference or no `self`
  --> tests/ui/wrong_self_convention.rs:140:19
   |
LL |         fn is_i32(self);
   |                   ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `from_*` usually take no `self`
  --> tests/ui/wrong_self_convention.rs:145:21
   |
LL |         fn from_i32(self);
   |                     ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `into_*` usually take `self` by value
  --> tests/ui/wrong_self_convention.rs:164:25
   |
LL |         fn into_i32_ref(&self);
   |                         ^^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods called `from_*` usually take no `self`
  --> tests/ui/wrong_self_convention.rs:171:21
   |
LL |         fn from_i32(self);
   |                     ^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value
  --> tests/ui/wrong_self_convention.rs:196:22
   |
LL |         fn to_u64_v2(&self) -> u64 {
   |                      ^^^^^
   |
   = help: consider choosing a less ambiguous name

error: methods with the following characteristics: (`to_*` and `self` type is not `Copy`) usually take `self` by reference
  --> tests/ui/wrong_self_convention.rs:206:19
   |
LL |         fn to_u64(self) -> u64 {
   |                   ^^^^
   |
   = help: consider choosing a less ambiguous name

error: aborting due to 24 previous errors

