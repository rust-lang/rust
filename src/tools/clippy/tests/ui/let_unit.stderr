error: this let-binding has unit value
  --> tests/ui/let_unit.rs:13:5
   |
LL |     let _x = println!("x");
   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `println!("x");`
   |
   = note: `-D clippy::let-unit-value` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::let_unit_value)]`

error: this let-binding has unit value
  --> tests/ui/let_unit.rs:61:5
   |
LL | /     let _ = v
LL | |         .into_iter()
LL | |         .map(|i| i * 2)
LL | |         .filter(|i| i % 2 == 0)
LL | |         .map(|_| ())
LL | |         .next()
LL | |         .unwrap();
   | |__________________^
   |
help: omit the `let` binding
   |
LL ~     v
LL +         .into_iter()
LL +         .map(|i| i * 2)
LL +         .filter(|i| i % 2 == 0)
LL +         .map(|_| ())
LL +         .next()
LL +         .unwrap();
   |

error: this let-binding has unit value
  --> tests/ui/let_unit.rs:110:5
   |
LL | /     let x = match Some(0) {
LL | |         None => f2(1),
LL | |         Some(0) => f(),
LL | |         Some(1) => f2(3),
LL | |         Some(_) => (),
LL | |     };
   | |______^
   |
help: omit the `let` binding
   |
LL ~     match Some(0) {
LL +         None => f2(1),
LL +         Some(0) => f(),
LL +         Some(1) => f2(3),
LL +         Some(_) => (),
LL +     };
   |

error: this let-binding has unit value
  --> tests/ui/let_unit.rs:191:9
   |
LL |         let res = returns_unit();
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: omit the `let` binding
   |
LL |         returns_unit();
   |
help: variable `res` of type `()` can be replaced with explicit `()`
   |
LL |         returns_result(()).unwrap();
   |                        ~~
help: variable `res` of type `()` can be replaced with explicit `()`
   |
LL |         returns_result(()).unwrap();
   |                        ~~

error: aborting due to 4 previous errors

