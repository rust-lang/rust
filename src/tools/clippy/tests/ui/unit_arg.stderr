error: passing a unit value to a function
  --> tests/ui/unit_arg.rs:63:5
   |
LL | /     foo({
LL | |         1;
LL | |     });
   | |______^
   |
   = note: `-D clippy::unit-arg` implied by `-D warnings`
   = help: to override `-D warnings` add `#[allow(clippy::unit_arg)]`
help: remove the semicolon from the last statement in the block
   |
LL |         1
   |
help: or move the expression in front of the call and replace it with the unit literal `()`
   |
LL ~     {
LL +         1;
LL +     };
LL ~     foo(());
   |

error: passing a unit value to a function
  --> tests/ui/unit_arg.rs:66:5
   |
LL |     foo(foo(1));
   |     ^^^^^^^^^^^
   |
help: move the expression in front of the call and replace it with the unit literal `()`
   |
LL ~     foo(1);
LL ~     foo(());
   |

error: passing a unit value to a function
  --> tests/ui/unit_arg.rs:67:5
   |
LL | /     foo({
LL | |         foo(1);
LL | |         foo(2);
LL | |     });
   | |______^
   |
help: remove the semicolon from the last statement in the block
   |
LL |         foo(2)
   |
help: or move the expression in front of the call and replace it with the unit literal `()`
   |
LL ~     {
LL +         foo(1);
LL +         foo(2);
LL +     };
LL ~     foo(());
   |

error: passing a unit value to a function
  --> tests/ui/unit_arg.rs:72:5
   |
LL | /     b.bar({
LL | |         1;
LL | |     });
   | |______^
   |
help: remove the semicolon from the last statement in the block
   |
LL |         1
   |
help: or move the expression in front of the call and replace it with the unit literal `()`
   |
LL ~     {
LL +         1;
LL +     };
LL ~     b.bar(());
   |

error: passing unit values to a function
  --> tests/ui/unit_arg.rs:75:5
   |
LL |     taking_multiple_units(foo(0), foo(1));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: move the expressions in front of the call and replace them with the unit literal `()`
   |
LL ~     foo(0);
LL +     foo(1);
LL ~     taking_multiple_units((), ());
   |

error: passing unit values to a function
  --> tests/ui/unit_arg.rs:76:5
   |
LL | /     taking_multiple_units(foo(0), {
LL | |         foo(1);
LL | |         foo(2);
LL | |     });
   | |______^
   |
help: remove the semicolon from the last statement in the block
   |
LL |         foo(2)
   |
help: or move the expressions in front of the call and replace them with the unit literal `()`
   |
LL ~     foo(0);
LL +     {
LL +         foo(1);
LL +         foo(2);
LL +     };
LL ~     taking_multiple_units((), ());
   |

error: passing unit values to a function
  --> tests/ui/unit_arg.rs:80:5
   |
LL | /     taking_multiple_units(
LL | |         {
LL | |             foo(0);
LL | |             foo(1);
...  |
LL | |         },
LL | |     );
   | |_____^
   |
help: remove the semicolon from the last statement in the block
   |
LL |             foo(1)
   |
help: remove the semicolon from the last statement in the block
   |
LL |             foo(3)
   |
help: or move the expressions in front of the call and replace them with the unit literal `()`
   |
LL ~     {
LL +         foo(0);
LL +         foo(1);
LL +     };
LL +     {
LL +         foo(2);
LL +         foo(3);
LL +     };
LL +     taking_multiple_units(
LL +         (),
LL +         (),
LL ~     );
   |

error: passing a unit value to a function
  --> tests/ui/unit_arg.rs:91:13
   |
LL |     None.or(Some(foo(2)));
   |             ^^^^^^^^^^^^
   |
help: move the expression in front of the call and replace it with the unit literal `()`
   |
LL ~     None.or({
LL +         foo(2);
LL +         Some(())
LL ~     });
   |

error: passing a unit value to a function
  --> tests/ui/unit_arg.rs:94:5
   |
LL |     foo(foo(()));
   |     ^^^^^^^^^^^^
   |
help: move the expression in front of the call and replace it with the unit literal `()`
   |
LL ~     foo(());
LL ~     foo(());
   |

error: passing a unit value to a function
  --> tests/ui/unit_arg.rs:131:5
   |
LL |     Some(foo(1))
   |     ^^^^^^^^^^^^
   |
help: move the expression in front of the call and replace it with the unit literal `()`
   |
LL ~     foo(1);
LL +     Some(())
   |

error: aborting due to 10 previous errors

