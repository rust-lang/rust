note: now tracking allocation of 123 bytes (alignment ALIGN bytes) with id $ALLOC
  --> tests/pass/alloc-access-tracking.rs:LL:CC
   |
LL |         utils::miri_track_alloc(ptr);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ tracking was triggered here
   |
   = note: BACKTRACE:
   = note: inside `main` at tests/pass/alloc-access-tracking.rs:LL:CC

note: write access to allocation with id $ALLOC
  --> tests/pass/alloc-access-tracking.rs:LL:CC
   |
LL |         *ptr = 42; // Crucially, only a write is printed here, no read!
   |         ^^^^^^^^^ tracking was triggered here
   |
   = note: BACKTRACE:
   = note: inside `main` at tests/pass/alloc-access-tracking.rs:LL:CC

note: read access to allocation with id $ALLOC
  --> tests/pass/alloc-access-tracking.rs:LL:CC
   |
LL |         assert_eq!(*ptr, 42);
   |         ^^^^^^^^^^^^^^^^^^^^ tracking was triggered here
   |
   = note: BACKTRACE:
   = note: inside `main` at RUSTLIB/core/src/macros/mod.rs:LL:CC
   = note: this note originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

note: freed allocation with id $ALLOC
  --> RUSTLIB/alloc/src/boxed.rs:LL:CC
   |
LL |                 self.1.deallocate(From::from(ptr.cast()), layout);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ tracking was triggered here
   |
   = note: BACKTRACE:
   = note: inside `<std::boxed::Box<std::mem::MaybeUninit<[u8; 123]>> as std::ops::Drop>::drop` at RUSTLIB/alloc/src/boxed.rs:LL:CC
   = note: inside `std::ptr::drop_in_place::<std::boxed::Box<std::mem::MaybeUninit<[u8; 123]>>> - shim(Some(std::boxed::Box<std::mem::MaybeUninit<[u8; 123]>>))` at RUSTLIB/core/src/ptr/mod.rs:LL:CC
note: inside `main`
  --> tests/pass/alloc-access-tracking.rs:LL:CC
   |
LL |     }
   |     ^

