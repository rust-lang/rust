Running GenMC Verification...
warning: GenMC currently does not model the failure ordering for `compare_exchange`. Due to success ordering 'Acquire', the failure ordering 'Relaxed' is treated like 'Acquire'. Miri with GenMC might miss bugs related to this memory access.
  --> RUSTLIB/std/src/sys/sync/PLATFORM/futex.rs:LL:CC
   |
LL |               || self
   |  ________________^
LL | |                 .state
LL | |                 .compare_exchange_weak(state, state + READ_LOCKED, Acquire, Relaxed)
   | |____________________________________________________________________________________^ GenMC might miss possible behaviors of this code
   |
   = note: BACKTRACE:
   = note: inside `std::sys::sync::PLATFORM::futex::RwLock::read` at RUSTLIB/std/src/sys/sync/PLATFORM/futex.rs:LL:CC
   = note: inside `std::sync::RwLock::<()>::read` at RUSTLIB/std/src/sync/poison/rwlock.rs:LL:CC
   = note: inside `std::sys::env::PLATFORM::env_read_lock` at RUSTLIB/std/src/sys/env/PLATFORM.rs:LL:CC
   = note: inside closure at RUSTLIB/std/src/sys/env/PLATFORM.rs:LL:CC
   = note: inside `std::sys::pal::PLATFORM::small_c_string::run_with_cstr_stack::<std::option::Option<std::ffi::OsString>>` at RUSTLIB/std/src/sys/pal/PLATFORM/small_c_string.rs:LL:CC
   = note: inside `std::sys::pal::PLATFORM::small_c_string::run_with_cstr::<std::option::Option<std::ffi::OsString>>` at RUSTLIB/std/src/sys/pal/PLATFORM/small_c_string.rs:LL:CC
   = note: inside `std::sys::env::PLATFORM::getenv` at RUSTLIB/std/src/sys/env/PLATFORM.rs:LL:CC
   = note: inside `std::env::_var_os` at RUSTLIB/std/src/env.rs:LL:CC
   = note: inside `std::env::var_os::<&str>` at RUSTLIB/std/src/env.rs:LL:CC
   = note: inside closure at RUSTLIB/std/src/thread/mod.rs:LL:CC
note: inside `miri_start`
  --> tests/genmc/fail/shims/mutex_diff_thread_unlock.rs:LL:CC
   |
LL |       let handle = std::thread::spawn(move || {
   |  __________________^
LL | |         let guard = guard; // avoid field capturing
LL | |         drop(guard);
LL | |     });
   | |______^

warning: GenMC currently does not model spurious failures of `compare_exchange_weak`. Miri with GenMC might miss bugs related to spurious failures.
  --> RUSTLIB/std/src/sys/sync/PLATFORM/futex.rs:LL:CC
   |
LL |               || self
   |  ________________^
LL | |                 .state
LL | |                 .compare_exchange_weak(state, state + READ_LOCKED, Acquire, Relaxed)
   | |____________________________________________________________________________________^ GenMC might miss possible behaviors of this code
   |
   = note: BACKTRACE:
   = note: inside `std::sys::sync::PLATFORM::futex::RwLock::read` at RUSTLIB/std/src/sys/sync/PLATFORM/futex.rs:LL:CC
   = note: inside `std::sync::RwLock::<()>::read` at RUSTLIB/std/src/sync/poison/rwlock.rs:LL:CC
   = note: inside `std::sys::env::PLATFORM::env_read_lock` at RUSTLIB/std/src/sys/env/PLATFORM.rs:LL:CC
   = note: inside closure at RUSTLIB/std/src/sys/env/PLATFORM.rs:LL:CC
   = note: inside `std::sys::pal::PLATFORM::small_c_string::run_with_cstr_stack::<std::option::Option<std::ffi::OsString>>` at RUSTLIB/std/src/sys/pal/PLATFORM/small_c_string.rs:LL:CC
   = note: inside `std::sys::pal::PLATFORM::small_c_string::run_with_cstr::<std::option::Option<std::ffi::OsString>>` at RUSTLIB/std/src/sys/pal/PLATFORM/small_c_string.rs:LL:CC
   = note: inside `std::sys::env::PLATFORM::getenv` at RUSTLIB/std/src/sys/env/PLATFORM.rs:LL:CC
   = note: inside `std::env::_var_os` at RUSTLIB/std/src/env.rs:LL:CC
   = note: inside `std::env::var_os::<&str>` at RUSTLIB/std/src/env.rs:LL:CC
   = note: inside closure at RUSTLIB/std/src/thread/mod.rs:LL:CC
note: inside `miri_start`
  --> tests/genmc/fail/shims/mutex_diff_thread_unlock.rs:LL:CC
   |
LL |       let handle = std::thread::spawn(move || {
   |  __________________^
LL | |         let guard = guard; // avoid field capturing
LL | |         drop(guard);
LL | |     });
   | |______^

error: Undefined Behavior: Invalid unlock() operation
  --> RUSTLIB/std/src/sync/poison/mutex.rs:LL:CC
   |
LL |             self.lock.inner.unlock();
   |             ^^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here
   |
   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior
   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information
   = note: BACKTRACE on thread `unnamed-ID`:
   = note: inside `<std::sync::MutexGuard<'_, u64> as std::ops::Drop>::drop` at RUSTLIB/std/src/sync/poison/mutex.rs:LL:CC
   = note: inside `std::ptr::drop_in_place::<std::sync::MutexGuard<'_, u64>> - shim(Some(std::sync::MutexGuard<'_, u64>))` at RUSTLIB/core/src/ptr/mod.rs:LL:CC
   = note: inside `std::ptr::drop_in_place::<EvilSend<std::sync::MutexGuard<'_, u64>>> - shim(Some(EvilSend<std::sync::MutexGuard<'_, u64>>))` at RUSTLIB/core/src/ptr/mod.rs:LL:CC
   = note: inside `std::mem::drop::<EvilSend<std::sync::MutexGuard<'_, u64>>>` at RUSTLIB/core/src/mem/mod.rs:LL:CC
note: inside closure
  --> tests/genmc/fail/shims/mutex_diff_thread_unlock.rs:LL:CC
   |
LL |         drop(guard);
   |         ^^^^^^^^^^^

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

note: add `-Zmiri-genmc-print-genmc-output` to MIRIFLAGS to see the detailed GenMC error report

error: aborting due to 1 previous error; 2 warnings emitted

