error: Undefined Behavior: attempting a write access using <TAG> at ALLOC[0x4], but that tag does not exist in the borrow stack for this location
  --> tests/fail/both_borrows/buggy_as_mut_slice.rs:LL:CC
   |
LL |     v1[1] = 5;
   |     ^^^^^^^^^
   |     |
   |     attempting a write access using <TAG> at ALLOC[0x4], but that tag does not exist in the borrow stack for this location
   |     this error occurs as part of an access at ALLOC[0x4..0x8]
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental
   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information
help: <TAG> was created by a Unique retag at offsets [0x0..0xc]
  --> tests/fail/both_borrows/buggy_as_mut_slice.rs:LL:CC
   |
LL |     let v1 = safe::as_mut_slice(&v);
   |              ^^^^^^^^^^^^^^^^^^^^^^
help: <TAG> was later invalidated at offsets [0x0..0xc] by a Unique retag
  --> tests/fail/both_borrows/buggy_as_mut_slice.rs:LL:CC
   |
LL |         unsafe { from_raw_parts_mut(self_.as_ptr() as *mut T, self_.len()) }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: BACKTRACE (of the first span):
   = note: inside `main` at tests/fail/both_borrows/buggy_as_mut_slice.rs:LL:CC

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

