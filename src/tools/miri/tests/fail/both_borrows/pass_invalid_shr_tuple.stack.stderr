error: Undefined Behavior: trying to retag from <TAG> for SharedReadOnly permission at ALLOC[0x0], but that tag does not exist in the borrow stack for this location
  --> tests/fail/both_borrows/pass_invalid_shr_tuple.rs:LL:CC
   |
LL |     foo(pair_xref);
   |         ^^^^^^^^^
   |         |
   |         trying to retag from <TAG> for SharedReadOnly permission at ALLOC[0x0], but that tag does not exist in the borrow stack for this location
   |         this error occurs as part of retag (of a reference/box inside this compound value) at ALLOC[0x0..0x4]
   |         errors for retagging in fields are fairly new; please reach out to us (e.g. at <https://rust-lang.zulipchat.com/#narrow/stream/269128-miri>) if you find this error troubling
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental
   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information
help: <TAG> was created by a SharedReadOnly retag at offsets [0x0..0x4]
  --> tests/fail/both_borrows/pass_invalid_shr_tuple.rs:LL:CC
   |
LL |     let pair_xref = unsafe { (&*xraw0, &*xraw1) };
   |                              ^^^^^^^^^^^^^^^^^^
help: <TAG> was later invalidated at offsets [0x0..0x4] by a write access
  --> tests/fail/both_borrows/pass_invalid_shr_tuple.rs:LL:CC
   |
LL |     unsafe { *xraw0 = 42 }; // unfreeze
   |              ^^^^^^^^^^^
   = note: BACKTRACE (of the first span):
   = note: inside `main` at tests/fail/both_borrows/pass_invalid_shr_tuple.rs:LL:CC

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

