error: Undefined Behavior: write access through <TAG> at ALLOC[0x0] is forbidden
  --> tests/fail/both_borrows/aliasing_mut3.rs:LL:CC
   |
LL |     *x = 1;
   |     ^^^^^^ write access through <TAG> at ALLOC[0x0] is forbidden
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Tree Borrows rules it violated are still experimental
   = help: the accessed tag <TAG> has state Reserved (conflicted) which forbids this child write access
help: the accessed tag <TAG> was created here, in the initial state Reserved
  --> tests/fail/both_borrows/aliasing_mut3.rs:LL:CC
   |
LL | pub fn safe(x: &mut i32, y: &i32) {
   |             ^
help: the accessed tag <TAG> later transitioned to Reserved (conflicted) due to a reborrow (acting as a foreign read access) at offsets [0x0..0x4]
  --> tests/fail/both_borrows/aliasing_mut3.rs:LL:CC
   |
LL | pub fn safe(x: &mut i32, y: &i32) {
   |                          ^
   = help: this transition corresponds to a temporary loss of write permissions until function exit
   = note: BACKTRACE (of the first span):
   = note: inside `safe` at tests/fail/both_borrows/aliasing_mut3.rs:LL:CC
note: inside `main`
  --> tests/fail/both_borrows/aliasing_mut3.rs:LL:CC
   |
LL |     safe_raw(xraw, xshr);
   |     ^^^^^^^^^^^^^^^^^^^^

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

