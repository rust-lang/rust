error: Undefined Behavior: not granting access to tag <TAG> because that would remove [Unique for <TAG>] which is strongly protected
  --> RUSTLIB/alloc/src/boxed.rs:LL:CC
   |
LL |         Box(unsafe { Unique::new_unchecked(raw) }, alloc)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not granting access to tag <TAG> because that would remove [Unique for <TAG>] which is strongly protected
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental
   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information
help: <TAG> was created by a SharedReadWrite retag at offsets [0x0..0x4]
  --> tests/fail/both_borrows/newtype_retagging.rs:LL:CC
   |
LL |     let ptr = Box::into_raw(Box::new(0i32));
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
help: <TAG> is this argument
  --> tests/fail/both_borrows/newtype_retagging.rs:LL:CC
   |
LL | fn dealloc_while_running(_n: Newtype<'_>, dealloc: impl FnOnce()) {
   |                          ^^
   = note: BACKTRACE (of the first span):
   = note: inside `std::boxed::Box::<i32>::from_raw_in` at RUSTLIB/alloc/src/boxed.rs:LL:CC
   = note: inside `std::boxed::Box::<i32>::from_raw` at RUSTLIB/alloc/src/boxed.rs:LL:CC
note: inside closure
  --> tests/fail/both_borrows/newtype_retagging.rs:LL:CC
   |
LL |             || drop(Box::from_raw(ptr)),
   |                     ^^^^^^^^^^^^^^^^^^
note: inside `dealloc_while_running::<{closure@tests/fail/both_borrows/newtype_retagging.rs:LL:CC}>`
  --> tests/fail/both_borrows/newtype_retagging.rs:LL:CC
   |
LL |     dealloc();
   |     ^^^^^^^^^
note: inside `main`
  --> tests/fail/both_borrows/newtype_retagging.rs:LL:CC
   |
LL | /         dealloc_while_running(
LL | |             Newtype(&mut *ptr),
LL | |             || drop(Box::from_raw(ptr)),
LL | |         )
   | |_________^

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

