error: Undefined Behavior: write access through <TAG> at ALLOC[0x4] is forbidden
  --> tests/fail/both_borrows/buggy_split_at_mut.rs:LL:CC
   |
LL |     b[1] = 6;
   |     ^^^^^^^^ write access through <TAG> at ALLOC[0x4] is forbidden
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Tree Borrows rules it violated are still experimental
   = help: the accessed tag <TAG> has state Disabled which forbids this child write access
help: the accessed tag <TAG> was created here, in the initial state Reserved
  --> tests/fail/both_borrows/buggy_split_at_mut.rs:LL:CC
   |
LL |     let (a, b) = safe::split_at_mut(&mut array, 0);
   |             ^
help: the accessed tag <TAG> later transitioned to Disabled due to a foreign write access at offsets [0x4..0x8]
  --> tests/fail/both_borrows/buggy_split_at_mut.rs:LL:CC
   |
LL |     a[1] = 5;
   |     ^^^^^^^^
   = help: this transition corresponds to a loss of read and write permissions
   = note: BACKTRACE (of the first span):
   = note: inside `main` at tests/fail/both_borrows/buggy_split_at_mut.rs:LL:CC

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

