error: Undefined Behavior: write access through <TAG> at ALLOC[0x3] is forbidden
  --> tests/fail/tree_borrows/outside-range.rs:LL:CC
   |
LL |     *y.add(3) = 42;
   |     ^^^^^^^^^^^^^^ write access through <TAG> at ALLOC[0x3] is forbidden
   |
   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Tree Borrows rules it violated are still experimental
   = help: the accessed tag <TAG> is foreign to the protected tag <TAG> (i.e., it is not a child)
   = help: this foreign write access would cause the protected tag <TAG> (currently Reserved) to become Disabled
   = help: protected tags must never be Disabled
help: the accessed tag <TAG> was created here
  --> tests/fail/tree_borrows/outside-range.rs:LL:CC
   |
LL |         let raw = data.as_mut_ptr();
   |                   ^^^^^^^^^^^^^^^^^
help: the protected tag <TAG> was created here, in the initial state Reserved
  --> tests/fail/tree_borrows/outside-range.rs:LL:CC
   |
LL | unsafe fn stuff(x: &mut u8, y: *mut u8) {
   |                 ^
   = note: BACKTRACE (of the first span):
   = note: inside `stuff` at tests/fail/tree_borrows/outside-range.rs:LL:CC
note: inside `main`
  --> tests/fail/tree_borrows/outside-range.rs:LL:CC
   |
LL |         stuff(&mut *raw, raw);
   |         ^^^^^^^^^^^^^^^^^^^^^

note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace

error: aborting due to 1 previous error

