- // MIR for `undef_union_as_integer` before GVN
+ // MIR for `undef_union_as_integer` after GVN
  
  fn undef_union_as_integer() -> u32 {
      let mut _0: u32;
      let mut _1: undef_union_as_integer::Union32;
      let mut _2: ();
  
      bb0: {
          StorageLive(_1);
          StorageLive(_2);
-         _2 = ();
-         _1 = Union32 { value: move _2 };
+         _2 = const ();
+         _1 = const Union32 {{ value: Indirect { alloc_id: ALLOC0, offset: Size(0 bytes) }: u32, unit: () }};
          StorageDead(_2);
-         _0 = move _1 as u32 (Transmute);
+         _0 = const Indirect { alloc_id: ALLOC0, offset: Size(0 bytes) }: u32;
          StorageDead(_1);
          return;
      }
+ }
+ 
+ ALLOC0 (size: 4, align: 4) {
+     __ __ __ __                                     │ ░░░░
  }
  
