- // MIR for `match_u8_i8_failed_len_2` before MatchBranchSimplification
+ // MIR for `match_u8_i8_failed_len_2` after MatchBranchSimplification
  
  fn match_u8_i8_failed_len_2(_1: EnumAu8) -> i8 {
      let mut _0: i8;
      let mut _2: u8;
  
      bb0: {
          _2 = discriminant(_1);
          switchInt(copy _2) -> [0: bb1, 127: bb2, 128: bb3, 255: bb4, otherwise: bb5];
      }
  
      bb1: {
          _0 = const 0_i8;
          goto -> bb6;
      }
  
      bb2: {
          _0 = const i8::MAX;
          goto -> bb6;
      }
  
      bb3: {
          _0 = const i8::MIN;
          goto -> bb6;
      }
  
      bb4: {
          _0 = const -1_i8;
          _0 = const -1_i8;
          goto -> bb6;
      }
  
      bb5: {
          unreachable;
      }
  
      bb6: {
          return;
      }
  }
  
