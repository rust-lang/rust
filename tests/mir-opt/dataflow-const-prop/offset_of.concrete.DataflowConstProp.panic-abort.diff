- // MIR for `concrete` before DataflowConstProp
+ // MIR for `concrete` after DataflowConstProp
  
  fn concrete() -> () {
      let mut _0: ();
      let _1: usize;
      scope 1 {
          debug x => _1;
          let _2: usize;
          scope 2 {
              debug y => _2;
              let _3: usize;
              scope 3 {
                  debug z0 => _3;
                  let _4: usize;
                  scope 4 {
                      debug z1 => _4;
                  }
              }
          }
      }
  
      bb0: {
          StorageLive(_1);
-         _1 = OffsetOf(Alpha, [(0, 0)]);
+         _1 = const 4_usize;
          StorageLive(_2);
-         _2 = OffsetOf(Alpha, [(0, 1)]);
+         _2 = const 0_usize;
          StorageLive(_3);
-         _3 = OffsetOf(Alpha, [(0, 2), (0, 0)]);
+         _3 = const 2_usize;
          StorageLive(_4);
-         _4 = OffsetOf(Alpha, [(0, 2), (0, 1)]);
+         _4 = const 3_usize;
          _0 = const ();
          StorageDead(_4);
          StorageDead(_3);
          StorageDead(_2);
          StorageDead(_1);
          return;
      }
  }
  
