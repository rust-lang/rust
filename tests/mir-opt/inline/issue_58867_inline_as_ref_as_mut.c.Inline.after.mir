// MIR for `c` after Inline

fn c(_1: &[T]) -> &[T] {
    debug x => _1;
    let mut _0: &[T];
    let _2: &[T];
    let mut _3: &[T];
    scope 1 (inlined <[T] as AsRef<[T]>>::as_ref) {
        debug self => _3;
    }

    bb0: {
        StorageLive(_2);
        StorageLive(_3);
        _3 = copy _1;
        _2 = copy _3;
        _0 = copy _2;
        StorageDead(_3);
        StorageDead(_2);
        return;
    }
}
