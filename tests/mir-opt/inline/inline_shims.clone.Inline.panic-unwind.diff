- // MIR for `clone` before Inline
+ // MIR for `clone` after Inline
  
  fn clone(_1: fn(A, B)) -> fn(A, B) {
      debug f => _1;
      let mut _0: fn(A, B);
      let mut _2: &fn(A, B);
+     scope 1 (inlined <fn(A, B) as Clone>::clone - shim(fn(A, B))) {
+     }
  
      bb0: {
          StorageLive(_2);
          _2 = &_1;
-         _0 = <fn(A, B) as Clone>::clone(move _2) -> [return: bb1, unwind continue];
-     }
- 
-     bb1: {
+         _0 = copy (*_2);
          StorageDead(_2);
          return;
      }
  }
  
