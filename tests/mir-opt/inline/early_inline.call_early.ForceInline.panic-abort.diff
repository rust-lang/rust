- // MIR for `call_early` before ForceInline
+ // MIR for `call_early` after ForceInline
  
  fn call_early(_1: i32) -> i32 {
      debug x => _1;
      let mut _0: i32;
      let mut _2: i32;
+     let mut _3: i32;
+     scope 1 (inlined do_early) {
+         let mut _4: (i32, bool);
+     }
  
      bb0: {
          StorageLive(_2);
          _2 = copy _1;
-         _0 = do_early(move _2, const 42_i32) -> [return: bb1, unwind unreachable];
+         StorageLive(_3);
+         _3 = const 42_i32;
+         StorageLive(_4);
+         _4 = AddWithOverflow(copy _2, copy _3);
+         assert(!move (_4.1: bool), "attempt to compute `{} + {}`, which would overflow", copy _2, copy _3) -> [success: bb1, unwind unreachable];
      }
  
      bb1: {
+         _0 = move (_4.0: i32);
+         StorageDead(_4);
+         StorageDead(_3);
          StorageDead(_2);
          return;
      }
  }
  
