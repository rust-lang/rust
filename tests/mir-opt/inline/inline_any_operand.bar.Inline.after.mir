// MIR for `bar` after Inline

fn bar() -> bool {
    let mut _0: bool;
    let _1: fn(i32, i32) -> bool {foo};
    let mut _2: fn(i32, i32) -> bool {foo};
    let mut _3: i32;
    let mut _4: i32;
    scope 1 {
        debug f => _1;
        scope 2 (inlined foo) {
            debug x => _3;
            debug y => _4;
        }
    }

    bb0: {
        StorageLive(_1);
        _1 = foo;
        StorageLive(_2);
        _2 = copy _1;
        StorageLive(_3);
        _3 = const 1_i32;
        StorageLive(_4);
        _4 = const -1_i32;
        _0 = Eq(copy _3, copy _4);
        StorageDead(_4);
        StorageDead(_3);
        StorageDead(_2);
        StorageDead(_1);
        return;
    }
}
