- // MIR for `match_dead_store_failed` before MatchBranchSimplification
+ // MIR for `match_dead_store_failed` after MatchBranchSimplification
  
  fn match_dead_store_failed(_1: bool) -> () {
      debug b => _1;
      let mut _0: ();
      let _2: (&str,);
      let mut _3: &str;
      let mut _4: bool;
      let _5: &str;
      scope 1 {
          debug _b => _2;
      }
  
      bb0: {
          StorageLive(_2);
          StorageLive(_3);
          StorageLive(_4);
          _4 = copy _1;
          switchInt(move _4) -> [0: bb2, otherwise: bb1];
      }
  
      bb1: {
          _3 = const " ";
          goto -> bb3;
      }
  
      bb2: {
          StorageLive(_5);
          _5 = const "";
          _3 = &(*_5);
          StorageDead(_5);
          goto -> bb3;
      }
  
      bb3: {
          StorageDead(_4);
          _2 = (move _3,);
          StorageDead(_3);
          _0 = const ();
          StorageDead(_2);
          return;
      }
  }
  
