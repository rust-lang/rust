- // MIR for `unions` before ScalarReplacementOfAggregates
+ // MIR for `unions` after ScalarReplacementOfAggregates
  
  fn unions(_1: f32) -> u32 {
      debug a => _1;
      let mut _0: u32;
      let mut _2: unions::Repr;
      let mut _3: f32;
  
      bb0: {
          StorageLive(_2);
          StorageLive(_3);
          _3 = copy _1;
          _2 = Repr { f: move _3 };
          StorageDead(_3);
          _0 = copy (_2.1: u32);
          StorageDead(_2);
          return;
      }
  }
  
