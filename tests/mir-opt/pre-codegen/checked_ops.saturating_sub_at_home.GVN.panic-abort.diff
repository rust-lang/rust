- // MIR for `saturating_sub_at_home` before GVN
+ // MIR for `saturating_sub_at_home` after GVN
  
  fn saturating_sub_at_home(_1: u32, _2: u32) -> u32 {
      debug lhs => _1;
      debug rhs => _2;
      let mut _0: u32;
      let mut _3: std::option::Option<u32>;
      let mut _4: u32;
      let mut _5: u32;
      let mut _8: u32;
      scope 1 (inlined core::num::<impl u32>::checked_sub) {
          let mut _6: bool;
          let mut _7: u32;
      }
      scope 2 (inlined Option::<u32>::unwrap_or) {
          let mut _9: isize;
          let _10: u32;
          scope 3 {
          }
      }
  
      bb0: {
          StorageLive(_3);
          StorageLive(_4);
          _4 = copy _1;
          StorageLive(_5);
          _5 = copy _2;
          StorageLive(_6);
-         _6 = Lt(copy _4, copy _5);
+         _6 = Lt(copy _1, copy _2);
          switchInt(move _6) -> [0: bb2, otherwise: bb1];
      }
  
      bb1: {
          _3 = const Option::<u32>::None;
          goto -> bb3;
      }
  
      bb2: {
          StorageLive(_7);
-         _7 = SubUnchecked(copy _4, copy _5);
+         _7 = SubUnchecked(copy _1, copy _2);
          _3 = Option::<u32>::Some(move _7);
          StorageDead(_7);
          goto -> bb3;
      }
  
      bb3: {
          StorageDead(_6);
          StorageDead(_5);
          StorageDead(_4);
          StorageLive(_8);
          _8 = const 0_u32;
          StorageLive(_9);
          _9 = discriminant(_3);
          switchInt(move _9) -> [0: bb6, 1: bb7, otherwise: bb5];
      }
  
      bb4: {
          StorageDead(_9);
          StorageDead(_8);
          StorageDead(_3);
          return;
      }
  
      bb5: {
          unreachable;
      }
  
      bb6: {
-         _0 = move _8;
+         _0 = const 0_u32;
          goto -> bb4;
      }
  
      bb7: {
          StorageLive(_10);
          _10 = move ((_3 as Some).0: u32);
          _0 = move _10;
          StorageDead(_10);
          goto -> bb4;
      }
  }
  
  ALLOC0 (size: 8, align: 4) {
      00 00 00 00 __ __ __ __                         │ ....░░░░
  }
  
