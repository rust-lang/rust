- // MIR for `copy_overlapping` before GVN
+ // MIR for `copy_overlapping` after GVN
  
  fn copy_overlapping() -> () {
      let mut _0: ();
      let mut _1: Adt;
      let mut _2: u32;
      let mut _3: &Adt;
  
      bb0: {
          ((_1 as variant#1).0: u32) = const 0_u32;
          _3 = &_1;
          _2 = copy (((*_3) as variant#1).0: u32);
-         _1 = Adt::Some(copy _2);
+         _1 = copy (*_3);
          return;
      }
  }
  
