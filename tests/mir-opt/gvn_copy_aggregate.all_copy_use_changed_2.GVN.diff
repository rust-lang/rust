- // MIR for `all_copy_use_changed_2` before GVN
+ // MIR for `all_copy_use_changed_2` after GVN
  
  fn all_copy_use_changed_2(_1: &mut AllCopy) -> AllCopy {
      debug v => _1;
      let mut _0: AllCopy;
      let mut _2: i32;
      let mut _5: i32;
      let mut _6: i32;
      let mut _7: u64;
      let mut _8: [i8; 3];
      scope 1 {
          debug a => _2;
          let _3: u64;
          scope 2 {
              debug b => _3;
              let _4: [i8; 3];
              scope 3 {
                  debug c => _4;
              }
          }
      }
  
      bb0: {
          StorageLive(_2);
          _2 = copy ((*_1).0: i32);
-         StorageLive(_3);
+         nop;
          _3 = copy ((*_1).1: u64);
-         StorageLive(_4);
+         nop;
          _4 = copy ((*_1).2: [i8; 3]);
          ((*_1).0: i32) = const 1_i32;
          StorageLive(_5);
          _5 = copy ((*_1).0: i32);
          _2 = move _5;
          StorageDead(_5);
          StorageLive(_6);
          _6 = copy _2;
          StorageLive(_7);
          _7 = copy _3;
          StorageLive(_8);
          _8 = copy _4;
-         _0 = AllCopy { a: move _6, b: move _7, c: move _8 };
+         _0 = AllCopy { a: move _6, b: copy _3, c: copy _4 };
          StorageDead(_8);
          StorageDead(_7);
          StorageDead(_6);
-         StorageDead(_4);
-         StorageDead(_3);
+         nop;
+         nop;
          StorageDead(_2);
          return;
      }
  }
  
