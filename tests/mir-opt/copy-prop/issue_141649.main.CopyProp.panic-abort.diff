- // MIR for `main` before CopyProp
+ // MIR for `main` after CopyProp
  
  fn main() -> () {
      let mut _0: ();
      let _1: ();
      let _2: main::S;
      let _3: ();
      let mut _4: main::S;
      let _5: ();
      let _6: main::S;
      let _7: ();
      let mut _8: main::S;
      let _9: ();
      let _10: main::S;
      let _12: &main::S;
      let mut _13: &main::S;
      let _14: ();
      let mut _15: main::S;
      let _16: ();
      let _17: main::C;
      let _18: ();
      let mut _19: main::C;
      let _20: main::C;
      let _21: ();
      let mut _22: main::C;
      scope 1 {
          debug s1 => _2;
      }
      scope 2 {
          debug s2 => _6;
      }
      scope 3 {
          debug s3 => _10;
          let _11: &main::S;
          scope 4 {
              debug borrowed_s3 => _11;
          }
      }
      scope 5 {
          debug c1 => _17;
      }
      scope 6 {
          debug c2 => _20;
      }
  
      bb0: {
-         StorageLive(_1);
          StorageLive(_2);
          _2 = S(const 1_usize, const 2_usize);
          StorageLive(_3);
-         StorageLive(_4);
-         _4 = move _2;
-         _3 = std::mem::drop::<S>(move _4) -> [return: bb1, unwind unreachable];
+         _3 = std::mem::drop::<S>(move _2) -> [return: bb1, unwind unreachable];
      }
  
      bb1: {
-         StorageDead(_4);
          StorageDead(_3);
-         _1 = const ();
          StorageDead(_2);
-         StorageDead(_1);
-         StorageLive(_5);
          StorageLive(_6);
          _6 = S(const 3_usize, const 4_usize);
          StorageLive(_7);
-         StorageLive(_8);
-         _8 = move _6;
-         _7 = std::mem::drop::<S>(move _8) -> [return: bb2, unwind unreachable];
+         _7 = std::mem::drop::<S>(move _6) -> [return: bb2, unwind unreachable];
      }
  
      bb2: {
-         StorageDead(_8);
          StorageDead(_7);
-         _5 = const ();
          StorageDead(_6);
-         StorageDead(_5);
-         StorageLive(_9);
          StorageLive(_10);
          _10 = S(const 5_usize, const 6_usize);
          StorageLive(_11);
          _11 = &_10;
          StorageLive(_12);
-         StorageLive(_13);
-         _13 = copy _11;
-         _12 = opaque::<&S>(move _13) -> [return: bb3, unwind unreachable];
+         _12 = opaque::<&S>(copy _11) -> [return: bb3, unwind unreachable];
      }
  
      bb3: {
-         StorageDead(_13);
          StorageDead(_12);
          StorageLive(_14);
-         StorageLive(_15);
-         _15 = move _10;
-         _14 = std::mem::drop::<S>(move _15) -> [return: bb4, unwind unreachable];
+         _14 = std::mem::drop::<S>(move _10) -> [return: bb4, unwind unreachable];
      }
  
      bb4: {
-         StorageDead(_15);
          StorageDead(_14);
-         _9 = const ();
          StorageDead(_11);
          StorageDead(_10);
-         StorageDead(_9);
-         StorageLive(_16);
          StorageLive(_17);
          _17 = C(const 1_usize, const 2_usize);
          StorageLive(_18);
-         StorageLive(_19);
-         _19 = copy _17;
-         _18 = std::mem::drop::<C>(move _19) -> [return: bb5, unwind unreachable];
+         _18 = std::mem::drop::<C>(copy _17) -> [return: bb5, unwind unreachable];
      }
  
      bb5: {
-         StorageDead(_19);
          StorageDead(_18);
-         _16 = const ();
          StorageDead(_17);
-         StorageDead(_16);
          StorageLive(_20);
          _20 = C(const 3_usize, const 4_usize);
          StorageLive(_21);
-         StorageLive(_22);
-         _22 = copy _20;
-         _21 = std::mem::drop::<C>(move _22) -> [return: bb6, unwind unreachable];
+         _21 = std::mem::drop::<C>(copy _20) -> [return: bb6, unwind unreachable];
      }
  
      bb6: {
-         StorageDead(_22);
          StorageDead(_21);
          _0 = const ();
          StorageDead(_20);
          return;
      }
  }
  
