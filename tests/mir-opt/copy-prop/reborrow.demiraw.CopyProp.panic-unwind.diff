- // MIR for `demiraw` before CopyProp
+ // MIR for `demiraw` after CopyProp
  
  fn demiraw(_1: u8) -> () {
      debug x => _1;
      let mut _0: ();
      let _2: *mut u8;
      let mut _4: &mut u8;
      let _6: ();
      let mut _7: *mut u8;
      scope 1 {
          debug a => _2;
          let _3: &mut u8;
          scope 2 {
              debug b => _3;
              let _5: *mut u8;
              scope 3 {
-                 debug c => _5;
+                 debug c => _2;
              }
          }
      }
  
      bb0: {
-         StorageLive(_2);
          _2 = &raw mut _1;
          StorageLive(_3);
          StorageLive(_4);
          _4 = &mut (*_2);
          _3 = &mut (*_4);
          StorageDead(_4);
-         StorageLive(_5);
-         _5 = copy _2;
          StorageLive(_6);
-         StorageLive(_7);
-         _7 = copy _5;
-         _6 = opaque::<*mut u8>(move _7) -> [return: bb1, unwind continue];
+         _6 = opaque::<*mut u8>(copy _2) -> [return: bb1, unwind continue];
      }
  
      bb1: {
-         StorageDead(_7);
          StorageDead(_6);
          _0 = const ();
-         StorageDead(_5);
          StorageDead(_3);
-         StorageDead(_2);
          return;
      }
  }
  
