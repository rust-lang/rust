- // MIR for `three_way_compare_signed` before LowerIntrinsics
+ // MIR for `three_way_compare_signed` after LowerIntrinsics
  
  fn three_way_compare_signed(_1: i16, _2: i16) -> () {
      debug a => _1;
      debug b => _2;
      let mut _0: ();
      let _3: std::cmp::Ordering;
      let mut _4: i16;
      let mut _5: i16;
  
      bb0: {
          StorageLive(_3);
          StorageLive(_4);
          _4 = copy _1;
          StorageLive(_5);
          _5 = copy _2;
-         _3 = three_way_compare::<i16>(move _4, move _5) -> [return: bb1, unwind continue];
+         _3 = Cmp(move _4, move _5);
+         goto -> bb1;
      }
  
      bb1: {
          StorageDead(_5);
          StorageDead(_4);
          StorageDead(_3);
          _0 = const ();
          return;
      }
  }
  
