error: `~const` is not allowed here
  --> const-super-trait.rs:7:12
   |
LL | trait Bar: ~const Foo {}
   |            ^^^^^^
   |
note: this trait is not a `#[const_trait]`, so it cannot have `~const` trait bounds
  --> const-super-trait.rs:7:1
   |
LL | trait Bar: ~const Foo {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^

error: `~const` can only be applied to `#[const_trait]` traits
  --> const-super-trait.rs:7:12
   |
LL | trait Bar: ~const Foo {}
   |            ^^^^^^ can't be applied to `Foo`
   |
help: mark `Foo` as `#[const_trait]` to allow it to have `const` implementations
   |
LL | #[const_trait] trait Foo {
   | ++++++++++++++

error: `~const` can only be applied to `#[const_trait]` traits
  --> const-super-trait.rs:9:17
   |
LL | const fn foo<T: ~const Bar>(x: &T) {
   |                 ^^^^^^ can't be applied to `Bar`
   |
help: mark `Bar` as `#[const_trait]` to allow it to have `const` implementations
   |
LL | #[const_trait] trait Bar: ~const Foo {}
   | ++++++++++++++

error[E0015]: cannot call non-const fn `<T as Foo>::a` in constant functions
  --> const-super-trait.rs:10:7
   |
LL |     x.a();
   |       ^^^
   |
   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0015`.
