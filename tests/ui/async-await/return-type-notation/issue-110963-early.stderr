error: implementation of `Send` is not general enough
  --> $DIR/issue-110963-early.rs:14:5
   |
LL | /     spawn(async move {
LL | |         let mut hc = hc;
LL | |         if !hc.check().await {
LL | |             log_health_check_failure().await;
LL | |         }
LL | |     });
   | |______^ implementation of `Send` is not general enough
   |
   = note: `Send` would have to be implemented for the type `impl Future<Output = bool> { <HC as HealthCheck>::check<'0>(..) }`, for any two lifetimes `'0` and `'1`...
   = note: ...but `Send` is actually implemented for the type `impl Future<Output = bool> { <HC as HealthCheck>::check<'2>(..) }`, for some specific lifetime `'2`

error: implementation of `Send` is not general enough
  --> $DIR/issue-110963-early.rs:14:5
   |
LL | /     spawn(async move {
LL | |         let mut hc = hc;
LL | |         if !hc.check().await {
LL | |             log_health_check_failure().await;
LL | |         }
LL | |     });
   | |______^ implementation of `Send` is not general enough
   |
   = note: `Send` would have to be implemented for the type `impl Future<Output = bool> { <HC as HealthCheck>::check<'0>(..) }`, for any two lifetimes `'0` and `'1`...
   = note: ...but `Send` is actually implemented for the type `impl Future<Output = bool> { <HC as HealthCheck>::check<'2>(..) }`, for some specific lifetime `'2`
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: aborting due to 2 previous errors

