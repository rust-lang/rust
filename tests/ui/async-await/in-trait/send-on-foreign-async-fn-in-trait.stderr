error[E0277]: `impl Future<Output = ()> { <T as Foo>::test(..) }` cannot be sent between threads safely
  --> $DIR/send-on-foreign-async-fn-in-trait.rs:9:16
   |
LL |     needs_send(T::test());
   |     ---------- ^^^^^^^^^ `impl Future<Output = ()> { <T as Foo>::test(..) }` cannot be sent between threads safely
   |     |
   |     required by a bound introduced by this call
   |
   = help: the trait `Send` is not implemented for `impl Future<Output = ()> { <T as Foo>::test(..) }`
note: required by a bound in `needs_send`
  --> $DIR/send-on-foreign-async-fn-in-trait.rs:8:27
   |
LL |     fn needs_send(_: impl Send) {}
   |                           ^^^^ required by this bound in `needs_send`
help: consider further restricting the associated type
   |
LL | fn bar<T: Foo>() where <T as Foo>::test(..): Send {
   |                  ++++++++++++++++++++++++++++++++

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0277`.
