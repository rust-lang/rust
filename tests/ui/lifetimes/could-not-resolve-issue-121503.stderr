error[E0106]: missing lifetime specifier
  --> $DIR/could-not-resolve-issue-121503.rs:6:72
   |
LL |     async fn box_ref_Struct(self: Box<Self, impl FnMut(&mut Self)>) -> &u32 {
   |                                                                        ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from
help: consider using the `'static` lifetime, but this is uncommon unless you're returning a borrowed value from a `const` or a `static`
   |
LL |     async fn box_ref_Struct(self: Box<Self, impl FnMut(&mut Self)>) -> &'static u32 {
   |                                                                         +++++++
help: instead, you are more likely to want to change the argument to be borrowed...
   |
LL |     async fn box_ref_Struct(self: &Box<Self, impl FnMut(&mut Self)>) -> &u32 {
   |                                   +
help: ...or alternatively, you might want to return an owned value
   |
LL -     async fn box_ref_Struct(self: Box<Self, impl FnMut(&mut Self)>) -> &u32 {
LL +     async fn box_ref_Struct(self: Box<Self, impl FnMut(&mut Self)>) -> u32 {
   |

error[E0658]: `Box<Struct, impl FnMut(&mut Self)>` cannot be used as the type of `self` without the `arbitrary_self_types` feature
  --> $DIR/could-not-resolve-issue-121503.rs:6:35
   |
LL |     async fn box_ref_Struct(self: Box<Self, impl FnMut(&mut Self)>) -> &u32 {
   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44874 <https://github.com/rust-lang/rust/issues/44874> for more information
   = help: add `#![feature(arbitrary_self_types)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date
   = help: consider changing to `self`, `&self`, `&mut self`, or a type implementing `Receiver` such as `self: Box<Self>`, `self: Rc<Self>`, or `self: Arc<Self>`

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0106, E0658.
For more information about an error, try `rustc --explain E0106`.
