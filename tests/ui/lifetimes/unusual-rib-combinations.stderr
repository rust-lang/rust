error[E0106]: missing lifetime specifier
  --> $DIR/unusual-rib-combinations.rs:21:15
   |
LL | fn d<const C: S>() {}
   |               ^ expected named lifetime parameter

error[E0770]: the type of const parameters must not depend on other generic parameters
  --> $DIR/unusual-rib-combinations.rs:25:22
   |
LL | struct Bar<const N: &'a (dyn for<'a> Foo<'a>)>;
   |                      ^^ the type must not depend on the parameter `'a`
   |
   = note: lifetime parameters may not be used in the type of const parameters

error[E0214]: parenthesized type parameters may only be used with a `Fn` trait
  --> $DIR/unusual-rib-combinations.rs:11:15
   |
LL | fn b<const C: u8()>() {}
   |               ^^^^ only `Fn` traits may use parentheses

error[E0214]: parenthesized type parameters may only be used with a `Fn` trait
  --> $DIR/unusual-rib-combinations.rs:15:10
   |
LL | fn c<T = u8()>() {}
   |          ^^^^ only `Fn` traits may use parentheses

error: defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions
  --> $DIR/unusual-rib-combinations.rs:15:6
   |
LL | fn c<T = u8()>() {}
   |      ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #36887 <https://github.com/rust-lang/rust/issues/36887>
   = note: `#[deny(invalid_type_param_default)]` on by default

error[E0308]: mismatched types
  --> $DIR/unusual-rib-combinations.rs:5:16
   |
LL | fn a() -> [u8; foo()] {
   |                ^^^^^ expected `usize`, found `()`

error: aborting due to 6 previous errors

Some errors have detailed explanations: E0106, E0214, E0308, E0770.
For more information about an error, try `rustc --explain E0106`.
Future incompatibility report: Future breakage diagnostic:
error: defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions
  --> $DIR/unusual-rib-combinations.rs:15:6
   |
LL | fn c<T = u8()>() {}
   |      ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #36887 <https://github.com/rust-lang/rust/issues/36887>
   = note: `#[deny(invalid_type_param_default)]` on by default

