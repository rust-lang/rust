warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:13:5
   |
LL | const Z: () = {
   | -----------
   | |     |
   | |     help: use a const-anon item to suppress this lint: `_`
   | move the `impl` block outside of this constant `Z`
...
LL |     impl Uto for &Test {}
   |     ^^^^^---^^^^^^----
   |          |        |
   |          |        `Test` is not local
   |          `Uto` is not local
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`
   = note: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint
   = note: `#[warn(non_local_definitions)]` on by default

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:24:5
   |
LL | static A: u32 = {
   | ------------- move the `impl` block outside of this static `A`
LL |     impl Uto2 for Test {}
   |     ^^^^^----^^^^^----
   |          |        |
   |          |        `Test` is not local
   |          `Uto2` is not local
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`
   = note: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:32:5
   |
LL | const B: u32 = {
   | ------------ move the `impl` block outside of this constant `B`
LL |     impl Uto3 for Test {}
   |     ^^^^^----^^^^^----
   |          |        |
   |          |        `Test` is not local
   |          `Uto3` is not local
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`
   = note: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:43:5
   |
LL | fn main() {
   | --------- move the `impl` block outside of this function `main`
LL |     impl Test {
   |     ^^^^^----
   |          |
   |          `Test` is not local
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:50:9
   |
LL |       const {
   |  ___________-
LL | |         impl Test {
   | |         ^^^^^----
   | |              |
   | |              `Test` is not local
LL | |
LL | |             fn hoo() {}
...  |
LL | |         1
LL | |     };
   | |_____- move the `impl` block outside of this inline constant `<unnameable>` and up 2 bodies
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:59:9
   |
LL |     const _: u32 = {
   |     ------------ move the `impl` block outside of this constant `_` and up 2 bodies
LL |         impl Test {
   |         ^^^^^----
   |              |
   |              `Test` is not local
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`
   = note: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:69:13
   |
LL |         const _: () = {
   |         ----------- move the `impl` block outside of this constant `_` and up 3 bodies
LL |             impl Test {}
   |             ^^^^^----
   |                  |
   |                  `Test` is not local
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`
   = note: items in an anonymous const item (`const _: () = { ... }`) are treated as in the same scope as the anonymous const's declaration for the purpose of this lint

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:79:9
   |
LL |     let _a = || {
   |              -- move the `impl` block outside of this closure `<unnameable>` and up 2 bodies
LL |         impl Uto9 for Test {}
   |         ^^^^^----^^^^^----
   |              |        |
   |              |        `Test` is not local
   |              `Uto9` is not local
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
  --> $DIR/consts.rs:86:9
   |
LL |       type A = [u32; {
   |  ____________________-
LL | |         impl Uto10 for Test {}
   | |         ^^^^^-----^^^^^----
   | |              |         |
   | |              |         `Test` is not local
   | |              `Uto10` is not local
LL | |
...  |
LL | |     }];
   | |_____- move the `impl` block outside of this constant expression `<unnameable>` and up 2 bodies
   |
   = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`

warning: 9 warnings emitted

