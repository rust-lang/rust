error[E0277]: `Zst` cannot be safely transmuted into `V0i8`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:46:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `Zst` is smaller than the size of `V0i8`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0i8` cannot be safely transmuted into `u16`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:48:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0i8` is smaller than the size of `u16`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `Zst` cannot be safely transmuted into `V0u8`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:54:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `Zst` is smaller than the size of `V0u8`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0u8` cannot be safely transmuted into `u16`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:56:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0u8` is smaller than the size of `u16`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `u8` cannot be safely transmuted into `V0i16`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:68:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `u8` is smaller than the size of `V0i16`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0i16` cannot be safely transmuted into `u32`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:70:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0i16` is smaller than the size of `u32`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `u8` cannot be safely transmuted into `V0u16`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:76:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `u8` is smaller than the size of `V0u16`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0u16` cannot be safely transmuted into `u32`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:78:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0u16` is smaller than the size of `u32`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `u16` cannot be safely transmuted into `V0i32`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:90:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `u16` is smaller than the size of `V0i32`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0i32` cannot be safely transmuted into `u64`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:92:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0i32` is smaller than the size of `u64`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `u16` cannot be safely transmuted into `V0u32`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:98:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `u16` is smaller than the size of `V0u32`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0u32` cannot be safely transmuted into `u64`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:100:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0u32` is smaller than the size of `u64`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `u32` cannot be safely transmuted into `V0i64`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:112:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `u32` is smaller than the size of `V0i64`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0i64` cannot be safely transmuted into `u128`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:114:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0i64` is smaller than the size of `u128`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `u32` cannot be safely transmuted into `V0u64`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:120:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `u32` is smaller than the size of `V0u64`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0u64` cannot be safely transmuted into `u128`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:122:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0u64` is smaller than the size of `u128`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `u8` cannot be safely transmuted into `V0isize`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:134:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `u8` is smaller than the size of `V0isize`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0isize` cannot be safely transmuted into `[usize; 2]`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:136:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0isize` is smaller than the size of `[usize; 2]`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `u8` cannot be safely transmuted into `V0usize`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:142:44
   |
LL |         assert::is_transmutable::<Smaller, Current>();
   |                                            ^^^^^^^ the size of `u8` is smaller than the size of `V0usize`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error[E0277]: `V0usize` cannot be safely transmuted into `[usize; 2]`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:144:44
   |
LL |         assert::is_transmutable::<Current, Larger>();
   |                                            ^^^^^^ the size of `V0usize` is smaller than the size of `[usize; 2]`
   |
note: required by a bound in `is_transmutable`
  --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14
   |
LL |       pub fn is_transmutable<Src, Dst>()
   |              --------------- required by a bound in this function
LL |       where
LL |           Dst: TransmuteFrom<Src, {
   |  ______________^
LL | |             Assume {
LL | |                 alignment: true,
LL | |                 lifetimes: true,
...  |
LL | |             }
LL | |         }>
   | |__________^ required by this bound in `is_transmutable`

error: aborting due to 20 previous errors

For more information about this error, try `rustc --explain E0277`.
