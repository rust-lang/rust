error: item does not constrain `Foo::{opaque#0}`, but has it in its signature
  --> $DIR/nested_type_alias_impl_trait.rs:13:12
   |
LL |     pub fn get_foot(_: Foo) -> Foot {
   |            ^^^^^^^^
   |
   = note: consider moving the opaque type's declaration and defining uses into a separate module
note: this opaque type is in the signature
  --> $DIR/nested_type_alias_impl_trait.rs:6:20
   |
LL |     pub type Foo = impl Debug;
   |                    ^^^^^^^^^^

error: opaque type's hidden type cannot be another opaque type from the same scope
  --> $DIR/nested_type_alias_impl_trait.rs:15:9
   |
LL |         get_foo()
   |         ^^^^^^^^^ one of the two opaque types used here has to be outside its defining scope
   |
note: opaque type whose hidden type is being assigned
  --> $DIR/nested_type_alias_impl_trait.rs:7:21
   |
LL |     pub type Foot = impl Debug;
   |                     ^^^^^^^^^^
note: opaque type being used as hidden type
  --> $DIR/nested_type_alias_impl_trait.rs:6:20
   |
LL |     pub type Foo = impl Debug;
   |                    ^^^^^^^^^^

error: aborting due to 2 previous errors

