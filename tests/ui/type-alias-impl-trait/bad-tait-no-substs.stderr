error[E0106]: missing lifetime specifier
  --> $DIR/bad-tait-no-substs.rs:8:11
   |
LL |     Tuple(Alias),
   |           ^^^^^ expected named lifetime parameter
   |
help: consider introducing a named lifetime parameter
   |
LL ~ pub enum UninhabitedVariants<'a> {
LL ~     Tuple(Alias<'a>),
   |

error[E0107]: missing generics for type alias `Alias`
  --> $DIR/bad-tait-no-substs.rs:8:11
   |
LL |     Tuple(Alias),
   |           ^^^^^ expected 1 generic argument
   |
note: type alias defined here, with 1 generic parameter: `U`
  --> $DIR/bad-tait-no-substs.rs:5:6
   |
LL | type Alias<'a, U> = impl Trait<U>;
   |      ^^^^^     -
help: add missing generic argument
   |
LL |     Tuple(Alias<U>),
   |                +++

error[E0792]: non-defining opaque type use in defining scope
  --> $DIR/bad-tait-no-substs.rs:8:11
   |
LL |     Tuple(Alias),
   |           ^^^^^ argument `'_` is not a generic parameter
   |
note: for this opaque type
  --> $DIR/bad-tait-no-substs.rs:5:21
   |
LL | type Alias<'a, U> = impl Trait<U>;
   |                     ^^^^^^^^^^^^^

error: item does not constrain `Alias::{opaque#0}`, but has it in its signature
  --> $DIR/bad-tait-no-substs.rs:14:4
   |
LL | fn uwu(x: UninhabitedVariants) {
   |    ^^^
   |
   = note: consider moving the opaque type's declaration and defining uses into a separate module
note: this opaque type is in the signature
  --> $DIR/bad-tait-no-substs.rs:5:21
   |
LL | type Alias<'a, U> = impl Trait<U>;
   |                     ^^^^^^^^^^^^^

error[E0004]: non-exhaustive patterns: `UninhabitedVariants::Tuple(_)` not covered
  --> $DIR/bad-tait-no-substs.rs:16:11
   |
LL |     match x {}
   |           ^ pattern `UninhabitedVariants::Tuple(_)` not covered
   |
note: `UninhabitedVariants` defined here
  --> $DIR/bad-tait-no-substs.rs:7:10
   |
LL | pub enum UninhabitedVariants {
   |          ^^^^^^^^^^^^^^^^^^^
LL |     Tuple(Alias),
   |     ----- not covered
   = note: the matched value is of type `UninhabitedVariants`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~     match x {
LL +         UninhabitedVariants::Tuple(_) => todo!(),
LL +     }
   |

error: aborting due to 5 previous errors

Some errors have detailed explanations: E0004, E0106, E0107, E0792.
For more information about an error, try `rustc --explain E0004`.
