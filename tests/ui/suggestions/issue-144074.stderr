error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> $DIR/issue-144074.rs:4:25
   |
LL |     assert_sized(Struct(*""));
   |                  ------ ^^^ doesn't have a size known at compile-time
   |                  |
   |                  required by a bound introduced by this call
   |
   = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `Struct`
  --> $DIR/issue-144074.rs:1:15
   |
LL | struct Struct<T>(T);
   |               ^ required by this bound in `Struct`
help: references are always `Sized`, even if they point to unsized data; consider not dereferencing the expression
   |
LL -     assert_sized(Struct(*""));
LL +     assert_sized(Struct(""));
   |

error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> $DIR/issue-144074.rs:4:5
   |
LL |     assert_sized(Struct(*""));
   |     ^^^^^^^^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `str`
note: required by an implicit `Sized` bound in `Struct`
  --> $DIR/issue-144074.rs:1:15
   |
LL | struct Struct<T>(T);
   |               ^ required by the implicit `Sized` requirement on this type parameter in `Struct`
help: you could relax the implicit `Sized` bound on `T` if it were used through indirection like `&T` or `Box<T>`
  --> $DIR/issue-144074.rs:1:15
   |
LL | struct Struct<T>(T);
   |               ^  - ...if indirection were used here: `Box<T>`
   |               |
   |               this could be changed to `T: ?Sized`...

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
