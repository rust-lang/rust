error[E0038]: the trait `Trait` cannot be made into an object
  --> $DIR/dyn-incompatible-trait-should-use-where-sized.rs:9:12
   |
LL | fn bar(x: &dyn Trait) {}
   |            ^^^^^^^^^ `Trait` cannot be made into an object
   |
note: for a trait to be "dyn-compatible" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/dyn-incompatible-trait-should-use-where-sized.rs:5:8
   |
LL | trait Trait {
   |       ----- this trait cannot be made into an object...
LL |     fn foo() where Self: Other, { }
   |        ^^^ ...because associated function `foo` has no `self` parameter
LL |     fn bar(self: ()) {}
   |                  ^^ ...because method `bar`'s `self` parameter cannot be dispatched on
help: consider turning `foo` into a method by giving it a `&self` argument
   |
LL |     fn foo(&self) where Self: Other, { }
   |            +++++
help: alternatively, consider constraining `foo` so it does not apply to trait objects
   |
LL |     fn foo() where Self: Other, Self: Sized { }
   |                               ~~~~~~~~~~~~~
help: consider changing method `bar`'s `self` parameter to be `&self`
   |
LL |     fn bar(self: &Self) {}
   |                  ~~~~~

error[E0307]: invalid `self` parameter type: `()`
  --> $DIR/dyn-incompatible-trait-should-use-where-sized.rs:6:18
   |
LL |     fn bar(self: ()) {}
   |                  ^^
   |
   = note: type of `self` must be `Self` or a type that dereferences to it
   = help: consider changing to `self`, `&self`, `&mut self`, `self: Box<Self>`, `self: Rc<Self>`, `self: Arc<Self>`, or `self: Pin<P>` (where P is one of the previous types except `Self`)

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0038, E0307.
For more information about an error, try `rustc --explain E0038`.
