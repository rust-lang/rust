error[E0063]: missing fields `b` and `d` in initializer of `A`
  --> $DIR/struct-record-suggestion.rs:10:13
   |
LL |     let q = A { c: 5..Default::default() };
   |             ^ missing `b` and `d`
   |
note: this expression may have been misinterpreted as a `..` range expression
  --> $DIR/struct-record-suggestion.rs:10:20
   |
LL |     let q = A { c: 5..Default::default() };
   |                    ^^^^^^^^^^^^^^^^^^^^^
help: to set the remaining fields from `Default::default()`, separate the last named field with a comma
   |
LL |     let q = A { c: 5, ..Default::default() };
   |                     +

error[E0308]: mismatched types
  --> $DIR/struct-record-suggestion.rs:23:20
   |
LL |     let q = B { b: 1..Default::default() };
   |                    ^^^^^^^^^^^^^^^^^^^^^ expected `u32`, found `Range<{integer}>`
   |
   = note: expected type `u32`
            found struct `std::ops::Range<{integer}>`
note: this expression may have been misinterpreted as a `..` range expression
  --> $DIR/struct-record-suggestion.rs:23:20
   |
LL |     let q = B { b: 1..Default::default() };
   |                    ^^^^^^^^^^^^^^^^^^^^^
help: to set the remaining fields from `Default::default()`, separate the last named field with a comma
   |
LL |     let q = B { b: 1, ..Default::default() };
   |                     +

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0063, E0308.
For more information about an error, try `rustc --explain E0063`.
