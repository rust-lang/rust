warning: this function depends on never type fallback being `()`
  --> $DIR/never-type-fallback-breaking.rs:16:1
   |
LL | fn m() {
   | ^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in Rust 2024 and in a future release in all editions!
   = note: for more information, see issue #123748 <https://github.com/rust-lang/rust/issues/123748>
   = help: specify the types explicitly
note: in edition 2024, the requirement `!: Default` will fail
  --> $DIR/never-type-fallback-breaking.rs:20:17
   |
LL |         true => Default::default(),
   |                 ^^^^^^^^^^^^^^^^^^
   = note: `#[warn(dependency_on_unit_never_type_fallback)]` on by default
help: use `()` annotations to avoid fallback changes
   |
LL |     let x: () = match true {
   |          ++++

warning: this function depends on never type fallback being `()`
  --> $DIR/never-type-fallback-breaking.rs:28:1
   |
LL | fn q() -> Option<()> {
   | ^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in Rust 2024 and in a future release in all editions!
   = note: for more information, see issue #123748 <https://github.com/rust-lang/rust/issues/123748>
   = help: specify the types explicitly
note: in edition 2024, the requirement `!: Default` will fail
  --> $DIR/never-type-fallback-breaking.rs:35:5
   |
LL |     deserialize()?;
   |     ^^^^^^^^^^^^^
help: use `()` annotations to avoid fallback changes
   |
LL |     deserialize::<()>()?;
   |                ++++++

warning: this function depends on never type fallback being `()`
  --> $DIR/never-type-fallback-breaking.rs:45:1
   |
LL | fn meow() -> Result<(), ()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in Rust 2024 and in a future release in all editions!
   = note: for more information, see issue #123748 <https://github.com/rust-lang/rust/issues/123748>
   = help: specify the types explicitly
note: in edition 2024, the requirement `(): From<!>` will fail
  --> $DIR/never-type-fallback-breaking.rs:48:5
   |
LL |     help(1)?;
   |     ^^^^^^^
help: use `()` annotations to avoid fallback changes
   |
LL |     help::<(), _>(1)?;
   |         +++++++++

warning: 3 warnings emitted

