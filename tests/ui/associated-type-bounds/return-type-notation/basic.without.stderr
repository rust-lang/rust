error: future cannot be sent between threads safely
  --> $DIR/basic.rs:22:13
   |
LL |     is_send(foo::<T>());
   |             ^^^^^^^^^^ future returned by `foo` is not `Send`
   |
   = help: within `impl Future<Output = Result<(), ()>>`, the trait `Send` is not implemented for `impl Future<Output = Result<(), ()>> { <T as Foo>::method(..) }`
note: future is not `Send` as it awaits another future which is not `Send`
  --> $DIR/basic.rs:12:5
   |
LL |     T::method().await?;
   |     ^^^^^^^^^^^ await occurs here on type `impl Future<Output = Result<(), ()>> { <T as Foo>::method(..) }`, which is not `Send`
note: required by a bound in `is_send`
  --> $DIR/basic.rs:16:20
   |
LL | fn is_send(_: impl Send) {}
   |                    ^^^^ required by this bound in `is_send`

error: aborting due to 1 previous error

