error[E0038]: the trait `Foo` cannot be made into an object
  --> $DIR/no-static.rs:22:27
   |
LL |     let b: Box<dyn Foo> = Box::new(Bar);
   |                           ^^^^^^^^^^^^^ `Foo` cannot be made into an object
   |
note: for a trait to be "dyn-compatible" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/no-static.rs:9:8
   |
LL | trait Foo {
   |       --- this trait cannot be made into an object...
LL |     fn foo() {}
   |        ^^^ ...because associated function `foo` has no `self` parameter
   = help: only type `Bar` implements the trait, consider using it directly instead
   = note: required for the cast from `Box<Bar>` to `Box<dyn Foo>`
help: consider turning `foo` into a method by giving it a `&self` argument
   |
LL |     fn foo(&self) {}
   |            +++++
help: alternatively, consider constraining `foo` so it does not apply to trait objects
   |
LL |     fn foo() where Self: Sized {}
   |              +++++++++++++++++

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0038`.
