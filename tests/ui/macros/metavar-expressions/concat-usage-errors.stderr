error: `concat` must have at least two elements
  --> $DIR/concat-usage-errors.rs:7:11
   |
LL |         ${concat()}
   |           ^^^^^^

error: `concat` must have at least two elements
  --> $DIR/concat-usage-errors.rs:10:11
   |
LL |         ${concat(aaaa)}
   |           ^^^^^^

error: `concat` must have at least two elements
  --> $DIR/concat-usage-errors.rs:13:11
   |
LL |         ${concat(aaaa,)}
   |           ^^^^^^

error: expected comma
  --> $DIR/concat-usage-errors.rs:18:10
   |
LL |         ${concat(aaaa aaaa)}
   |          ^^^^^^^^^^^^^^^^^^^

error: `concat` must have at least two elements
  --> $DIR/concat-usage-errors.rs:21:11
   |
LL |         ${concat($ex)}
   |           ^^^^^^

error: expected comma
  --> $DIR/concat-usage-errors.rs:27:10
   |
LL |         ${concat($ex, aaaa 123)}
   |          ^^^^^^^^^^^^^^^^^^^^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:56:22
   |
LL |         let ${concat("\u{00BD}", $ident)}: () = ();
   |                      ^^^^^^^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:76:30
   |
LL |         let ${concat($ident, "\u{00BD}")}: () = ();
   |                              ^^^^^^^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:91:26
   |
LL |         let ${concat(_a, 1.5)}: () = ();
   |                          ^^^
   |
   = note: float literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:94:26
   |
LL |         let ${concat(_a, c"hi")}: () = ();
   |                          ^^^^^
   |
   = note: C string literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:96:26
   |
LL |         let ${concat(_a, b"hi")}: () = ();
   |                          ^^^^^
   |
   = note: byte literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:98:26
   |
LL |         let ${concat(_a, b'b')}: () = ();
   |                          ^^^^
   |
   = note: byte literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:100:26
   |
LL |         let ${concat(_a, b'b')}: () = ();
   |                          ^^^^
   |
   = note: byte literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:103:30
   |
LL |         let ${concat($ident, 1.5)}: () = ();
   |                              ^^^
   |
   = note: float literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:105:30
   |
LL |         let ${concat($ident, c"hi")}: () = ();
   |                              ^^^^^
   |
   = note: C string literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:107:30
   |
LL |         let ${concat($ident, b"hi")}: () = ();
   |                              ^^^^^
   |
   = note: byte literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:109:30
   |
LL |         let ${concat($ident, b'b')}: () = ();
   |                              ^^^^
   |
   = note: byte literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:111:30
   |
LL |         let ${concat($ident, b'b')}: () = ();
   |                              ^^^^
   |
   = note: byte literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:150:20
   |
LL |         ${concat($ex, aaaa)}
   |                   -- expanding this metavariable
...
LL |     syntax_errors!(1);
   |                    ^
   |
   = note: expanding something
   = note: `${concat(..)}` can join metavariables of type `ident`, `literal`, and `tt`

error: variable `foo` is not recognized in meta-variable expression
  --> $DIR/concat-usage-errors.rs:36:30
   |
LL |         const ${concat(FOO, $foo)}: i32 = 2;
   |                              ^^^

error: `${concat(..)}` is not generating a valid identifier
  --> $DIR/concat-usage-errors.rs:43:14
   |
LL |         let ${concat("1", $ident)}: () = ();
   |              ^^^^^^^^^^^^^^^^^^^^^
...
LL |     starting_number!(_abc);
   |     ---------------------- in this macro invocation
   |
   = note: this error originates in the macro `starting_number` (in Nightly builds, run with -Z macro-backtrace for more info)

error: expected pattern, found `$`
  --> $DIR/concat-usage-errors.rs:56:13
   |
LL |         let ${concat("\u{00BD}", $ident)}: () = ();
   |             ^ expected pattern
...
LL |     starting_invalid_unicode!(_abc);
   |     ------------------------------- in this macro invocation
   |
   = note: this error originates in the macro `starting_invalid_unicode` (in Nightly builds, run with -Z macro-backtrace for more info)

error: expected pattern, found `$`
  --> $DIR/concat-usage-errors.rs:76:13
   |
LL |         let ${concat($ident, "\u{00BD}")}: () = ();
   |             ^ expected pattern
...
LL |     ending_invalid_unicode!(_abc);
   |     ----------------------------- in this macro invocation
   |
   = note: this error originates in the macro `ending_invalid_unicode` (in Nightly builds, run with -Z macro-backtrace for more info)

error: expected pattern, found `$`
  --> $DIR/concat-usage-errors.rs:91:13
   |
LL |         let ${concat(_a, 1.5)}: () = ();
   |             ^ expected pattern
...
LL |     unsupported_literals!(_abc);
   |     --------------------------- in this macro invocation
   |
   = note: this error originates in the macro `unsupported_literals` (in Nightly builds, run with -Z macro-backtrace for more info)

error: `${concat(..)}` is not generating a valid identifier
  --> $DIR/concat-usage-errors.rs:84:14
   |
LL |         let ${concat("", "")}: () = ();
   |              ^^^^^^^^^^^^^^^^
...
LL |     empty!();
   |     -------- in this macro invocation
   |
   = note: this error originates in the macro `empty` (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:165:25
   |
LL |     bad_literal_string!("\u{00BD}");
   |                         ^^^^^^^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:167:25
   |
LL |     bad_literal_string!("ðŸ¤·");
   |                         ^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:168:25
   |
LL |     bad_literal_string!("d[-_-]b");
   |                         ^^^^^^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:170:25
   |
LL |     bad_literal_string!("-1");
   |                         ^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:171:25
   |
LL |     bad_literal_string!("1.0");
   |                         ^^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:172:25
   |
LL |     bad_literal_string!("'1'");
   |                         ^^^^^

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:175:29
   |
LL |         const ${concat(_foo, $literal)}: () = ();
   |                               ------- expanding this metavariable
...
LL |     bad_literal_non_string!(-1);
   |                             ^^
   |
   = note: expanding something
   = note: `${concat(..)}` can join metavariables of type `ident`, `literal`, and `tt`

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:176:29
   |
LL |     bad_literal_non_string!(1.0);
   |                             ^^^
   |
   = note: float literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error[E0428]: the name `_foo1` is defined multiple times
  --> $DIR/concat-usage-errors.rs:131:9
   |
LL |         const ${concat(_foo, $literal)}: () = ();
   |         ^^^^^^^
   |         |
   |         `_foo1` redefined here
   |         previous definition of the value `_foo1` here
...
LL |     bad_literal_non_string!(1);
   |     -------------------------- in this macro invocation
   |
   = note: `_foo1` must be defined only once in the value namespace of this block
   = note: this error originates in the macro `bad_literal_non_string` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0428]: the name `_foo1` is defined multiple times
  --> $DIR/concat-usage-errors.rs:142:9
   |
LL |         const ${concat(_foo, $literal)}: () = ();
   |         ------- previous definition of the value `_foo1` here
...
LL |         const ${concat(_foo, $tt)}: () = ();
   |         ^^^^^^^ `_foo1` redefined here
...
LL |     bad_tt_literal!(1);
   |     ------------------ in this macro invocation
   |
   = note: `_foo1` must be defined only once in the value namespace of this block
   = note: this error originates in the macro `bad_tt_literal` (in Nightly builds, run with -Z macro-backtrace for more info)

error: invalid item within a `${concat(..)}` expression
  --> $DIR/concat-usage-errors.rs:181:21
   |
LL |     bad_tt_literal!(1.0);
   |                     ^^^
   |
   = note: float literals cannot be concatenated
   = note: `concat` can join metavariables, identifiers, string literals, and integer literals

error[E0428]: the name `_foo1` is defined multiple times
  --> $DIR/concat-usage-errors.rs:142:9
   |
LL |         const ${concat(_foo, $literal)}: () = ();
   |         ------- previous definition of the value `_foo1` here
...
LL |         const ${concat(_foo, $tt)}: () = ();
   |         ^^^^^^^ `_foo1` redefined here
...
LL |     bad_tt_literal!('1');
   |     -------------------- in this macro invocation
   |
   = note: `_foo1` must be defined only once in the value namespace of this block
   = note: this error originates in the macro `bad_tt_literal` (in Nightly builds, run with -Z macro-backtrace for more info)

error: aborting due to 37 previous errors

For more information about this error, try `rustc --explain E0428`.
