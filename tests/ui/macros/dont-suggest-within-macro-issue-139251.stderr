error[E0277]: can't compare `&{integer}` with `{integer}`
  --> $DIR/dont-suggest-within-macro-issue-139251.rs:11:15
   |
LL |     assert!(y == 1);
   |               ^^ no implementation for `&{integer} == {integer}`
   |
   = help: the trait `PartialEq<{integer}>` is not implemented for `&{integer}`
help: consider dereferencing here
   |
LL |     assert!(*y == 1);
   |             +

error[E0277]: can't compare `&{integer}` with `{integer}`
  --> $DIR/dont-suggest-within-macro-issue-139251.rs:12:5
   |
LL |     assert_eq!(y, 2);
   |     ^^^^^^^^^^^^^^^^ no implementation for `&{integer} == {integer}`
   |
   = help: the trait `PartialEq<{integer}>` is not implemented for `&{integer}`
   = help: the following other types implement trait `PartialEq<Rhs>`:
             f128
             f16
             f32
             f64
             i128
             i16
             i32
             i64
           and 8 others
   = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `&{integer}` with `{integer}`
  --> $DIR/dont-suggest-within-macro-issue-139251.rs:4:15
   |
LL |         $left == $right
   |               ^^ no implementation for `&{integer} == {integer}`
...
LL |     is_equal!(y, 2);
   |     --------------- in this macro invocation
   |
   = help: the trait `PartialEq<{integer}>` is not implemented for `&{integer}`
   = note: this error originates in the macro `is_equal` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider dereferencing here
   |
LL |     is_equal!(*y, 2);
   |               +

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0277`.
