error: `[u8; 0]` is forbidden as the type of a const generic parameter
  --> $DIR/complex-types.rs:3:21
   |
LL | struct Foo<const N: [u8; 0]>;
   |                     ^^^^^^^
   |
   = note: the only supported types are integers, `bool`, and `char`
help: add `#![feature(adt_const_params)]` to the crate attributes to enable more complex and user defined types
   |
LL + #![feature(adt_const_params)]
   |

error: `()` is forbidden as the type of a const generic parameter
  --> $DIR/complex-types.rs:6:21
   |
LL | struct Bar<const N: ()>;
   |                     ^^
   |
   = note: the only supported types are integers, `bool`, and `char`
help: add `#![feature(adt_const_params)]` to the crate attributes to enable more complex and user defined types
   |
LL + #![feature(adt_const_params)]
   |

error: `No` is forbidden as the type of a const generic parameter
  --> $DIR/complex-types.rs:11:21
   |
LL | struct Fez<const N: No>;
   |                     ^^
   |
   = note: the only supported types are integers, `bool`, and `char`
help: add `#![feature(adt_const_params)]` to the crate attributes to enable more complex and user defined types
   |
LL + #![feature(adt_const_params)]
   |

error: `&'static u8` is forbidden as the type of a const generic parameter
  --> $DIR/complex-types.rs:14:21
   |
LL | struct Faz<const N: &'static u8>;
   |                     ^^^^^^^^^^^
   |
   = note: the only supported types are integers, `bool`, and `char`
help: add `#![feature(adt_const_params)]` to the crate attributes to enable more complex and user defined types
   |
LL + #![feature(adt_const_params)]
   |
help: add `#![feature(unsized_const_params)]` to the crate attributes to enable references to implement the `ConstParamTy` trait
   |
LL + #![feature(unsized_const_params)]
   |

error: `!` is forbidden as the type of a const generic parameter
  --> $DIR/complex-types.rs:17:21
   |
LL | struct Fiz<const N: !>;
   |                     ^
   |
   = note: the only supported types are integers, `bool`, and `char`

error: `()` is forbidden as the type of a const generic parameter
  --> $DIR/complex-types.rs:20:19
   |
LL | enum Goo<const N: ()> { A, B }
   |                   ^^
   |
   = note: the only supported types are integers, `bool`, and `char`
help: add `#![feature(adt_const_params)]` to the crate attributes to enable more complex and user defined types
   |
LL + #![feature(adt_const_params)]
   |

error: `()` is forbidden as the type of a const generic parameter
  --> $DIR/complex-types.rs:23:20
   |
LL | union Boo<const N: ()> { a: () }
   |                    ^^
   |
   = note: the only supported types are integers, `bool`, and `char`
help: add `#![feature(adt_const_params)]` to the crate attributes to enable more complex and user defined types
   |
LL + #![feature(adt_const_params)]
   |

error: aborting due to 7 previous errors

