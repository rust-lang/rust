error[E0207]: the type parameter `S` is not constrained by the impl trait, self type, or predicates
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:9:9
   |
LL | impl<T, S> Trait<T> for i32 {
   |         ^ unconstrained type parameter

error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:15:12
   |
LL | impl<T, S> Trait<T, S> for () {}
   |            ^^^^^ expected 1 generic argument
   |
note: trait defined here, with 1 generic parameter: `T`
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:5:11
   |
LL | pub trait Trait<T> {
   |           ^^^^^ -

error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:19:12
   |
LL | fn func<T: Trait<u32, String>>(t: T) -> impl Trait<(), i32> {
   |            ^^^^^ expected 1 generic argument
   |
note: trait defined here, with 1 generic parameter: `T`
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:5:11
   |
LL | pub trait Trait<T> {
   |           ^^^^^ -
help: replace the generic bound with the associated type
   |
LL | fn func<T: Trait<u32, Assoc = String>>(t: T) -> impl Trait<(), i32> {
   |                       +++++++

error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:19:46
   |
LL | fn func<T: Trait<u32, String>>(t: T) -> impl Trait<(), i32> {
   |                                              ^^^^^ expected 1 generic argument
   |
note: trait defined here, with 1 generic parameter: `T`
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:5:11
   |
LL | pub trait Trait<T> {
   |           ^^^^^ -
help: replace the generic bound with the associated type
   |
LL | fn func<T: Trait<u32, String>>(t: T) -> impl Trait<(), Assoc = i32> {
   |                                                        +++++++

error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:19:46
   |
LL | fn func<T: Trait<u32, String>>(t: T) -> impl Trait<(), i32> {
   |                                              ^^^^^ expected 1 generic argument
   |
note: trait defined here, with 1 generic parameter: `T`
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:5:11
   |
LL | pub trait Trait<T> {
   |           ^^^^^ -
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`
help: replace the generic bound with the associated type
   |
LL | fn func<T: Trait<u32, String>>(t: T) -> impl Trait<(), Assoc = i32> {
   |                                                        +++++++

error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:26:18
   |
LL | struct Struct<T: Trait<u32, String>> {
   |                  ^^^^^ expected 1 generic argument
   |
note: trait defined here, with 1 generic parameter: `T`
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:5:11
   |
LL | pub trait Trait<T> {
   |           ^^^^^ -
help: replace the generic bound with the associated type
   |
LL | struct Struct<T: Trait<u32, Assoc = String>> {
   |                             +++++++

error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:31:23
   |
LL | trait AnotherTrait<T: Trait<T, i32>> {}
   |                       ^^^^^ expected 1 generic argument
   |
note: trait defined here, with 1 generic parameter: `T`
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:5:11
   |
LL | pub trait Trait<T> {
   |           ^^^^^ -
help: replace the generic bound with the associated type
   |
LL | trait AnotherTrait<T: Trait<T, Assoc = i32>> {}
   |                                +++++++

error[E0107]: trait takes 1 generic argument but 2 generic arguments were supplied
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:34:9
   |
LL | impl<T: Trait<u32, String>> Struct<T> {}
   |         ^^^^^ expected 1 generic argument
   |
note: trait defined here, with 1 generic parameter: `T`
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:5:11
   |
LL | pub trait Trait<T> {
   |           ^^^^^ -
help: replace the generic bound with the associated type
   |
LL | impl<T: Trait<u32, Assoc = String>> Struct<T> {}
   |                    +++++++

error[E0107]: struct takes 1 generic argument but 2 generic arguments were supplied
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:40:58
   |
LL | impl<T: Trait<u32, Assoc=String>, U> YetAnotherTrait for Struct<T, U> {}
   |                                                          ^^^^^^  --- help: remove the unnecessary generic argument
   |                                                          |
   |                                                          expected 1 generic argument
   |
note: struct defined here, with 1 generic parameter: `T`
  --> $DIR/116464-invalid-assoc-type-suggestion-in-trait-impl.rs:26:8
   |
LL | struct Struct<T: Trait<u32, String>> {
   |        ^^^^^^ -

error: aborting due to 9 previous errors

Some errors have detailed explanations: E0107, E0207.
For more information about an error, try `rustc --explain E0107`.
