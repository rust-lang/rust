error: `~const` is not allowed here
  --> $DIR/tilde-const-and-const-params.rs:8:15
   |
LL |     fn add<A: ~const Add42>(self) -> Foo<{ A::add(N) }> {
   |               ^^^^^^
   |
note: this function is not `const`, so it cannot have `~const` trait bounds
  --> $DIR/tilde-const-and-const-params.rs:8:8
   |
LL |     fn add<A: ~const Add42>(self) -> Foo<{ A::add(N) }> {
   |        ^^^

error: `~const` is not allowed here
  --> $DIR/tilde-const-and-const-params.rs:26:11
   |
LL | fn bar<A: ~const Add42, const N: usize>(_: Foo<N>) -> Foo<{ A::add(N) }> {
   |           ^^^^^^
   |
note: this function is not `const`, so it cannot have `~const` trait bounds
  --> $DIR/tilde-const-and-const-params.rs:26:4
   |
LL | fn bar<A: ~const Add42, const N: usize>(_: Foo<N>) -> Foo<{ A::add(N) }> {
   |    ^^^

error[E0277]: the trait bound `A: const Add42` is not satisfied
  --> $DIR/tilde-const-and-const-params.rs:26:61
   |
LL | fn bar<A: ~const Add42, const N: usize>(_: Foo<N>) -> Foo<{ A::add(N) }> {
   |                                                             ^

error[E0277]: the trait bound `A: const Add42` is not satisfied
  --> $DIR/tilde-const-and-const-params.rs:8:44
   |
LL |     fn add<A: ~const Add42>(self) -> Foo<{ A::add(N) }> {
   |                                            ^

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0277`.
