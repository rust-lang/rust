error[E0038]: the trait `FromResidual` cannot be made into an object
  --> $DIR/canonicalize-fresh-infer-vars-issue-103626.rs:10:17
   |
LL |     let b: &dyn FromResidual = &();
   |                 ^^^^^^^^^^^^
   |
   = note: it cannot use `Self` as a type parameter in a supertrait or `where`-clause

error[E0038]: the trait `FromResidual` cannot be made into an object
  --> $DIR/canonicalize-fresh-infer-vars-issue-103626.rs:10:32
   |
LL |     let b: &dyn FromResidual = &();
   |                                ^^^ `FromResidual` cannot be made into an object
   |
note: for a trait to be "dyn-compatible" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/canonicalize-fresh-infer-vars-issue-103626.rs:2:8
   |
LL | trait FromResidual<R = <Self as Try>::Residual> {
   |       ------------ this trait cannot be made into an object...
LL |     fn from_residual(residual: R) -> Self;
   |        ^^^^^^^^^^^^^ ...because associated function `from_residual` has no `self` parameter
   = note: required for the cast from `&()` to `&dyn FromResidual<{type error}>`
help: consider turning `from_residual` into a method by giving it a `&self` argument
   |
LL |     fn from_residual(&self, residual: R) -> Self;
   |                      ++++++
help: alternatively, consider constraining `from_residual` so it does not apply to trait objects
   |
LL |     fn from_residual(residual: R) -> Self where Self: Sized;
   |                                           +++++++++++++++++

error[E0038]: the trait `FromResidual` cannot be made into an object
  --> $DIR/canonicalize-fresh-infer-vars-issue-103626.rs:10:12
   |
LL |     let b: &dyn FromResidual = &();
   |            ^^^^^^^^^^^^^^^^^ `FromResidual` cannot be made into an object
   |
note: for a trait to be "dyn-compatible" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/canonicalize-fresh-infer-vars-issue-103626.rs:2:8
   |
LL | trait FromResidual<R = <Self as Try>::Residual> {
   |       ------------ this trait cannot be made into an object...
LL |     fn from_residual(residual: R) -> Self;
   |        ^^^^^^^^^^^^^ ...because associated function `from_residual` has no `self` parameter
help: consider turning `from_residual` into a method by giving it a `&self` argument
   |
LL |     fn from_residual(&self, residual: R) -> Self;
   |                      ++++++
help: alternatively, consider constraining `from_residual` so it does not apply to trait objects
   |
LL |     fn from_residual(residual: R) -> Self where Self: Sized;
   |                                           +++++++++++++++++

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0038`.
