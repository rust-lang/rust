error[E0038]: the trait `Tr` cannot be made into an object
  --> $DIR/safety.rs:15:22
   |
LL |     let _: &dyn Tr = &St;
   |                      ^^^ `Tr` cannot be made into an object
   |
note: for a trait to be "dyn-compatible" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/safety.rs:4:8
   |
LL | trait Tr {
   |       -- this trait cannot be made into an object...
LL |     fn foo();
   |        ^^^ ...because associated function `foo` has no `self` parameter
   = help: only type `St` implements the trait, consider using it directly instead
   = note: required for the cast from `&St` to `&dyn Tr`
help: consider turning `foo` into a method by giving it a `&self` argument
   |
LL |     fn foo(&self);
   |            +++++
help: alternatively, consider constraining `foo` so it does not apply to trait objects
   |
LL |     fn foo() where Self: Sized;
   |              +++++++++++++++++

error[E0038]: the trait `Tr` cannot be made into an object
  --> $DIR/safety.rs:15:12
   |
LL |     let _: &dyn Tr = &St;
   |            ^^^^^^^ `Tr` cannot be made into an object
   |
note: for a trait to be "dyn-compatible" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/safety.rs:4:8
   |
LL | trait Tr {
   |       -- this trait cannot be made into an object...
LL |     fn foo();
   |        ^^^ ...because associated function `foo` has no `self` parameter
   = help: only type `St` implements the trait, consider using it directly instead
help: consider turning `foo` into a method by giving it a `&self` argument
   |
LL |     fn foo(&self);
   |            +++++
help: alternatively, consider constraining `foo` so it does not apply to trait objects
   |
LL |     fn foo() where Self: Sized;
   |              +++++++++++++++++

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0038`.
