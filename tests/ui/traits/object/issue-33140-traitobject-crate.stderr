warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)
  --> $DIR/issue-33140-traitobject-crate.rs:86:1
   |
LL | unsafe impl Trait for dyn (::std::marker::Send) + Sync { }
   | ------------------------------------------------------ first implementation here
LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>
note: the lint level is defined here
  --> $DIR/issue-33140-traitobject-crate.rs:3:9
   |
LL | #![warn(order_dependent_trait_objects)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)
  --> $DIR/issue-33140-traitobject-crate.rs:89:1
   |
LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }
   | ------------------------------------------------------------- first implementation here
...
LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send { }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>

warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)
  --> $DIR/issue-33140-traitobject-crate.rs:93:1
   |
LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send { }
   | ------------------------------------------------------ first implementation here
...
LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send + Sync { }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>

warning: 3 warnings emitted

Future incompatibility report: Future breakage diagnostic:
warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)
  --> $DIR/issue-33140-traitobject-crate.rs:86:1
   |
LL | unsafe impl Trait for dyn (::std::marker::Send) + Sync { }
   | ------------------------------------------------------ first implementation here
LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>
note: the lint level is defined here
  --> $DIR/issue-33140-traitobject-crate.rs:3:9
   |
LL | #![warn(order_dependent_trait_objects)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Future breakage diagnostic:
warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)
  --> $DIR/issue-33140-traitobject-crate.rs:89:1
   |
LL | unsafe impl Trait for dyn (::std::marker::Send) + Send + Sync { }
   | ------------------------------------------------------------- first implementation here
...
LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send { }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>
note: the lint level is defined here
  --> $DIR/issue-33140-traitobject-crate.rs:3:9
   |
LL | #![warn(order_dependent_trait_objects)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Future breakage diagnostic:
warning: conflicting implementations of trait `Trait` for type `(dyn Send + Sync + 'static)`: (E0119)
  --> $DIR/issue-33140-traitobject-crate.rs:93:1
   |
LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send { }
   | ------------------------------------------------------ first implementation here
...
LL | unsafe impl Trait for dyn (::std::marker::Sync) + Send + Sync { }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Send + Sync + 'static)`
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #56484 <https://github.com/rust-lang/rust/issues/56484>
note: the lint level is defined here
  --> $DIR/issue-33140-traitobject-crate.rs:3:9
   |
LL | #![warn(order_dependent_trait_objects)]
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

