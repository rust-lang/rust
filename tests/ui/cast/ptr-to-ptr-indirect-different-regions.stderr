error: lifetime may not live long enough
  --> $DIR/ptr-to-ptr-indirect-different-regions.rs:8:5
   |
LL | fn bar<'a>(a: *mut MyWrap<(dyn Trait + 'a)>) -> *mut MyWrap<(dyn Trait + 'static)> {
   |        -- lifetime `'a` defined here
LL |     a as _
   |     ^^^^^^ returning this value requires that `'a` must outlive `'static`
   |
   = note: requirement occurs because of a mutable pointer to `MyWrap<dyn Trait>`
   = note: mutable pointers are invariant over their type parameter
   = help: see <https://doc.rust-lang.org/nomicon/subtyping.html> for more information about variance
note: raw pointer casts of trait objects do not cast away lifetimes
  --> $DIR/ptr-to-ptr-indirect-different-regions.rs:8:5
   |
LL |     a as _
   |     ^^^^^^
   = note: this was previously accepted by the compiler but was changed recently
   = help: see <https://github.com/rust-lang/rust/issues/141402> for more information
help: consider changing the trait object's explicit `'static` bound to the lifetime of argument `a`
   |
LL - fn bar<'a>(a: *mut MyWrap<(dyn Trait + 'a)>) -> *mut MyWrap<(dyn Trait + 'static)> {
LL + fn bar<'a>(a: *mut MyWrap<(dyn Trait + 'a)>) -> *mut MyWrap<(dyn Trait + 'a)> {
   |
help: alternatively, add an explicit `'static` bound to this reference
   |
LL - fn bar<'a>(a: *mut MyWrap<(dyn Trait + 'a)>) -> *mut MyWrap<(dyn Trait + 'static)> {
LL + fn bar<'a>(a: *mut MyWrap<(dyn Trait + 'static)>) -> *mut MyWrap<(dyn Trait + 'static)> {
   |

error: aborting due to 1 previous error

