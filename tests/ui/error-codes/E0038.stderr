error[E0038]: the trait `Trait` is not dyn compatible
  --> $DIR/E0038.rs:5:20
   |
LL | fn call_foo(x: Box<dyn Trait>) {
   |                    ^^^^^^^^^ `Trait` is not dyn compatible
   |
note: for a trait to be dyn compatible it needs to allow building a vtable
      for more information, visit <https://doc.rust-lang.org/reference/items/traits.html#dyn-compatibility>
  --> $DIR/E0038.rs:2:22
   |
LL | trait Trait {
   |       ----- this trait is not dyn compatible...
LL |     fn foo(&self) -> Self;
   |                      ^^^^ ...because method `foo` references the `Self` type in its return type
   = help: consider moving `foo` to another trait

error[E0038]: the trait `Trait` is not dyn compatible
  --> $DIR/E0038.rs:7:13
   |
LL |     let y = x.foo();
   |             ^^^^^^^ `Trait` is not dyn compatible
   |
note: for a trait to be dyn compatible it needs to allow building a vtable
      for more information, visit <https://doc.rust-lang.org/reference/items/traits.html#dyn-compatibility>
  --> $DIR/E0038.rs:2:22
   |
LL | trait Trait {
   |       ----- this trait is not dyn compatible...
LL |     fn foo(&self) -> Self;
   |                      ^^^^ ...because method `foo` references the `Self` type in its return type
   = help: consider moving `foo` to another trait

error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time
  --> $DIR/E0038.rs:7:9
   |
LL |     let y = x.foo();
   |         ^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `dyn Trait`
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature

error: aborting due to 3 previous errors

Some errors have detailed explanations: E0038, E0277.
For more information about an error, try `rustc --explain E0038`.
