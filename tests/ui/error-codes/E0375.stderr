error[E0277]: the size for values of type `T` cannot be known at compilation time
  --> $DIR/E0375.rs:6:8
   |
LL | struct Foo<T: ?Sized, U: ?Sized> {
   |            - this type parameter needs to be `Sized`
LL |     a: i32,
LL |     b: T,
   |        ^ doesn't have a size known at compile-time
   |
   = note: only the last field of a struct may have a dynamically sized type
   = help: change the field's type to have a statically known size
help: consider removing the `?Sized` bound to make the type parameter `Sized`
   |
LL - struct Foo<T: ?Sized, U: ?Sized> {
LL + struct Foo<T, U: ?Sized> {
   |
help: borrowed types always have a statically known size
   |
LL |     b: &T,
   |        +
help: the `Box` type always has a statically known size and allocates its contents in the heap
   |
LL |     b: Box<T>,
   |        ++++ +

error[E0375]: implementing the trait `CoerceUnsized` requires multiple coercions
  --> $DIR/E0375.rs:10:12
   |
LL | impl<T, U> CoerceUnsized<Foo<U, T>> for Foo<T, U> {}
   |            ^^^^^^^^^^^^^^^^^^^^^^^^ requires multiple coercions
   |
   = note: `CoerceUnsized` may only be implemented for a coercion between structures with one field being coerced
   = note: currently, 2 fields need coercions: `b` (`T` to `U`), `c` (`U` to `T`)

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0277, E0375.
For more information about an error, try `rustc --explain E0277`.
