warning: associated type bound for `S` in `dyn HttpService` differs from associated type bound from supertrait
  --> $DIR/issue-59326.rs:15:43
   |
LL | trait HttpService<F: Framing>: Service<S = F::F> {}
   |                                        -------- shadowed due to this supertrait bound
LL |
LL | type BoxService = Box<dyn HttpService<(), S = ()>>;
   |                                           ^^^^^^ this bound has no effect and will be ignored
   |
   = note: `S = <() as Framing>::F` was implied by a supertrait and shadows any user-written bounds, so `S = ()` will be ignored
   = note: `#[warn(dyn_assoc_shadowed)]` on by default

warning: associated type bound for `S` in `dyn HttpService` is redundant
  --> $DIR/issue-59326.rs:20:56
   |
LL | trait HttpService<F: Framing>: Service<S = F::F> {}
   |                                        -------- redundant due to this supertrait bound
...
LL | fn make_server<F: Framing>() -> Box<dyn HttpService<F, S = F::F>> {
   |                                                        ^^^^^^^^
   |
   = note: `#[warn(dyn_assoc_redundant)]` on by default

error[E0308]: mismatched types
  --> $DIR/issue-59326.rs:26:21
   |
LL |     build_server(|| make_server())
   |                     ^^^^^^^^^^^^^ expected trait `HttpService<(), S = ()>`, found trait `HttpService<_>`
   |
   = note: expected struct `Box<(dyn HttpService<(), S = ()> + 'static)>`
              found struct `Box<(dyn HttpService<_> + 'static)>`

error: aborting due to 1 previous error; 2 warnings emitted

For more information about this error, try `rustc --explain E0308`.
