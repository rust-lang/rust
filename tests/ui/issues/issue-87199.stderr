warning: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default
  --> $DIR/issue-87199.rs:8:11
   |
LL | fn arg<T: ?Send>(_: T) {}
   |           ^^^^^

warning: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default
  --> $DIR/issue-87199.rs:10:15
   |
LL | fn ref_arg<T: ?Send>(_: &T) {}
   |               ^^^^^

warning: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default
  --> $DIR/issue-87199.rs:12:40
   |
LL | fn ret() -> impl Iterator<Item = ()> + ?Send { std::iter::empty() }
   |                                        ^^^^^

warning: relaxing a default bound only does something for `?Sized`; all other traits are not bound by default
  --> $DIR/issue-87199.rs:12:40
   |
LL | fn ret() -> impl Iterator<Item = ()> + ?Send { std::iter::empty() }
   |                                        ^^^^^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0277]: the size for values of type `[i32]` cannot be known at compilation time
  --> $DIR/issue-87199.rs:19:15
   |
LL |     ref_arg::<[i32]>(&[5]);
   |               ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[i32]`
note: required by an implicit `Sized` bound in `ref_arg`
  --> $DIR/issue-87199.rs:10:12
   |
LL | fn ref_arg<T: ?Send>(_: &T) {}
   |            ^ required by the implicit `Sized` requirement on this type parameter in `ref_arg`
help: consider relaxing the implicit `Sized` restriction
   |
LL | fn ref_arg<T: ?Send + ?Sized>(_: &T) {}
   |                     ++++++++

error: aborting due to 1 previous error; 4 warnings emitted

For more information about this error, try `rustc --explain E0277`.
