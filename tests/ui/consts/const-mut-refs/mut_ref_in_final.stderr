error[E0764]: mutable references are not allowed in the final value of constants
  --> $DIR/mut_ref_in_final.rs:14:21
   |
LL | const B: *mut i32 = &mut 4;
   |                     ^^^^^^

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:20:40
   |
LL | const B3: Option<&mut i32> = Some(&mut 42);
   |                              ----------^^-
   |                              |         | |
   |                              |         | temporary value is freed at the end of this statement
   |                              |         creates a temporary value which is freed while still in use
   |                              using this value as a constant requires that borrow lasts for `'static`

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:23:42
   |
LL | const B4: Option<&mut i32> = helper(&mut 42);
   |                              ------------^^-
   |                              |           | |
   |                              |           | temporary value is freed at the end of this statement
   |                              |           creates a temporary value which is freed while still in use
   |                              using this value as a constant requires that borrow lasts for `'static`

error[E0080]: it is undefined behavior to use this value
  --> $DIR/mut_ref_in_final.rs:26:1
   |
LL | const IMMUT_MUT_REF: &mut u16 = unsafe { mem::transmute(&13) };
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value: encountered mutable reference or box pointing to read-only memory
   |
   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.
   = note: the raw bytes of the constant (size: $SIZE, align: $ALIGN) {
               HEX_DUMP
           }

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:50:65
   |
LL | const FOO: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));
   |                                  -------------------------------^^--
   |                                  |                              |  |
   |                                  |                              |  temporary value is freed at the end of this statement
   |                                  |                              creates a temporary value which is freed while still in use
   |                                  using this value as a constant requires that borrow lasts for `'static`

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:53:67
   |
LL | static FOO2: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));
   |                                    -------------------------------^^--
   |                                    |                              |  |
   |                                    |                              |  temporary value is freed at the end of this statement
   |                                    |                              creates a temporary value which is freed while still in use
   |                                    using this value as a static requires that borrow lasts for `'static`

error[E0716]: temporary value dropped while borrowed
  --> $DIR/mut_ref_in_final.rs:56:71
   |
LL | static mut FOO3: NotAMutex<&mut i32> = NotAMutex(UnsafeCell::new(&mut 42));
   |                                        -------------------------------^^--
   |                                        |                              |  |
   |                                        |                              |  temporary value is freed at the end of this statement
   |                                        |                              creates a temporary value which is freed while still in use
   |                                        using this value as a static requires that borrow lasts for `'static`

error[E0764]: mutable references are not allowed in the final value of statics
  --> $DIR/mut_ref_in_final.rs:69:53
   |
LL | static RAW_MUT_CAST_S: SyncPtr<i32> = SyncPtr { x : &mut 42 as *mut _ as *const _ };
   |                                                     ^^^^^^^

error[E0764]: mutable references are not allowed in the final value of statics
  --> $DIR/mut_ref_in_final.rs:71:54
   |
LL | static RAW_MUT_COERCE_S: SyncPtr<i32> = SyncPtr { x: &mut 0 };
   |                                                      ^^^^^^

error[E0764]: mutable references are not allowed in the final value of constants
  --> $DIR/mut_ref_in_final.rs:73:52
   |
LL | const RAW_MUT_CAST_C: SyncPtr<i32> = SyncPtr { x : &mut 42 as *mut _ as *const _ };
   |                                                    ^^^^^^^

error[E0764]: mutable references are not allowed in the final value of constants
  --> $DIR/mut_ref_in_final.rs:75:53
   |
LL | const RAW_MUT_COERCE_C: SyncPtr<i32> = SyncPtr { x: &mut 0 };
   |                                                     ^^^^^^

error: aborting due to 11 previous errors

Some errors have detailed explanations: E0080, E0716, E0764.
For more information about an error, try `rustc --explain E0080`.
