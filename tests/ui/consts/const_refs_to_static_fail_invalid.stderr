error[E0080]: constructing invalid value at .<deref>: encountered 0x0a, but expected a boolean
  --> $DIR/const_refs_to_static_fail_invalid.rs:10:5
   |
LL |     const C: &bool = unsafe { std::mem::transmute(&S) };
   |     ^^^^^^^^^^^^^^ it is undefined behavior to use this value
   |
   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.
   = note: the raw bytes of the constant (size: $SIZE, align: $ALIGN) {
               HEX_DUMP
           }

error[E0080]: constructing invalid value: encountered reference to `extern` static in `const`
  --> $DIR/const_refs_to_static_fail_invalid.rs:25:5
   |
LL |     const C: &i8 = unsafe { &S };
   |     ^^^^^^^^^^^^ it is undefined behavior to use this value
   |
   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.
   = note: the raw bytes of the constant (size: $SIZE, align: $ALIGN) {
               HEX_DUMP
           }

error[E0080]: constructing invalid value: encountered reference to mutable memory in `const`
  --> $DIR/const_refs_to_static_fail_invalid.rs:38:5
   |
LL |     const C: &i32 = unsafe { &S_MUT };
   |     ^^^^^^^^^^^^^ it is undefined behavior to use this value
   |
   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.
   = note: the raw bytes of the constant (size: $SIZE, align: $ALIGN) {
               HEX_DUMP
           }

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0080`.
