warning: `#[diagnostic::on_unimplemented]` can only be applied to trait definitions
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:8:1
   |
LL | #[diagnostic::on_unimplemented(message = "Baz")]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unknown_or_malformed_diagnostic_attributes)]` on by default

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:3:32
   |
LL | #[diagnostic::on_unimplemented(unsupported = "foo")]
   |                                ^^^^^^^^^^^^^^^^^^^ invalid option found here
   |
   = help: only `message`, `note` and `label` are allowed as options

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:12:50
   |
LL | #[diagnostic::on_unimplemented(message = "Boom", unsupported = "Bar")]
   |                                                  ^^^^^^^^^^^^^^^^^^^ invalid option found here
   |
   = help: only `message`, `note` and `label` are allowed as options

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:17:50
   |
LL | #[diagnostic::on_unimplemented(message = "Boom", on(_Self = "i32", message = "whatever"))]
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid option found here
   |
   = help: only `message`, `note` and `label` are allowed as options

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:22:32
   |
LL | #[diagnostic::on_unimplemented = "boom"]
   |                                ^^^^^^^^ invalid option found here
   |
   = help: only `message`, `note` and `label` are allowed as options

warning: missing options for `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:26:1
   |
LL | #[diagnostic::on_unimplemented]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: at least one of the `message`, `note` and `label` options are expected

warning: there is no parameter `DoesNotExist` on trait `Test`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:31:32
   |
LL | #[diagnostic::on_unimplemented(message = "{DoesNotExist}")]
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: expect either a generic argument name or `{Self}` as format argument

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:3:32
   |
LL | #[diagnostic::on_unimplemented(unsupported = "foo")]
   |                                ^^^^^^^^^^^^^^^^^^^ invalid option found here
   |
   = help: only `message`, `note` and `label` are allowed as options
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0277]: the trait bound `i32: Foo` is not satisfied
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:43:14
   |
LL |     take_foo(1_i32);
   |     -------- ^^^^^ the trait `Foo` is not implemented for `i32`
   |     |
   |     required by a bound introduced by this call
   |
help: this trait has no implementations, consider adding one
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:6:1
   |
LL | trait Foo {}
   | ^^^^^^^^^
note: required by a bound in `take_foo`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:36:21
   |
LL | fn take_foo(_: impl Foo) {}
   |                     ^^^ required by this bound in `take_foo`

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:12:50
   |
LL | #[diagnostic::on_unimplemented(message = "Boom", unsupported = "Bar")]
   |                                                  ^^^^^^^^^^^^^^^^^^^ invalid option found here
   |
   = help: only `message`, `note` and `label` are allowed as options
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0277]: Boom
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:45:14
   |
LL |     take_baz(1_i32);
   |     -------- ^^^^^ the trait `Baz` is not implemented for `i32`
   |     |
   |     required by a bound introduced by this call
   |
help: this trait has no implementations, consider adding one
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:15:1
   |
LL | trait Baz {}
   | ^^^^^^^^^
note: required by a bound in `take_baz`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:37:21
   |
LL | fn take_baz(_: impl Baz) {}
   |                     ^^^ required by this bound in `take_baz`

warning: malformed `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:17:50
   |
LL | #[diagnostic::on_unimplemented(message = "Boom", on(_Self = "i32", message = "whatever"))]
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invalid option found here
   |
   = help: only `message`, `note` and `label` are allowed as options
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0277]: Boom
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:47:15
   |
LL |     take_boom(1_i32);
   |     --------- ^^^^^ the trait `Boom` is not implemented for `i32`
   |     |
   |     required by a bound introduced by this call
   |
help: this trait has no implementations, consider adding one
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:20:1
   |
LL | trait Boom {}
   | ^^^^^^^^^^
note: required by a bound in `take_boom`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:38:22
   |
LL | fn take_boom(_: impl Boom) {}
   |                      ^^^^ required by this bound in `take_boom`

warning: missing options for `on_unimplemented` attribute
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:26:1
   |
LL | #[diagnostic::on_unimplemented]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: at least one of the `message`, `note` and `label` options are expected
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0277]: the trait bound `i32: Whatever` is not satisfied
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:49:19
   |
LL |     take_whatever(1_i32);
   |     ------------- ^^^^^ the trait `Whatever` is not implemented for `i32`
   |     |
   |     required by a bound introduced by this call
   |
help: this trait has no implementations, consider adding one
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:29:1
   |
LL | trait Whatever {}
   | ^^^^^^^^^^^^^^
note: required by a bound in `take_whatever`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:39:26
   |
LL | fn take_whatever(_: impl Whatever) {}
   |                          ^^^^^^^^ required by this bound in `take_whatever`

warning: there is no parameter `DoesNotExist` on trait `Test`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:31:32
   |
LL | #[diagnostic::on_unimplemented(message = "{DoesNotExist}")]
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: expect either a generic argument name or `{Self}` as format argument
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0277]: {DoesNotExist}
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:51:15
   |
LL |     take_test(());
   |     --------- ^^ the trait `Test` is not implemented for `()`
   |     |
   |     required by a bound introduced by this call
   |
help: this trait has no implementations, consider adding one
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:34:1
   |
LL | trait Test {}
   | ^^^^^^^^^^
note: required by a bound in `take_test`
  --> $DIR/do_not_fail_parsing_on_invalid_options_1.rs:40:22
   |
LL | fn take_test(_: impl Test) {}
   |                      ^^^^ required by this bound in `take_test`

error: aborting due to 5 previous errors; 12 warnings emitted

For more information about this error, try `rustc --explain E0277`.
