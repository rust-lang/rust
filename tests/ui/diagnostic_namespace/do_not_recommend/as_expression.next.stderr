error[E0277]: the trait bound `&str: AsExpression<<SelectInt as Expression>::SqlType>` is not satisfied
  --> $DIR/as_expression.rs:57:21
   |
LL |     SelectInt.check("bar");
   |               ----- ^^^^^ the trait `AsExpression<<SelectInt as Expression>::SqlType>` is not implemented for `&str`
   |               |
   |               required by a bound introduced by this call
   |
   = help: the trait `AsExpression<Text>` is implemented for `&str`
note: required by a bound in `Foo::check`
  --> $DIR/as_expression.rs:48:12
   |
LL |     fn check<T>(&self, _: T) -> <T as AsExpression<<Self as Expression>::SqlType>>::Expression
   |        ----- required by a bound in this associated function
LL |     where
LL |         T: AsExpression<Self::SqlType>,
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Foo::check`

error[E0277]: the trait bound `&str: AsExpression<Integer>` is not satisfied
  --> $DIR/as_expression.rs:57:15
   |
LL |     SelectInt.check("bar");
   |               ^^^^^ the trait `AsExpression<Integer>` is not implemented for `&str`
   |
   = help: the trait `AsExpression<Integer>` is not implemented for `&str`
           but trait `AsExpression<Text>` is implemented for it
   = help: for that trait implementation, expected `Text`, found `Integer`

error[E0271]: type mismatch resolving `<SelectInt as Expression>::SqlType == Text`
  --> $DIR/as_expression.rs:57:5
   |
LL |     SelectInt.check("bar");
   |     ^^^^^^^^^^^^^^^^^^^^^^ expected `Text`, found `Integer`

error: aborting due to 3 previous errors

Some errors have detailed explanations: E0271, E0277.
For more information about an error, try `rustc --explain E0271`.
