error[E0038]: the trait `Foo` cannot be made into an object
  --> $DIR/arbitrary-self-types-dyn-incompatible.rs:33:13
   |
LL |     fn foo(self: &Rc<Self>) -> usize;
   |                  --------- help: consider changing method `foo`'s `self` parameter to be `&self`: `&Self`
...
LL |     let x = Rc::new(5usize) as Rc<dyn Foo>;
   |             ^^^^^^^^^^^^^^^ `Foo` cannot be made into an object
   |
note: for a trait to be "dyn-compatible" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/arbitrary-self-types-dyn-incompatible.rs:8:18
   |
LL | trait Foo {
   |       --- this trait cannot be made into an object...
LL |     fn foo(self: &Rc<Self>) -> usize;
   |                  ^^^^^^^^^ ...because method `foo`'s `self` parameter cannot be dispatched on
   = help: only type `usize` implements the trait, consider using it directly instead
   = note: required for the cast from `Rc<usize>` to `Rc<dyn Foo>`

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0038`.
