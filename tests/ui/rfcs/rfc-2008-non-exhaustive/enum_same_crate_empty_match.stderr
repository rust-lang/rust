error: unreachable pattern
  --> $DIR/enum_same_crate_empty_match.rs:30:9
   |
LL |         _ => {}
   |         ^------
   |         |
   |         matches no values because `EmptyNonExhaustiveEnum` is uninhabited
   |         help: remove the match arm
   |
   = note: to learn more about uninhabited types, see https://doc.rust-lang.org/nomicon/exotic-sizes.html#empty-types
note: the lint level is defined here
  --> $DIR/enum_same_crate_empty_match.rs:3:9
   |
LL | #![deny(unreachable_patterns)]
   |         ^^^^^^^^^^^^^^^^^^^^

error[E0004]: non-exhaustive patterns: `NonExhaustiveEnum::Unit`, `NonExhaustiveEnum::Tuple(_)` and `NonExhaustiveEnum::Struct { .. }` not covered
  --> $DIR/enum_same_crate_empty_match.rs:35:11
   |
LL |     match NonExhaustiveEnum::Unit {}
   |           ^^^^^^^^^^^^^^^^^^^^^^^ patterns `NonExhaustiveEnum::Unit`, `NonExhaustiveEnum::Tuple(_)` and `NonExhaustiveEnum::Struct { .. }` not covered
   |
note: `NonExhaustiveEnum` defined here
  --> $DIR/enum_same_crate_empty_match.rs:6:10
   |
LL | pub enum NonExhaustiveEnum {
   |          ^^^^^^^^^^^^^^^^^
LL |     Unit,
   |     ---- not covered
LL |
LL |     Tuple(u32),
   |     ----- not covered
LL |
LL |     Struct { field: u32 }
   |     ------ not covered
   = note: the matched value is of type `NonExhaustiveEnum`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern, a match arm with multiple or-patterns as shown, or multiple match arms
   |
LL ~     match NonExhaustiveEnum::Unit {
LL +         NonExhaustiveEnum::Unit | NonExhaustiveEnum::Tuple(_) | NonExhaustiveEnum::Struct { .. } => todo!(),
LL ~     }
   |

error[E0004]: non-exhaustive patterns: `NormalEnum::Unit`, `NormalEnum::Tuple(_)` and `NormalEnum::Struct { .. }` not covered
  --> $DIR/enum_same_crate_empty_match.rs:37:11
   |
LL |     match NormalEnum::Unit {}
   |           ^^^^^^^^^^^^^^^^ patterns `NormalEnum::Unit`, `NormalEnum::Tuple(_)` and `NormalEnum::Struct { .. }` not covered
   |
note: `NormalEnum` defined here
  --> $DIR/enum_same_crate_empty_match.rs:15:10
   |
LL | pub enum NormalEnum {
   |          ^^^^^^^^^^
LL |     Unit,
   |     ---- not covered
LL |
LL |     Tuple(u32),
   |     ----- not covered
LL |
LL |     Struct { field: u32 }
   |     ------ not covered
   = note: the matched value is of type `NormalEnum`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern, a match arm with multiple or-patterns as shown, or multiple match arms
   |
LL ~     match NormalEnum::Unit {
LL +         NormalEnum::Unit | NormalEnum::Tuple(_) | NormalEnum::Struct { .. } => todo!(),
LL ~     }
   |

error: aborting due to 3 previous errors

For more information about this error, try `rustc --explain E0004`.
