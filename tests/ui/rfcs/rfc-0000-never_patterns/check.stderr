error: a never pattern is always unreachable
  --> $DIR/check.rs:16:20
   |
LL |         Some(!) => {}
   |                    ^^ this will never be executed
   |
help: remove the match arm expression
   |
LL -         Some(!) => {}
LL +         Some(!),
   |

error: a guard on a never pattern will never be run
  --> $DIR/check.rs:21:20
   |
LL |         Some(!) if true,
   |                    ^^^^
   |
help: remove the match arm guard
   |
LL -         Some(!) if true,
LL +         Some(!),
   |

error: a never pattern is always unreachable
  --> $DIR/check.rs:26:28
   |
LL |         Some(!) if true => {}
   |                            ^^ this will never be executed
   |
help: remove the match arm expression
   |
LL -         Some(!) if true => {}
LL +         Some(!),
   |

error: a never pattern is always unreachable
  --> $DIR/check.rs:31:27
   |
LL |         Some(never!()) => {}
   |                           ^^ this will never be executed
   |
help: remove the match arm expression
   |
LL -         Some(never!()) => {}
LL +         Some(never!()),
   |

error[E0004]: non-exhaustive patterns: `&Some(!)` not covered
  --> $DIR/check.rs:20:11
   |
LL |     match &None::<Void> {
   |           ^^^^^^^^^^^^^ pattern `&Some(!)` not covered
   |
note: `Option<Void>` defined here
  --> $SRC_DIR/core/src/option.rs:LL:COL
  ::: $SRC_DIR/core/src/option.rs:LL:COL
   |
   = note: not covered
   = note: the matched value is of type `&Option<Void>`
   = note: `Void` is uninhabited but is not being matched by value, so a wildcard `_` is required
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~         None => {}
LL +         &Some(!)
   |

error[E0004]: non-exhaustive patterns: `&Some(!)` not covered
  --> $DIR/check.rs:25:11
   |
LL |     match &None::<Void> {
   |           ^^^^^^^^^^^^^ pattern `&Some(!)` not covered
   |
note: `Option<Void>` defined here
  --> $SRC_DIR/core/src/option.rs:LL:COL
  ::: $SRC_DIR/core/src/option.rs:LL:COL
   |
   = note: not covered
   = note: the matched value is of type `&Option<Void>`
   = note: `Void` is uninhabited but is not being matched by value, so a wildcard `_` is required
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~         None => {}
LL +         &Some(!)
   |

error: aborting due to 6 previous errors

For more information about this error, try `rustc --explain E0004`.
