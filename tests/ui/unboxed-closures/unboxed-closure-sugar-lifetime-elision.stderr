error[E0106]: missing lifetime specifier
  --> $DIR/unboxed-closure-sugar-lifetime-elision.rs:26:39
   |
LL |     let _: dyn Foo(&isize, &usize) -> &usize;
   |                    ------  ------     ^ expected named lifetime parameter
   |
   = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from argument 1 or argument 2
   = note: for more information on higher-ranked polymorphism, visit https://doc.rust-lang.org/nomicon/hrtb.html
help: consider making the bound lifetime-generic with a new `'a` lifetime
   |
LL |     let _: dyn for<'a> Foo(&'a isize, &'a usize) -> &'a usize;
   |                +++++++      ++         ++            ++
help: consider introducing a named lifetime parameter
   |
LL ~ fn main<'a>() {
LL |     eq::< dyn for<'a> Foo<(&'a isize,), Output=&'a isize>,
...
LL |
LL ~     let _: dyn Foo(&'a isize, &'a usize) -> &'a usize;
   |

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0106`.
