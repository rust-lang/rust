warning: the calling convention "ptx-kernel" is not supported on this target
  --> $DIR/unsupported.rs:38:15
   |
LL | fn ptx_ptr(f: extern "ptx-kernel" fn()) {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

error[E0570]: `"ptx-kernel"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:43:1
   |
LL | extern "ptx-kernel" {}
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: the calling convention "aapcs" is not supported on this target
  --> $DIR/unsupported.rs:50:17
   |
LL | fn aapcs_ptr(f: extern "aapcs" fn()) {
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

error[E0570]: `"aapcs"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:55:1
   |
LL | extern "aapcs" {}
   | ^^^^^^^^^^^^^^^^^

warning: the calling convention "msp430-interrupt" is not supported on this target
  --> $DIR/unsupported.rs:60:18
   |
LL | fn msp430_ptr(f: extern "msp430-interrupt" fn()) {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

error[E0570]: `"msp430-interrupt"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:65:1
   |
LL | extern "msp430-interrupt" {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: the calling convention "avr-interrupt" is not supported on this target
  --> $DIR/unsupported.rs:70:15
   |
LL | fn avr_ptr(f: extern "avr-interrupt" fn()) {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

error[E0570]: `"avr-interrupt"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:75:1
   |
LL | extern "avr-interrupt" {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: the calling convention "x86-interrupt" is not supported on this target
  --> $DIR/unsupported.rs:90:15
   |
LL | fn x86_ptr(f: extern "x86-interrupt" fn()) {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

error[E0570]: `"x86-interrupt"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:95:1
   |
LL | extern "x86-interrupt" {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: the calling convention "thiscall" is not supported on this target
  --> $DIR/unsupported.rs:100:20
   |
LL | fn thiscall_ptr(f: extern "thiscall" fn()) {
   |                    ^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

error[E0570]: `"thiscall"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:105:1
   |
LL | extern "thiscall" {}
   | ^^^^^^^^^^^^^^^^^^^^

warning: the calling convention "stdcall" is not supported on this target
  --> $DIR/unsupported.rs:112:19
   |
LL | fn stdcall_ptr(f: extern "stdcall" fn()) {
   |                   ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

error[E0570]: `"stdcall"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:119:1
   |
LL | extern "stdcall" {}
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: if you need `extern "stdcall"` on win32 and `extern "C"` everywhere else, use `extern "system"`

error[E0570]: `"stdcall-unwind"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:123:1
   |
LL | extern "stdcall-unwind" {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you need `extern "stdcall-unwind"` on win32 and `extern "C-unwind"` everywhere else, use `extern "system-unwind"`

warning: use of calling convention not supported on this target
  --> $DIR/unsupported.rs:131:17
   |
LL | fn cdecl_ptr(f: extern "cdecl" fn()) {
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C"` instead
   = note: `#[warn(unsupported_calling_conventions)]` on by default

warning: use of calling convention not supported on this target
  --> $DIR/unsupported.rs:136:1
   |
LL | extern "cdecl" {}
   | ^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C"` instead

warning: use of calling convention not supported on this target
  --> $DIR/unsupported.rs:139:1
   |
LL | extern "cdecl-unwind" {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C-unwind"` instead

warning: the calling convention "vectorcall" is not supported on this target
  --> $DIR/unsupported.rs:145:22
   |
LL | fn vectorcall_ptr(f: extern "vectorcall" fn()) {
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

error[E0570]: `"vectorcall"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:150:1
   |
LL | extern "vectorcall" {}
   | ^^^^^^^^^^^^^^^^^^^^^^

warning: the calling convention "C-cmse-nonsecure-call" is not supported on this target
  --> $DIR/unsupported.rs:153:21
   |
LL | fn cmse_call_ptr(f: extern "C-cmse-nonsecure-call" fn()) {
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

warning: the calling convention "C-cmse-nonsecure-entry" is not supported on this target
  --> $DIR/unsupported.rs:161:22
   |
LL | fn cmse_entry_ptr(f: extern "C-cmse-nonsecure-entry" fn()) {
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>

error[E0570]: `"C-cmse-nonsecure-entry"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:166:1
   |
LL | extern "C-cmse-nonsecure-entry" {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"ptx-kernel"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:36:1
   |
LL | extern "ptx-kernel" fn ptx() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"gpu-kernel"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:45:1
   |
LL | extern "gpu-kernel" fn gpu() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"aapcs"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:48:1
   |
LL | extern "aapcs" fn aapcs() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"msp430-interrupt"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:58:1
   |
LL | extern "msp430-interrupt" fn msp430() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"avr-interrupt"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:68:1
   |
LL | extern "avr-interrupt" fn avr() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"x86-interrupt"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:88:1
   |
LL | extern "x86-interrupt" fn x86() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"thiscall"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:98:1
   |
LL | extern "thiscall" fn thiscall() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"stdcall"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:108:1
   |
LL | extern "stdcall" fn stdcall() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you need `extern "stdcall"` on win32 and `extern "C"` everywhere else, use `extern "system"`

warning: use of calling convention not supported on this target
  --> $DIR/unsupported.rs:128:1
   |
LL | extern "cdecl" fn cdecl() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #137018 <https://github.com/rust-lang/rust/issues/137018>
   = help: use `extern "C"` instead

error[E0570]: `"vectorcall"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:143:1
   |
LL | extern "vectorcall" fn vectorcall() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0570]: `"C-cmse-nonsecure-entry"` is not a supported ABI for the current target
  --> $DIR/unsupported.rs:159:1
   |
LL | extern "C-cmse-nonsecure-entry" fn cmse_entry() {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 20 previous errors; 14 warnings emitted

For more information about this error, try `rustc --explain E0570`.
Future incompatibility report: Future breakage diagnostic:
warning: the calling convention "ptx-kernel" is not supported on this target
  --> $DIR/unsupported.rs:38:15
   |
LL | fn ptx_ptr(f: extern "ptx-kernel" fn()) {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "aapcs" is not supported on this target
  --> $DIR/unsupported.rs:50:17
   |
LL | fn aapcs_ptr(f: extern "aapcs" fn()) {
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "msp430-interrupt" is not supported on this target
  --> $DIR/unsupported.rs:60:18
   |
LL | fn msp430_ptr(f: extern "msp430-interrupt" fn()) {
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "avr-interrupt" is not supported on this target
  --> $DIR/unsupported.rs:70:15
   |
LL | fn avr_ptr(f: extern "avr-interrupt" fn()) {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "x86-interrupt" is not supported on this target
  --> $DIR/unsupported.rs:90:15
   |
LL | fn x86_ptr(f: extern "x86-interrupt" fn()) {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "thiscall" is not supported on this target
  --> $DIR/unsupported.rs:100:20
   |
LL | fn thiscall_ptr(f: extern "thiscall" fn()) {
   |                    ^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "stdcall" is not supported on this target
  --> $DIR/unsupported.rs:112:19
   |
LL | fn stdcall_ptr(f: extern "stdcall" fn()) {
   |                   ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "vectorcall" is not supported on this target
  --> $DIR/unsupported.rs:145:22
   |
LL | fn vectorcall_ptr(f: extern "vectorcall" fn()) {
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "C-cmse-nonsecure-call" is not supported on this target
  --> $DIR/unsupported.rs:153:21
   |
LL | fn cmse_call_ptr(f: extern "C-cmse-nonsecure-call" fn()) {
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

Future breakage diagnostic:
warning: the calling convention "C-cmse-nonsecure-entry" is not supported on this target
  --> $DIR/unsupported.rs:161:22
   |
LL | fn cmse_entry_ptr(f: extern "C-cmse-nonsecure-entry" fn()) {
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>
   = note: `#[warn(unsupported_fn_ptr_calling_conventions)]` on by default

