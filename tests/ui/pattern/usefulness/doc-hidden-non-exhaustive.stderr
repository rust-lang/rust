error[E0004]: non-exhaustive patterns: `_` not covered
  --> $DIR/doc-hidden-non-exhaustive.rs:15:11
   |
LL |     match HiddenEnum::A {
   |           ^^^^^^^^^^^^^ pattern `_` not covered
   |
note: `HiddenEnum` defined here
  --> $DIR/auxiliary/hidden.rs:1:1
   |
LL | pub enum HiddenEnum {
   | ^^^^^^^^^^^^^^^^^^^
   = note: the matched value is of type `HiddenEnum`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~         HiddenEnum::B => {},
LL +         _ => todo!()
   |

error[E0004]: non-exhaustive patterns: `HiddenEnum::B` not covered
  --> $DIR/doc-hidden-non-exhaustive.rs:21:11
   |
LL |     match HiddenEnum::A {
   |           ^^^^^^^^^^^^^ pattern `HiddenEnum::B` not covered
   |
note: `HiddenEnum` defined here
  --> $DIR/auxiliary/hidden.rs:1:1
   |
LL | pub enum HiddenEnum {
   | ^^^^^^^^^^^^^^^^^^^
LL |     A,
LL |     B,
   |     - not covered
   = note: the matched value is of type `HiddenEnum`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~         HiddenEnum::C => {},
LL +         HiddenEnum::B => todo!()
   |

error[E0004]: non-exhaustive patterns: `HiddenEnum::B` and `_` not covered
  --> $DIR/doc-hidden-non-exhaustive.rs:27:11
   |
LL |     match HiddenEnum::A {
   |           ^^^^^^^^^^^^^ patterns `HiddenEnum::B` and `_` not covered
   |
note: `HiddenEnum` defined here
  --> $DIR/auxiliary/hidden.rs:1:1
   |
LL | pub enum HiddenEnum {
   | ^^^^^^^^^^^^^^^^^^^
LL |     A,
LL |     B,
   |     - not covered
   = note: the matched value is of type `HiddenEnum`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern, a match arm with multiple or-patterns as shown, or multiple match arms
   |
LL ~         HiddenEnum::A => {},
LL +         HiddenEnum::B | _ => todo!()
   |

error[E0004]: non-exhaustive patterns: `Some(HiddenEnum::B)` and `Some(_)` not covered
  --> $DIR/doc-hidden-non-exhaustive.rs:32:11
   |
LL |     match None {
   |           ^^^^ patterns `Some(HiddenEnum::B)` and `Some(_)` not covered
   |
note: `Option<HiddenEnum>` defined here
  --> $SRC_DIR/core/src/option.rs:LL:COL
  ::: $SRC_DIR/core/src/option.rs:LL:COL
   |
   = note: not covered
   = note: the matched value is of type `Option<HiddenEnum>`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern, a match arm with multiple or-patterns as shown, or multiple match arms
   |
LL ~         Some(HiddenEnum::A) => {},
LL +         Some(HiddenEnum::B) | Some(_) => todo!()
   |

error[E0004]: non-exhaustive patterns: `InCrate::C` not covered
  --> $DIR/doc-hidden-non-exhaustive.rs:38:11
   |
LL |     match InCrate::A {
   |           ^^^^^^^^^^ pattern `InCrate::C` not covered
   |
note: `InCrate` defined here
  --> $DIR/doc-hidden-non-exhaustive.rs:7:6
   |
LL | enum InCrate {
   |      ^^^^^^^
...
LL |     C,
   |     - not covered
   = note: the matched value is of type `InCrate`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~         InCrate::B => {},
LL +         InCrate::C => todo!()
   |

error: aborting due to 5 previous errors

For more information about this error, try `rustc --explain E0004`.
