error[E0004]: non-exhaustive patterns: `A::B { x: Some(_) }` not covered
  --> $DIR/struct-like-enum-nonexhaustive.rs:8:11
   |
LL |     match x {
   |           ^ pattern `A::B { x: Some(_) }` not covered
   |
note: `A` defined here
  --> $DIR/struct-like-enum-nonexhaustive.rs:1:6
   |
LL | enum A {
   |      ^
LL |     B { x: Option<isize> },
   |     - not covered
   = note: the matched value is of type `A`
help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown
   |
LL ~         A::B { x: None } => {},
LL +         A::B { x: Some(_) } => todo!()
   |

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0004`.
