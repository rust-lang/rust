error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:12:17
   |
LL |     if let Some(&mut x) = &Some(&mut 0) {
   |                 ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     if let Some(&mut x) = &Some(&mut 0) {
LL +     if let Some(&x) = &Some(&mut 0) {
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:18:17
   |
LL |     if let Some(&mut Some(&x)) = &Some(&mut Some(0)) {
   |                 ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     if let Some(&mut Some(&x)) = &Some(&mut Some(0)) {
LL +     if let Some(&Some(&x)) = &Some(&mut Some(0)) {
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:24:22
   |
LL |     if let Some(Some(&mut x)) = &Some(Some(&mut 0)) {
   |                      ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     if let Some(Some(&mut x)) = &Some(Some(&mut 0)) {
LL +     if let Some(Some(&x)) = &Some(Some(&mut 0)) {
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:31:17
   |
LL |     if let Some(&mut Some(&_)) = &Some(&Some(0)) {
   |                 ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     if let Some(&mut Some(&_)) = &Some(&Some(0)) {
LL +     if let Some(&Some(&_)) = &Some(&Some(0)) {
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:41:23
   |
LL |     if let Some(&Some(&mut _)) = &mut Some(&Some(0)) {
   |                       ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     if let Some(&Some(&mut _)) = &mut Some(&Some(0)) {
LL +     if let Some(&Some(&_)) = &mut Some(&Some(0)) {
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:51:17
   |
LL |     if let Some(&mut Some(x)) = &Some(Some(0)) {
   |                 ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     if let Some(&mut Some(x)) = &Some(Some(0)) {
LL +     if let Some(&Some(x)) = &Some(Some(0)) {
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:147:10
   |
LL |     let [&mut x] = &[&mut 0];
   |          ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     let [&mut x] = &[&mut 0];
LL +     let [&x] = &[&mut 0];
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:153:10
   |
LL |     let [&mut &x] = &[&mut 0];
   |          ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     let [&mut &x] = &[&mut 0];
LL +     let [&&x] = &[&mut 0];
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:159:10
   |
LL |     let [&mut &ref x] = &[&mut 0];
   |          ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     let [&mut &ref x] = &[&mut 0];
LL +     let [&&ref x] = &[&mut 0];
   |

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:165:10
   |
LL |     let [&mut &(mut x)] = &[&mut 0];
   |          ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     let [&mut &(mut x)] = &[&mut 0];
LL +     let [&&(mut x)] = &[&mut 0];
   |

error: aborting due to 10 previous errors

For more information about this error, try `rustc --explain E0308`.
