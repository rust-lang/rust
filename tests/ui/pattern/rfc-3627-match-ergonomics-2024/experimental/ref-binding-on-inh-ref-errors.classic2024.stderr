error[E0308]: mismatched types
  --> $DIR/ref-binding-on-inh-ref-errors.rs:58:10
   |
LL |     let [&mut ref x] = &[&mut 0];
   |          ^^^^^
   |
   = note: cannot match inherited `&` with `&mut` pattern
help: replace this `&mut` pattern with `&`
   |
LL -     let [&mut ref x] = &[&mut 0];
LL +     let [&ref x] = &[&mut 0];
   |

error: binding modifiers may only be written when the default binding mode is `move`
  --> $DIR/ref-binding-on-inh-ref-errors.rs:71:10
   |
LL |     let [ref mut x] = &[0];
   |          ^^^^^^^ binding modifier not allowed under `ref` default binding mode
   |
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>
note: matching on a reference type with a non-reference pattern changes the default binding mode
  --> $DIR/ref-binding-on-inh-ref-errors.rs:71:9
   |
LL |     let [ref mut x] = &[0];
   |         ^^^^^^^^^^^ this matches on type `&_`
help: make the implied reference pattern explicit
   |
LL |     let &[ref mut x] = &[0];
   |         +

error[E0596]: cannot borrow data in a `&` reference as mutable
  --> $DIR/ref-binding-on-inh-ref-errors.rs:71:10
   |
LL |     let [ref mut x] = &[0];
   |          ^^^^^^^^^ cannot borrow as mutable

error: binding modifiers may only be written when the default binding mode is `move`
  --> $DIR/ref-binding-on-inh-ref-errors.rs:79:10
   |
LL |     let [ref x] = &[0];
   |          ^^^ binding modifier not allowed under `ref` default binding mode
   |
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>
note: matching on a reference type with a non-reference pattern changes the default binding mode
  --> $DIR/ref-binding-on-inh-ref-errors.rs:79:9
   |
LL |     let [ref x] = &[0];
   |         ^^^^^^^ this matches on type `&_`
help: make the implied reference pattern explicit
   |
LL |     let &[ref x] = &[0];
   |         +

error: binding modifiers may only be written when the default binding mode is `move`
  --> $DIR/ref-binding-on-inh-ref-errors.rs:83:10
   |
LL |     let [ref x] = &mut [0];
   |          ^^^ binding modifier not allowed under `ref mut` default binding mode
   |
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>
note: matching on a reference type with a non-reference pattern changes the default binding mode
  --> $DIR/ref-binding-on-inh-ref-errors.rs:83:9
   |
LL |     let [ref x] = &mut [0];
   |         ^^^^^^^ this matches on type `&mut _`
help: make the implied reference pattern explicit
   |
LL |     let &mut [ref x] = &mut [0];
   |         ++++

error: binding modifiers may only be written when the default binding mode is `move`
  --> $DIR/ref-binding-on-inh-ref-errors.rs:87:10
   |
LL |     let [ref mut x] = &mut [0];
   |          ^^^^^^^ binding modifier not allowed under `ref mut` default binding mode
   |
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/match-ergonomics.html>
note: matching on a reference type with a non-reference pattern changes the default binding mode
  --> $DIR/ref-binding-on-inh-ref-errors.rs:87:9
   |
LL |     let [ref mut x] = &mut [0];
   |         ^^^^^^^^^^^ this matches on type `&mut _`
help: make the implied reference pattern explicit
   |
LL |     let &mut [ref mut x] = &mut [0];
   |         ++++

error: aborting due to 6 previous errors

Some errors have detailed explanations: E0308, E0596.
For more information about an error, try `rustc --explain E0308`.
