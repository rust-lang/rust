error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:10:17
   |
LL |     if let Some(&mut x) = &mut Some(&0) {
   |                 ^^^^^^    ------------- this expression has type `&mut Option<&{integer}>`
   |                 |
   |                 types differ in mutability
   |
   = note:      expected reference `&{integer}`
           found mutable reference `&mut _`
note: to declare a mutable binding use: `mut x`
  --> $DIR/pattern-errors.rs:10:17
   |
LL |     if let Some(&mut x) = &mut Some(&0) {
   |                 ^^^^^^
help: consider removing `&mut` from the pattern
   |
LL |     if let Some(x) = &mut Some(&0) {
   |                 ~

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:28:17
   |
LL |     if let Some(&mut Some(&_)) = &Some(&Some(0)) {
   |                 ^^^^^^^^^^^^^    --------------- this expression has type `&Option<&Option<{integer}>>`
   |                 |
   |                 types differ in mutability
   |
   = note:      expected reference `&Option<{integer}>`
           found mutable reference `&mut _`

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:31:23
   |
LL |     if let Some(&Some(&mut _)) = &Some(&mut Some(0)) {
   |                       ^^^^^^     ------------------- this expression has type `&Option<&mut Option<{integer}>>`
   |                       |
   |                       expected integer, found `&mut _`
   |
   = note:           expected type `{integer}`
           found mutable reference `&mut _`

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:34:23
   |
LL |     if let Some(&Some(&mut _)) = &mut Some(&Some(0)) {
   |                       ^^^^^^     ------------------- this expression has type `&mut Option<&Option<{integer}>>`
   |                       |
   |                       expected integer, found `&mut _`
   |
   = note:           expected type `{integer}`
           found mutable reference `&mut _`

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:37:29
   |
LL |     if let Some(&Some(Some((&mut _)))) = &Some(Some(&mut Some(0))) {
   |                             ^^^^^^       ------------------------- this expression has type `&Option<Option<&mut Option<{integer}>>>`
   |                             |
   |                             expected integer, found `&mut _`
   |
   = note:           expected type `{integer}`
           found mutable reference `&mut _`

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:40:17
   |
LL |     if let Some(&mut Some(x)) = &Some(Some(0)) {
   |                 ^^^^^^^^^^^^    -------------- this expression has type `&Option<Option<{integer}>>`
   |                 |
   |                 expected `Option<{integer}>`, found `&mut _`
   |
   = note:           expected enum `Option<{integer}>`
           found mutable reference `&mut _`

error[E0308]: mismatched types
  --> $DIR/pattern-errors.rs:43:17
   |
LL |     if let Some(&mut Some(x)) = &Some(Some(0)) {
   |                 ^^^^^^^^^^^^    -------------- this expression has type `&Option<Option<{integer}>>`
   |                 |
   |                 expected `Option<{integer}>`, found `&mut _`
   |
   = note:           expected enum `Option<{integer}>`
           found mutable reference `&mut _`

error: aborting due to 7 previous errors

For more information about this error, try `rustc --explain E0308`.
