note: external requirements
  --> $DIR/projection-one-region-closure.rs:45:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: no_relationships_late::<'?1, T>::{closure#0} with closure args [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'?2 ()>, T)),
               (),
           ]
   = note: late-bound region is '?3
   = note: number of external vids: 4
   = note: where T: '?2
   = note: where '?1: '?2

note: no external requirements
  --> $DIR/projection-one-region-closure.rs:41:1
   |
LL | / fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b>,
   | |____________________^
   |
   = note: defining type: no_relationships_late::<'?1, T>

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/projection-one-region-closure.rs:45:39
   |
LL | fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
   |                          -- the parameter type `T` must be valid for the lifetime `'a` as defined here...
...
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                                       ^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds
   |
help: consider adding an explicit lifetime bound
   |
LL |     T: Anything<'b> + 'a,
   |                     ++++

error: lifetime may not live long enough
  --> $DIR/projection-one-region-closure.rs:45:39
   |
LL | fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
   |                          --  -- lifetime `'b` defined here
   |                          |
   |                          lifetime `'a` defined here
...
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                                       ^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`
   |
   = help: consider adding the following bound: `'b: 'a`

note: external requirements
  --> $DIR/projection-one-region-closure.rs:56:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: no_relationships_early::<'?1, '?2, T>::{closure#0} with closure args [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'?3 ()>, T)),
               (),
           ]
   = note: number of external vids: 4
   = note: where T: '?3
   = note: where '?2: '?3

note: no external requirements
  --> $DIR/projection-one-region-closure.rs:51:1
   |
LL | / fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b>,
LL | |     'a: 'a,
   | |___________^
   |
   = note: defining type: no_relationships_early::<'?1, '?2, T>

error[E0309]: the parameter type `T` may not live long enough
  --> $DIR/projection-one-region-closure.rs:56:39
   |
LL | fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
   |                           -- the parameter type `T` must be valid for the lifetime `'a` as defined here...
...
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                                       ^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds
   |
help: consider adding an explicit lifetime bound
   |
LL |     T: Anything<'b> + 'a,
   |                     ++++

error: lifetime may not live long enough
  --> $DIR/projection-one-region-closure.rs:56:39
   |
LL | fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
   |                           --  -- lifetime `'b` defined here
   |                           |
   |                           lifetime `'a` defined here
...
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                                       ^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`
   |
   = help: consider adding the following bound: `'b: 'a`

note: external requirements
  --> $DIR/projection-one-region-closure.rs:70:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: projection_outlives::<'?1, '?2, T>::{closure#0} with closure args [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'?3 ()>, T)),
               (),
           ]
   = note: number of external vids: 4
   = note: where <T as Anything<'?2>>::AssocType: '?3

note: no external requirements
  --> $DIR/projection-one-region-closure.rs:62:1
   |
LL | / fn projection_outlives<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b>,
LL | |     T::AssocType: 'a,
   | |_____________________^
   |
   = note: defining type: projection_outlives::<'?1, '?2, T>

note: external requirements
  --> $DIR/projection-one-region-closure.rs:80:29
   |
LL |     with_signature(cell, t, |cell, t| require(cell, t));
   |                             ^^^^^^^^^
   |
   = note: defining type: elements_outlive::<'?1, '?2, T>::{closure#0} with closure args [
               i32,
               extern "rust-call" fn((std::cell::Cell<&'?3 ()>, T)),
               (),
           ]
   = note: number of external vids: 4
   = note: where T: '?3
   = note: where '?2: '?3

note: no external requirements
  --> $DIR/projection-one-region-closure.rs:74:1
   |
LL | / fn elements_outlive<'a, 'b, T>(cell: Cell<&'a ()>, t: T)
LL | | where
LL | |     T: Anything<'b>,
LL | |     T: 'a,
LL | |     'b: 'a,
   | |___________^
   |
   = note: defining type: elements_outlive::<'?1, '?2, T>

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0309`.
