note: external requirements
  --> $DIR/escape-upvar-nested.rs:21:32
   |
LL |             let mut closure1 = || p = &y;
   |                                ^^
   |
   = note: defining type: test::{closure#0}::{closure#0} with closure args [
               i16,
               extern "rust-call" fn(()),
               (&'?1 mut &'?2 i32, &'?3 i32),
           ]
   = note: number of external vids: 4
   = note: where '?3: '?2

note: external requirements
  --> $DIR/escape-upvar-nested.rs:20:27
   |
LL |         let mut closure = || {
   |                           ^^
   |
   = note: defining type: test::{closure#0} with closure args [
               i16,
               extern "rust-call" fn(()),
               (&'?1 mut &'?2 i32, &'?3 i32),
           ]
   = note: number of external vids: 4
   = note: where '?3: '?2

note: no external requirements
  --> $DIR/escape-upvar-nested.rs:13:1
   |
LL | fn test() {
   | ^^^^^^^^^
   |
   = note: defining type: test

error[E0597]: `y` does not live long enough
  --> $DIR/escape-upvar-nested.rs:21:40
   |
LL |         let y = 22;
   |             - binding `y` declared here
LL |
LL |         let mut closure = || {
   |                           -- value captured here
LL |             let mut closure1 = || p = &y;
   |                                        ^ borrowed value does not live long enough
...
LL |     }
   |     - `y` dropped here while still borrowed
LL |
LL |     deref(p);
   |           - borrow later used here

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0597`.
