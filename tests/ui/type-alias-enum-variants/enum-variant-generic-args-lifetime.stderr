error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:18:27
   |
LL |         Self::TSVariant::<()>(PhantomData);
   |               ---------   ^^ type argument not allowed
   |               |
   |               not allowed on this type

error[E0109]: type arguments are not allowed on self type
  --> $DIR/enum-variant-generic-args-lifetime.rs:20:16
   |
LL |         Self::<()>::TSVariant(PhantomData);
   |         ----   ^^ type argument not allowed
   |         |
   |         not allowed on self type
   |
note: `Self` is of type `Enum<'a, T>`
  --> $DIR/enum-variant-generic-args-lifetime.rs:7:6
   |
LL | enum Enum<'a, T> {
   |      ^^^^ `Self` corresponds to this type
...
LL | impl<'a, T> Enum<'a, T> {
   | ----------------------- `Self` is on type `Enum` in this `impl`
help: the `Self` type doesn't accept type parameters, use the concrete type's name `Enum` instead if you want to specify its type parameters
   |
LL -         Self::<()>::TSVariant(PhantomData);
LL +         Enum::<()>::TSVariant(PhantomData);
   |

error[E0109]: type arguments are not allowed on self type
  --> $DIR/enum-variant-generic-args-lifetime.rs:22:16
   |
LL |         Self::<()>::TSVariant::<()>(PhantomData);
   |         ----   ^^ type argument not allowed
   |         |
   |         not allowed on self type
   |
note: `Self` is of type `Enum<'a, T>`
  --> $DIR/enum-variant-generic-args-lifetime.rs:7:6
   |
LL | enum Enum<'a, T> {
   |      ^^^^ `Self` corresponds to this type
...
LL | impl<'a, T> Enum<'a, T> {
   | ----------------------- `Self` is on type `Enum` in this `impl`
help: the `Self` type doesn't accept type parameters, use the concrete type's name `Enum` instead if you want to specify its type parameters
   |
LL -         Self::<()>::TSVariant::<()>(PhantomData);
LL +         Enum::<()>::TSVariant::<()>(PhantomData);
   |

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:22:33
   |
LL |         Self::<()>::TSVariant::<()>(PhantomData);
   |                     ---------   ^^ type argument not allowed
   |                     |
   |                     not allowed on this type

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:29:26
   |
LL |         Self::SVariant::<()> { phantom: PhantomData };
   |               --------   ^^ type argument not allowed
   |               |
   |               not allowed on this type
   |
   = note: variants of type-aliased enum can't have type parameters
help: you might have meant to specify type parameters on the enum
   |
LL -         Self::SVariant::<()> { phantom: PhantomData };
LL +         Enum::<()>::SVariant { phantom: PhantomData };
   |

error[E0109]: type arguments are not allowed on self type
  --> $DIR/enum-variant-generic-args-lifetime.rs:31:16
   |
LL |         Self::<()>::SVariant { phantom: PhantomData };
   |         ----   ^^ type argument not allowed
   |         |
   |         not allowed on self type
   |
note: `Self` is of type `Enum<'a, T>`
  --> $DIR/enum-variant-generic-args-lifetime.rs:7:6
   |
LL | enum Enum<'a, T> {
   |      ^^^^ `Self` corresponds to this type
...
LL | impl<'a, T> Enum<'a, T> {
   | ----------------------- `Self` is on type `Enum` in this `impl`
help: the `Self` type doesn't accept type parameters, use the concrete type's name `Enum` instead if you want to specify its type parameters
   |
LL -         Self::<()>::SVariant { phantom: PhantomData };
LL +         Enum::<()>::SVariant { phantom: PhantomData };
   |

error[E0109]: type arguments are not allowed on self type
  --> $DIR/enum-variant-generic-args-lifetime.rs:33:16
   |
LL |         Self::<()>::SVariant::<()> { phantom: PhantomData };
   |         ----   ^^ type argument not allowed
   |         |
   |         not allowed on self type
   |
note: `Self` is of type `Enum<'a, T>`
  --> $DIR/enum-variant-generic-args-lifetime.rs:7:6
   |
LL | enum Enum<'a, T> {
   |      ^^^^ `Self` corresponds to this type
...
LL | impl<'a, T> Enum<'a, T> {
   | ----------------------- `Self` is on type `Enum` in this `impl`
help: the `Self` type doesn't accept type parameters, use the concrete type's name `Enum` instead if you want to specify its type parameters
   |
LL -         Self::<()>::SVariant::<()> { phantom: PhantomData };
LL +         Enum::<()>::SVariant::<()> { phantom: PhantomData };
   |

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:33:32
   |
LL |         Self::<()>::SVariant::<()> { phantom: PhantomData };
   |                     --------   ^^ type argument not allowed
   |                     |
   |                     not allowed on this type
   |
   = note: variants of type-aliased enum can't have type parameters
help: you might have meant to specify type parameters on the enum
   |
LL -         Self::<()>::SVariant::<()> { phantom: PhantomData };
LL +         Enum::<()>::SVariant { phantom: PhantomData };
   |

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:39:26
   |
LL |         Self::UVariant::<()>;
   |               --------   ^^ type argument not allowed
   |               |
   |               not allowed on this type

error[E0109]: type arguments are not allowed on self type
  --> $DIR/enum-variant-generic-args-lifetime.rs:41:16
   |
LL |         Self::<()>::UVariant;
   |         ----   ^^ type argument not allowed
   |         |
   |         not allowed on self type
   |
note: `Self` is of type `Enum<'a, T>`
  --> $DIR/enum-variant-generic-args-lifetime.rs:7:6
   |
LL | enum Enum<'a, T> {
   |      ^^^^ `Self` corresponds to this type
...
LL | impl<'a, T> Enum<'a, T> {
   | ----------------------- `Self` is on type `Enum` in this `impl`
help: the `Self` type doesn't accept type parameters, use the concrete type's name `Enum` instead if you want to specify its type parameters
   |
LL -         Self::<()>::UVariant;
LL +         Enum::<()>::UVariant;
   |

error[E0109]: type arguments are not allowed on self type
  --> $DIR/enum-variant-generic-args-lifetime.rs:43:16
   |
LL |         Self::<()>::UVariant::<()>;
   |         ----   ^^ type argument not allowed
   |         |
   |         not allowed on self type
   |
note: `Self` is of type `Enum<'a, T>`
  --> $DIR/enum-variant-generic-args-lifetime.rs:7:6
   |
LL | enum Enum<'a, T> {
   |      ^^^^ `Self` corresponds to this type
...
LL | impl<'a, T> Enum<'a, T> {
   | ----------------------- `Self` is on type `Enum` in this `impl`
help: the `Self` type doesn't accept type parameters, use the concrete type's name `Enum` instead if you want to specify its type parameters
   |
LL -         Self::<()>::UVariant::<()>;
LL +         Enum::<()>::UVariant::<()>;
   |

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:43:32
   |
LL |         Self::<()>::UVariant::<()>;
   |                     --------   ^^ type argument not allowed
   |                     |
   |                     not allowed on this type

error[E0109]: type arguments are not allowed on tuple variant `TSVariant`
  --> $DIR/enum-variant-generic-args-lifetime.rs:52:29
   |
LL |     Enum::<()>::TSVariant::<()>(PhantomData);
   |                 ---------   ^^ type argument not allowed
   |                 |
   |                 not allowed on tuple variant `TSVariant`
   |
   = note: generic arguments are not allowed on both an enum and its variant's path segments simultaneously; they are only valid in one place or the other
help: remove the generics arguments from one of the path segments
   |
LL -     Enum::<()>::TSVariant::<()>(PhantomData);
LL +     Enum::<()>::TSVariant(PhantomData);
   |

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:55:24
   |
LL |     Alias::TSVariant::<()>(PhantomData);
   |            ---------   ^^ type argument not allowed
   |            |
   |            not allowed on this type

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:57:30
   |
LL |     Alias::<()>::TSVariant::<()>(PhantomData);
   |                  ---------   ^^ type argument not allowed
   |                  |
   |                  not allowed on this type

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:60:29
   |
LL |     AliasFixed::TSVariant::<()>(PhantomData);
   |                 ---------   ^^ type argument not allowed
   |                 |
   |                 not allowed on this type

error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied
  --> $DIR/enum-variant-generic-args-lifetime.rs:62:5
   |
LL |     AliasFixed::<()>::TSVariant(PhantomData);
   |     ^^^^^^^^^^   -- help: remove the unnecessary generic argument
   |     |
   |     expected 0 generic arguments
   |
note: type alias defined here, with 0 generic parameters
  --> $DIR/enum-variant-generic-args-lifetime.rs:13:6
   |
LL | type AliasFixed<'a> = Enum<'a, ()>;
   |      ^^^^^^^^^^

error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied
  --> $DIR/enum-variant-generic-args-lifetime.rs:64:5
   |
LL |     AliasFixed::<()>::TSVariant::<()>(PhantomData);
   |     ^^^^^^^^^^   -- help: remove the unnecessary generic argument
   |     |
   |     expected 0 generic arguments
   |
note: type alias defined here, with 0 generic parameters
  --> $DIR/enum-variant-generic-args-lifetime.rs:13:6
   |
LL | type AliasFixed<'a> = Enum<'a, ()>;
   |      ^^^^^^^^^^

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:64:35
   |
LL |     AliasFixed::<()>::TSVariant::<()>(PhantomData);
   |                       ---------   ^^ type argument not allowed
   |                       |
   |                       not allowed on this type

error[E0109]: lifetime and type arguments are not allowed on variant `SVariant`
  --> $DIR/enum-variant-generic-args-lifetime.rs:70:28
   |
LL |     Enum::<()>::SVariant::<()> { phantom: PhantomData };
   |                 --------   ^^
   |                 |          |
   |                 |          lifetime and type arguments not allowed
   |                 not allowed on variant `SVariant`
   |
   = note: generic arguments are not allowed on both an enum and its variant's path segments simultaneously; they are only valid in one place or the other
help: remove the generics arguments from one of the path segments
   |
LL -     Enum::<()>::SVariant::<()> { phantom: PhantomData };
LL +     Enum::<()>::SVariant { phantom: PhantomData };
   |

error[E0107]: enum takes 1 lifetime argument but 0 lifetime arguments were supplied
  --> $DIR/enum-variant-generic-args-lifetime.rs:70:5
   |
LL |     Enum::<()>::SVariant::<()> { phantom: PhantomData };
   |     ^^^^ expected 1 lifetime argument
   |
note: enum defined here, with 1 lifetime parameter: `'a`
  --> $DIR/enum-variant-generic-args-lifetime.rs:7:6
   |
LL | enum Enum<'a, T> {
   |      ^^^^ --
help: add missing lifetime argument
   |
LL |     Enum::<'a, ()>::SVariant::<()> { phantom: PhantomData };
   |            +++

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:74:23
   |
LL |     Alias::SVariant::<()> { phantom: PhantomData };
   |            --------   ^^ type argument not allowed
   |            |
   |            not allowed on this type
   |
   = note: variants of type-aliased enum can't have type parameters
help: you might have meant to specify type parameters on the enum
   |
LL -     Alias::SVariant::<()> { phantom: PhantomData };
LL +     Alias::<()>::SVariant { phantom: PhantomData };
   |

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:76:29
   |
LL |     Alias::<()>::SVariant::<()> { phantom: PhantomData };
   |                  --------   ^^ type argument not allowed
   |                  |
   |                  not allowed on this type
   |
   = note: variants of type-aliased enum can't have type parameters
help: you might have meant to specify type parameters on the enum
   |
LL -     Alias::<()>::SVariant::<()> { phantom: PhantomData };
LL +     Alias::<()>::SVariant { phantom: PhantomData };
   |

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:79:28
   |
LL |     AliasFixed::SVariant::<()> { phantom: PhantomData };
   |                 --------   ^^ type argument not allowed
   |                 |
   |                 not allowed on this type
   |
   = note: variants of type-aliased enum can't have type parameters
help: you might have meant to specify type parameters on the enum
   |
LL -     AliasFixed::SVariant::<()> { phantom: PhantomData };
LL +     AliasFixed::<()>::SVariant { phantom: PhantomData };
   |

error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied
  --> $DIR/enum-variant-generic-args-lifetime.rs:81:5
   |
LL |     AliasFixed::<()>::SVariant { phantom: PhantomData };
   |     ^^^^^^^^^^   -- help: remove the unnecessary generic argument
   |     |
   |     expected 0 generic arguments
   |
note: type alias defined here, with 0 generic parameters
  --> $DIR/enum-variant-generic-args-lifetime.rs:13:6
   |
LL | type AliasFixed<'a> = Enum<'a, ()>;
   |      ^^^^^^^^^^

error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied
  --> $DIR/enum-variant-generic-args-lifetime.rs:83:5
   |
LL |     AliasFixed::<()>::SVariant::<()> { phantom: PhantomData };
   |     ^^^^^^^^^^   -- help: remove the unnecessary generic argument
   |     |
   |     expected 0 generic arguments
   |
note: type alias defined here, with 0 generic parameters
  --> $DIR/enum-variant-generic-args-lifetime.rs:13:6
   |
LL | type AliasFixed<'a> = Enum<'a, ()>;
   |      ^^^^^^^^^^

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:83:34
   |
LL |     AliasFixed::<()>::SVariant::<()> { phantom: PhantomData };
   |                       --------   ^^ type argument not allowed
   |                       |
   |                       not allowed on this type
   |
   = note: variants of type-aliased enum can't have type parameters
help: you might have meant to specify type parameters on the enum
   |
LL -     AliasFixed::<()>::SVariant::<()> { phantom: PhantomData };
LL +     AliasFixed::<()>::SVariant { phantom: PhantomData };
   |

error[E0109]: type arguments are not allowed on unit variant `UVariant`
  --> $DIR/enum-variant-generic-args-lifetime.rs:89:28
   |
LL |     Enum::<()>::UVariant::<()>;
   |                 --------   ^^ type argument not allowed
   |                 |
   |                 not allowed on unit variant `UVariant`
   |
   = note: generic arguments are not allowed on both an enum and its variant's path segments simultaneously; they are only valid in one place or the other
help: remove the generics arguments from one of the path segments
   |
LL -     Enum::<()>::UVariant::<()>;
LL +     Enum::<()>::UVariant;
   |

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:92:23
   |
LL |     Alias::UVariant::<()>;
   |            --------   ^^ type argument not allowed
   |            |
   |            not allowed on this type

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:94:29
   |
LL |     Alias::<()>::UVariant::<()>;
   |                  --------   ^^ type argument not allowed
   |                  |
   |                  not allowed on this type

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:97:28
   |
LL |     AliasFixed::UVariant::<()>;
   |                 --------   ^^ type argument not allowed
   |                 |
   |                 not allowed on this type

error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied
  --> $DIR/enum-variant-generic-args-lifetime.rs:99:5
   |
LL |     AliasFixed::<()>::UVariant;
   |     ^^^^^^^^^^   -- help: remove the unnecessary generic argument
   |     |
   |     expected 0 generic arguments
   |
note: type alias defined here, with 0 generic parameters
  --> $DIR/enum-variant-generic-args-lifetime.rs:13:6
   |
LL | type AliasFixed<'a> = Enum<'a, ()>;
   |      ^^^^^^^^^^

error[E0107]: type alias takes 0 generic arguments but 1 generic argument was supplied
  --> $DIR/enum-variant-generic-args-lifetime.rs:101:5
   |
LL |     AliasFixed::<()>::UVariant::<()>;
   |     ^^^^^^^^^^   -- help: remove the unnecessary generic argument
   |     |
   |     expected 0 generic arguments
   |
note: type alias defined here, with 0 generic parameters
  --> $DIR/enum-variant-generic-args-lifetime.rs:13:6
   |
LL | type AliasFixed<'a> = Enum<'a, ()>;
   |      ^^^^^^^^^^

error[E0109]: type arguments are not allowed on this type
  --> $DIR/enum-variant-generic-args-lifetime.rs:101:34
   |
LL |     AliasFixed::<()>::UVariant::<()>;
   |                       --------   ^^ type argument not allowed
   |                       |
   |                       not allowed on this type

error: aborting due to 34 previous errors

Some errors have detailed explanations: E0107, E0109.
For more information about an error, try `rustc --explain E0107`.
