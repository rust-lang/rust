error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> $DIR/unsized-str-in-return-expr-arg-and-local.rs:1:13
   |
LL | fn foo() -> impl Sized {
   |             ^^^^^^^^^^ doesn't have a size known at compile-time
...
LL |     *""
   |     --- return type was inferred to be `str` here
   |
   = help: the trait `Sized` is not implemented for `str`
help: references are always `Sized`, even if they point to unsized data; consider not dereferencing the expression
   |
LL -     *""
LL +     ""
   |

error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> $DIR/unsized-str-in-return-expr-arg-and-local.rs:15:9
   |
LL |     let x = *"";
   |         ^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `str`
   = note: all local variables must have a statically known size
   = help: unsized locals are gated as an unstable feature
help: references are always `Sized`, even if they point to unsized data; consider not dereferencing the expression
   |
LL -     let x = *"";
LL +     let x = "";
   |

error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> $DIR/unsized-str-in-return-expr-arg-and-local.rs:22:9
   |
LL |     bar(*"");
   |     --- ^^^ doesn't have a size known at compile-time
   |     |
   |     required by a bound introduced by this call
   |
   = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `bar`
  --> $DIR/unsized-str-in-return-expr-arg-and-local.rs:6:16
   |
LL | fn bar(_: impl Sized) {}
   |                ^^^^^ required by this bound in `bar`
help: references are always `Sized`, even if they point to unsized data; consider not dereferencing the expression
   |
LL -     bar(*"");
LL +     bar("");
   |

error[E0277]: the size for values of type `str` cannot be known at compilation time
  --> $DIR/unsized-str-in-return-expr-arg-and-local.rs:26:11
   |
LL |     S.baz(*"");
   |       --- ^^^ doesn't have a size known at compile-time
   |       |
   |       required by a bound introduced by this call
   |
   = help: the trait `Sized` is not implemented for `str`
note: required by a bound in `S::baz`
  --> $DIR/unsized-str-in-return-expr-arg-and-local.rs:10:27
   |
LL |     fn baz(&self, _: impl Sized) {}
   |                           ^^^^^ required by this bound in `S::baz`
help: references are always `Sized`, even if they point to unsized data; consider not dereferencing the expression
   |
LL -     S.baz(*"");
LL +     S.baz("");
   |

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0277`.
