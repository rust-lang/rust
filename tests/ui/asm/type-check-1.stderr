error: invalid asm output
  --> $DIR/type-check-1.rs:12:29
   |
LL |         asm!("{}", out(reg) 1 + 2);
   |                             ^^^^^ cannot assign to this expression

error: invalid asm output
  --> $DIR/type-check-1.rs:14:31
   |
LL |         asm!("{}", inout(reg) 1 + 2);
   |                               ^^^^^ cannot assign to this expression

error[E0277]: the size for values of type `[u64]` cannot be known at compilation time
  --> $DIR/type-check-1.rs:20:28
   |
LL |         asm!("{}", in(reg) v[..]);
   |                            ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u64]`
   = note: all inline asm arguments must have a statically known size

error[E0277]: the size for values of type `[u64]` cannot be known at compilation time
  --> $DIR/type-check-1.rs:23:29
   |
LL |         asm!("{}", out(reg) v[..]);
   |                             ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u64]`
   = note: all inline asm arguments must have a statically known size

error[E0277]: the size for values of type `[u64]` cannot be known at compilation time
  --> $DIR/type-check-1.rs:26:31
   |
LL |         asm!("{}", inout(reg) v[..]);
   |                               ^^^^^ doesn't have a size known at compile-time
   |
   = help: the trait `Sized` is not implemented for `[u64]`
   = note: all inline asm arguments must have a statically known size

error: cannot use value of type `[u64]` for inline assembly
  --> $DIR/type-check-1.rs:20:28
   |
LL |         asm!("{}", in(reg) v[..]);
   |                            ^^^^^
   |
   = note: only integers, floats, SIMD vectors, pointers and function pointers can be used as arguments for inline assembly

error: cannot use value of type `[u64]` for inline assembly
  --> $DIR/type-check-1.rs:23:29
   |
LL |         asm!("{}", out(reg) v[..]);
   |                             ^^^^^
   |
   = note: only integers, floats, SIMD vectors, pointers and function pointers can be used as arguments for inline assembly

error: cannot use value of type `[u64]` for inline assembly
  --> $DIR/type-check-1.rs:26:31
   |
LL |         asm!("{}", inout(reg) v[..]);
   |                               ^^^^^
   |
   = note: only integers, floats, SIMD vectors, pointers and function pointers can be used as arguments for inline assembly

error: aborting due to 8 previous errors

For more information about this error, try `rustc --explain E0277`.
