error: higher-ranked subtype error
  --> $DIR/assoc-const-eq-bound-var-in-ty-not-wf.rs:12:13
   |
LL |         K = { () }
   |             ^^^^^^

error: higher-ranked subtype error
  --> $DIR/assoc-const-eq-bound-var-in-ty-not-wf.rs:12:13
   |
LL |         K = { () }
   |             ^^^^^^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error: implementation of `Project` is not general enough
  --> $DIR/assoc-const-eq-bound-var-in-ty-not-wf.rs:9:4
   |
LL | fn take(
   |    ^^^^ implementation of `Project` is not general enough
   |
   = note: `Project` would have to be implemented for the type `for<'a> fn(&'a str) -> &'a str`
   = note: ...but `Project` is actually implemented for the type `fn(&'0 str) -> &'0 str`, for some specific lifetime `'0`

error: hi
  --> $DIR/assoc-const-eq-bound-var-in-ty-not-wf.rs:23:1
   |
LL | trait Discard { type Out; }
   | ------------- built-in `dyn Discard<Out = _>` implementation for this trait
LL | impl<T: ?Sized> Discard for T { type Out = (); }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ overlaps with this blanket impl
   |
   = note: `#[forbid(dyn_overlap)]` on by default

error: aborting due to 4 previous errors

