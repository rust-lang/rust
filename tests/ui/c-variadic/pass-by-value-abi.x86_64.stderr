error: fn_abi_of(take_va_list) = FnAbi {
           args: [
               ArgAbi {
                   layout: TyAndLayout {
                       ty: VaList<'_>,
                       layout: Layout {
                           size: Size(24 bytes),
                           align: AbiAlign {
                               abi: Align(8 bytes),
                           },
                           backend_repr: Memory {
                               sized: true,
                           },
                           fields: Arbitrary {
                               offsets: $OFFSETS,
                               memory_index: $MEMORY_INDEX,
                           },
                           largest_niche: None,
                           uninhabited: false,
                           variants: Single {
                               index: 0,
                           },
                           max_repr_align: None,
                           unadjusted_abi_align: Align(8 bytes),
                           randomization_seed: $SEED,
                       },
                   },
                   mode: Indirect {
                       attrs: ArgAttributes {
                           regular: CapturesAddress | NoAlias | NonNull | NoUndef,
                           arg_ext: None,
                           pointee_size: Size(24 bytes),
                           pointee_align: Some(
                               Align(8 bytes),
                           ),
                       },
                       meta_attrs: None,
                       on_stack: false,
                   },
               },
           ],
           ret: ArgAbi {
               layout: TyAndLayout {
                   ty: (),
                   layout: Layout {
                       size: Size(0 bytes),
                       align: AbiAlign {
                           abi: Align(1 bytes),
                       },
                       backend_repr: Memory {
                           sized: true,
                       },
                       fields: Arbitrary {
                           offsets: [],
                           memory_index: [],
                       },
                       largest_niche: None,
                       uninhabited: false,
                       variants: Single {
                           index: 0,
                       },
                       max_repr_align: None,
                       unadjusted_abi_align: Align(1 bytes),
                       randomization_seed: $SEED,
                   },
               },
               mode: Ignore,
           },
           c_variadic: false,
           fixed_count: 1,
           conv: C,
           can_unwind: false,
       }
  --> $DIR/pass-by-value-abi.rs:26:1
   |
LL | pub extern "C" fn take_va_list(_: VaList<'_>) {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: fn_abi_of(take_va_list_sysv64) = FnAbi {
           args: [
               ArgAbi {
                   layout: TyAndLayout {
                       ty: VaList<'_>,
                       layout: Layout {
                           size: Size(24 bytes),
                           align: AbiAlign {
                               abi: Align(8 bytes),
                           },
                           backend_repr: Memory {
                               sized: true,
                           },
                           fields: Arbitrary {
                               offsets: $OFFSETS,
                               memory_index: $MEMORY_INDEX,
                           },
                           largest_niche: None,
                           uninhabited: false,
                           variants: Single {
                               index: 0,
                           },
                           max_repr_align: None,
                           unadjusted_abi_align: Align(8 bytes),
                           randomization_seed: $SEED,
                       },
                   },
                   mode: Indirect {
                       attrs: ArgAttributes {
                           regular: CapturesAddress | NoAlias | NonNull | NoUndef,
                           arg_ext: None,
                           pointee_size: Size(24 bytes),
                           pointee_align: Some(
                               Align(8 bytes),
                           ),
                       },
                       meta_attrs: None,
                       on_stack: false,
                   },
               },
           ],
           ret: ArgAbi {
               layout: TyAndLayout {
                   ty: (),
                   layout: Layout {
                       size: Size(0 bytes),
                       align: AbiAlign {
                           abi: Align(1 bytes),
                       },
                       backend_repr: Memory {
                           sized: true,
                       },
                       fields: Arbitrary {
                           offsets: [],
                           memory_index: [],
                       },
                       largest_niche: None,
                       uninhabited: false,
                       variants: Single {
                           index: 0,
                       },
                       max_repr_align: None,
                       unadjusted_abi_align: Align(1 bytes),
                       randomization_seed: $SEED,
                   },
               },
               mode: Ignore,
           },
           c_variadic: false,
           fixed_count: 1,
           conv: X86(
               SysV64,
           ),
           can_unwind: false,
       }
  --> $DIR/pass-by-value-abi.rs:36:1
   |
LL | pub extern "sysv64" fn take_va_list_sysv64(_: VaList<'_>) {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: fn_abi_of(take_va_list_win64) = FnAbi {
           args: [
               ArgAbi {
                   layout: TyAndLayout {
                       ty: VaList<'_>,
                       layout: Layout {
                           size: Size(24 bytes),
                           align: AbiAlign {
                               abi: Align(8 bytes),
                           },
                           backend_repr: Memory {
                               sized: true,
                           },
                           fields: Arbitrary {
                               offsets: $OFFSETS,
                               memory_index: $MEMORY_INDEX,
                           },
                           largest_niche: None,
                           uninhabited: false,
                           variants: Single {
                               index: 0,
                           },
                           max_repr_align: None,
                           unadjusted_abi_align: Align(8 bytes),
                           randomization_seed: $SEED,
                       },
                   },
                   mode: Indirect {
                       attrs: ArgAttributes {
                           regular: CapturesAddress | NoAlias | NonNull | NoUndef,
                           arg_ext: None,
                           pointee_size: Size(24 bytes),
                           pointee_align: Some(
                               Align(8 bytes),
                           ),
                       },
                       meta_attrs: None,
                       on_stack: false,
                   },
               },
           ],
           ret: ArgAbi {
               layout: TyAndLayout {
                   ty: (),
                   layout: Layout {
                       size: Size(0 bytes),
                       align: AbiAlign {
                           abi: Align(1 bytes),
                       },
                       backend_repr: Memory {
                           sized: true,
                       },
                       fields: Arbitrary {
                           offsets: [],
                           memory_index: [],
                       },
                       largest_niche: None,
                       uninhabited: false,
                       variants: Single {
                           index: 0,
                       },
                       max_repr_align: None,
                       unadjusted_abi_align: Align(1 bytes),
                       randomization_seed: $SEED,
                   },
               },
               mode: Ignore,
           },
           c_variadic: false,
           fixed_count: 1,
           conv: X86(
               Win64,
           ),
           can_unwind: false,
       }
  --> $DIR/pass-by-value-abi.rs:43:1
   |
LL | pub extern "win64" fn take_va_list_win64(_: VaList<'_>) {}
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 3 previous errors

