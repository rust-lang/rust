error[E0038]: the trait `DynIncompatible` cannot be made into an object
  --> $DIR/coherence-impl-trait-for-trait-dyn-compatible.rs:7:26
   |
LL | impl DynIncompatible for dyn DynIncompatible { }
   |                          ^^^^^^^^^^^^^^^^^^^ `DynIncompatible` cannot be made into an object
   |
note: for a trait to be "dyn-compatible" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>
  --> $DIR/coherence-impl-trait-for-trait-dyn-compatible.rs:6:45
   |
LL | trait DynIncompatible { fn eq(&self, other: Self); }
   |       ---------------                       ^^^^ ...because method `eq` references the `Self` type in this parameter
   |       |
   |       this trait cannot be made into an object...
   = help: consider moving `eq` to another trait

error[E0046]: not all trait items implemented, missing: `eq`
  --> $DIR/coherence-impl-trait-for-trait-dyn-compatible.rs:7:1
   |
LL | trait DynIncompatible { fn eq(&self, other: Self); }
   |                         -------------------------- `eq` from trait
LL | impl DynIncompatible for dyn DynIncompatible { }
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `eq` in implementation

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0038, E0046.
For more information about an error, try `rustc --explain E0038`.
