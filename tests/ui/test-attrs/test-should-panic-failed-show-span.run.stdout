
running 6 tests
test should_panic_with_any_message - should panic ... ok
test should_panic_with_any_message_does_not_panic - should panic ... FAILED
test should_panic_with_message - should panic ... ok
test should_panic_with_message_does_not_panic - should panic ... FAILED
test should_panic_with_substring_panics_with_incorrect_string - should panic ... FAILED
test should_panic_with_substring_panics_with_non_string_value - should panic ... FAILED

failures:

---- should_panic_with_any_message_does_not_panic stdout ----
note: test did not panic as expected at $DIR/test-should-panic-failed-show-span.rs:22:4
---- should_panic_with_message_does_not_panic stdout ----
note: test did not panic as expected at $DIR/test-should-panic-failed-show-span.rs:28:4
---- should_panic_with_substring_panics_with_incorrect_string stdout ----

thread 'should_panic_with_substring_panics_with_incorrect_string' panicked at $DIR/test-should-panic-failed-show-span.rs:35:5:
ZOMGWTFBBQ
note: panic did not contain expected string
      panic message: `"ZOMGWTFBBQ"`,
 expected substring: `"message"`
---- should_panic_with_substring_panics_with_non_string_value stdout ----

thread 'should_panic_with_substring_panics_with_non_string_value' panicked at $DIR/test-should-panic-failed-show-span.rs:41:5:
Box<dyn Any>
note: expected panic with string value,
 found non-string value: `TypeId(0x56ced5e4a15bd89050bb9674fa2df013)`
     expected substring: `"message"`

failures:
    should_panic_with_any_message_does_not_panic
    should_panic_with_message_does_not_panic
    should_panic_with_substring_panics_with_incorrect_string
    should_panic_with_substring_panics_with_non_string_value

test result: FAILED. 2 passed; 4 failed; 0 ignored; 0 measured; 0 filtered out; finished in $TIME

