warning: all possible in-scope parameters are already captured, so `use<...>` syntax is redundant
  --> $DIR/redundant.rs:6:19
   |
LL | fn hello<'a>() -> impl Sized + use<'a> {}
   |                   ^^^^^^^^^^^^^-------
   |                                |
   |                                help: remove the `use<...>` syntax
   |
   = note: `#[warn(impl_trait_redundant_captures)]` on by default

warning: all possible in-scope parameters are already captured, so `use<...>` syntax is redundant
  --> $DIR/redundant.rs:11:27
   |
LL |     fn inherent(&self) -> impl Sized + use<'_> {}
   |                           ^^^^^^^^^^^^^-------
   |                                        |
   |                                        help: remove the `use<...>` syntax

warning: all possible in-scope parameters are already captured, so `use<...>` syntax is redundant
  --> $DIR/redundant.rs:16:22
   |
LL |     fn in_trait() -> impl Sized + use<'a, Self>;
   |                      ^^^^^^^^^^^^^-------------
   |                                   |
   |                                   help: remove the `use<...>` syntax

warning: all possible in-scope parameters are already captured, so `use<...>` syntax is redundant
  --> $DIR/redundant.rs:20:22
   |
LL |     fn in_trait() -> impl Sized + use<'a> {}
   |                      ^^^^^^^^^^^^^-------
   |                                   |
   |                                   help: remove the `use<...>` syntax

warning: 4 warnings emitted

