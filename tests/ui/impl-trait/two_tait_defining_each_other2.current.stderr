error: item does not constrain `A::{opaque#0}`
  --> $DIR/two_tait_defining_each_other2.rs:12:4
   |
LL | fn muh(x: A) -> B {
   |    ^^^
   |
   = note: consider removing `#[define_opaque]` or adding an empty `#[define_opaque()]`
note: this opaque type is supposed to be constrained
  --> $DIR/two_tait_defining_each_other2.rs:6:10
   |
LL | type A = impl Foo;
   |          ^^^^^^^^

error: opaque type's hidden type cannot be another opaque type from the same scope
  --> $DIR/two_tait_defining_each_other2.rs:15:5
   |
LL |     x // B's hidden type is A (opaquely)
   |     ^ one of the two opaque types used here has to be outside its defining scope
   |
note: opaque type whose hidden type is being assigned
  --> $DIR/two_tait_defining_each_other2.rs:7:10
   |
LL | type B = impl Foo;
   |          ^^^^^^^^
note: opaque type being used as hidden type
  --> $DIR/two_tait_defining_each_other2.rs:6:10
   |
LL | type A = impl Foo;
   |          ^^^^^^^^

error: aborting due to 2 previous errors

