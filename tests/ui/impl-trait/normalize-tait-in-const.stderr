error: `~const` can only be applied to `#[const_trait]` traits
  --> $DIR/normalize-tait-in-const.rs:26:35
   |
LL | const fn with_positive<F: for<'a> ~const Fn(&'a Alias<'a>) + ~const Destruct>(fun: F) {
   |                                   ^^^^^^

error: `~const` can only be applied to `#[const_trait]` traits
  --> $DIR/normalize-tait-in-const.rs:26:35
   |
LL | const fn with_positive<F: for<'a> ~const Fn(&'a Alias<'a>) + ~const Destruct>(fun: F) {
   |                                   ^^^^^^
   |
   = note: duplicate diagnostic emitted due to `-Z deduplicate-diagnostics=no`

error[E0277]: the trait bound `for<'a, 'b> fn(&'a foo::Alias<'b>) {foo}: const Destruct` is not satisfied
  --> $DIR/normalize-tait-in-const.rs:33:19
   |
LL |     with_positive(foo);
   |     ------------- ^^^
   |     |
   |     required by a bound introduced by this call
   |
note: required by a bound in `with_positive`
  --> $DIR/normalize-tait-in-const.rs:26:62
   |
LL | const fn with_positive<F: for<'a> ~const Fn(&'a Alias<'a>) + ~const Destruct>(fun: F) {
   |                                                              ^^^^^^ required by this bound in `with_positive`

error[E0015]: cannot call non-const closure in constant functions
  --> $DIR/normalize-tait-in-const.rs:27:5
   |
LL |     fun(filter_positive());
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: calls in constant functions are limited to constant functions, tuple structs and tuple variants

error: aborting due to 4 previous errors

Some errors have detailed explanations: E0015, E0277.
For more information about an error, try `rustc --explain E0015`.
