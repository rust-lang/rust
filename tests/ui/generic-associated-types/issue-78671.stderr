error[E0107]: missing generics for associated type `CollectionFamily::Member`
  --> $DIR/issue-78671.rs:5:47
   |
LL |     Box::new(Family) as &dyn CollectionFamily<Member=usize>
   |                                               ^^^^^^ expected 1 generic argument
   |
note: associated type defined here, with 1 generic parameter: `T`
  --> $DIR/issue-78671.rs:2:10
   |
LL |     type Member<T>;
   |          ^^^^^^ -
help: add missing generic argument
   |
LL |     Box::new(Family) as &dyn CollectionFamily<Member<T>=usize>
   |                                                     +++

error[E0038]: the trait `CollectionFamily` is not dyn compatible
  --> $DIR/issue-78671.rs:5:25
   |
LL |     Box::new(Family) as &dyn CollectionFamily<Member=usize>
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `CollectionFamily` is not dyn compatible
   |
note: for a trait to be dyn compatible it needs to allow building a vtable
      for more information, visit <https://doc.rust-lang.org/reference/items/traits.html#dyn-compatibility>
  --> $DIR/issue-78671.rs:2:10
   |
LL | trait CollectionFamily {
   |       ---------------- this trait is not dyn compatible...
LL |     type Member<T>;
   |          ^^^^^^ ...because it contains the generic associated type `Member`
   = help: consider moving `Member` to another trait

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0038, E0107.
For more information about an error, try `rustc --explain E0038`.
