error[E0107]: missing generics for associated type `MapLike::VRefCont`
  --> $DIR/issue-79422.rs:47:36
   |
LL |         as Box<dyn MapLike<u8, u8, VRefCont = dyn RefCont<'_, u8>>>;
   |                                    ^^^^^^^^ expected 1 lifetime argument
   |
note: associated type defined here, with 1 lifetime parameter: `'a`
  --> $DIR/issue-79422.rs:23:10
   |
LL |     type VRefCont<'a>: RefCont<'a, V> where Self: 'a;
   |          ^^^^^^^^ --
help: add missing lifetime argument
   |
LL |         as Box<dyn MapLike<u8, u8, VRefCont<'a> = dyn RefCont<'_, u8>>>;
   |                                            ++++

error[E0271]: type mismatch resolving `<BTreeMap<u8, u8> as MapLike<u8, u8>>::VRefCont<'_> == dyn RefCont<'_, u8>`
  --> $DIR/issue-79422.rs:44:13
   |
LL |     let m = Box::new(std::collections::BTreeMap::<u8, u8>::new())
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type mismatch resolving `<BTreeMap<u8, u8> as MapLike<u8, u8>>::VRefCont<'_> == dyn RefCont<'_, u8>`
   |
note: expected this to be `(dyn RefCont<'_, u8> + 'static)`
  --> $DIR/issue-79422.rs:28:25
   |
LL |     type VRefCont<'a> = &'a V where Self: 'a;
   |                         ^^^^^
   = note: expected trait object `(dyn RefCont<'_, u8> + 'static)`
                 found reference `&u8`
   = help: `&u8` implements `RefCont` so you could box the found value and coerce it to the trait object `Box<dyn RefCont>`, you will have to change the expected type as well
   = note: required for the cast from `Box<BTreeMap<u8, u8>>` to `Box<dyn MapLike<u8, u8, VRefCont<'_> = (dyn RefCont<'_, u8> + 'static)>>`

error: aborting due to 2 previous errors

Some errors have detailed explanations: E0107, E0271.
For more information about an error, try `rustc --explain E0107`.
