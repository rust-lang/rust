error[E0277]: can't compare `Foo` with `Foo`
  --> $DIR/issue-87429-associated-type-default.rs:13:60
   |
LL |     type Member<'a>: for<'b> PartialEq<Self::Member<'b>> = Foo;
   |                                                            ^^^ no implementation for `Foo == Foo`
   |
   = help: the trait `PartialEq` is not implemented for `Foo`
note: required by a bound in `Family2::Member`
  --> $DIR/issue-87429-associated-type-default.rs:13:22
   |
LL |     type Member<'a>: for<'b> PartialEq<Self::Member<'b>> = Foo;
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Family2::Member`
help: consider annotating `Foo` with `#[derive(PartialEq)]`
   |
LL + #[derive(PartialEq)]
LL | struct Foo;
   |

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0277`.
