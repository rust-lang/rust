error[E0493]: destructor of `SafeStruct` cannot be evaluated at compile-time
  --> $DIR/check-values-constraints.rs:64:7
   |
LL |       ..SafeStruct {
   |  _______^
LL | |
LL | |         field1: SafeEnum::Variant3(WithDtor),
LL | |         field2: SafeEnum::Variant1,
LL | |     }
   | |_____^ the destructor for this type cannot be evaluated in statics
LL |   };
   |   - value is dropped here

error[E0015]: cannot call non-const associated function `Box::<[MyOwned; 1]>::new_uninit` in statics
  --> $DIR/check-values-constraints.rs:81:33
   |
LL | static STATIC11: Vec<MyOwned> = vec![MyOwned];
   |                                 ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `boxed::box_uninit_as_mut_ptr::<[MyOwned; 1]>` in statics
  --> $DIR/check-values-constraints.rs:81:33
   |
LL | static STATIC11: Vec<MyOwned> = vec![MyOwned];
   |                                 ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `box_uninit_array_into_vec_unsafe::<MyOwned, 1>` in statics
  --> $DIR/check-values-constraints.rs:81:33
   |
LL | static STATIC11: Vec<MyOwned> = vec![MyOwned];
   |                                 ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const method `<str as ToString>::to_string` in statics
  --> $DIR/check-values-constraints.rs:93:38
   |
LL |     field2: SafeEnum::Variant4("str".to_string()),
   |                                      ^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`

error[E0015]: cannot call non-const associated function `Box::<[MyOwned; 1]>::new_uninit` in statics
  --> $DIR/check-values-constraints.rs:97:5
   |
LL |     vec![MyOwned],
   |     ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `boxed::box_uninit_as_mut_ptr::<[MyOwned; 1]>` in statics
  --> $DIR/check-values-constraints.rs:97:5
   |
LL |     vec![MyOwned],
   |     ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `box_uninit_array_into_vec_unsafe::<MyOwned, 1>` in statics
  --> $DIR/check-values-constraints.rs:97:5
   |
LL |     vec![MyOwned],
   |     ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const associated function `Box::<[MyOwned; 1]>::new_uninit` in statics
  --> $DIR/check-values-constraints.rs:100:5
   |
LL |     vec![MyOwned],
   |     ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `boxed::box_uninit_as_mut_ptr::<[MyOwned; 1]>` in statics
  --> $DIR/check-values-constraints.rs:100:5
   |
LL |     vec![MyOwned],
   |     ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `box_uninit_array_into_vec_unsafe::<MyOwned, 1>` in statics
  --> $DIR/check-values-constraints.rs:100:5
   |
LL |     vec![MyOwned],
   |     ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const associated function `Box::<[MyOwned; 1]>::new_uninit` in statics
  --> $DIR/check-values-constraints.rs:106:6
   |
LL |     &vec![MyOwned],
   |      ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `boxed::box_uninit_as_mut_ptr::<[MyOwned; 1]>` in statics
  --> $DIR/check-values-constraints.rs:106:6
   |
LL |     &vec![MyOwned],
   |      ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `box_uninit_array_into_vec_unsafe::<MyOwned, 1>` in statics
  --> $DIR/check-values-constraints.rs:106:6
   |
LL |     &vec![MyOwned],
   |      ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const associated function `Box::<[MyOwned; 1]>::new_uninit` in statics
  --> $DIR/check-values-constraints.rs:109:6
   |
LL |     &vec![MyOwned],
   |      ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `boxed::box_uninit_as_mut_ptr::<[MyOwned; 1]>` in statics
  --> $DIR/check-values-constraints.rs:109:6
   |
LL |     &vec![MyOwned],
   |      ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `box_uninit_array_into_vec_unsafe::<MyOwned, 1>` in statics
  --> $DIR/check-values-constraints.rs:109:6
   |
LL |     &vec![MyOwned],
   |      ^^^^^^^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const associated function `Box::<[isize; 1]>::new_uninit` in statics
  --> $DIR/check-values-constraints.rs:116:31
   |
LL | static STATIC19: Vec<isize> = vec![3];
   |                               ^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `boxed::box_uninit_as_mut_ptr::<[isize; 1]>` in statics
  --> $DIR/check-values-constraints.rs:116:31
   |
LL | static STATIC19: Vec<isize> = vec![3];
   |                               ^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `box_uninit_array_into_vec_unsafe::<isize, 1>` in statics
  --> $DIR/check-values-constraints.rs:116:31
   |
LL | static STATIC19: Vec<isize> = vec![3];
   |                               ^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const associated function `Box::<[isize; 1]>::new_uninit` in statics
  --> $DIR/check-values-constraints.rs:123:32
   |
LL |         static x: Vec<isize> = vec![3];
   |                                ^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `boxed::box_uninit_as_mut_ptr::<[isize; 1]>` in statics
  --> $DIR/check-values-constraints.rs:123:32
   |
LL |         static x: Vec<isize> = vec![3];
   |                                ^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0015]: cannot call non-const function `box_uninit_array_into_vec_unsafe::<isize, 1>` in statics
  --> $DIR/check-values-constraints.rs:123:32
   |
LL |         static x: Vec<isize> = vec![3];
   |                                ^^^^^^^
   |
   = note: calls in statics are limited to constant functions, tuple structs and tuple variants
   = note: consider wrapping this expression in `std::sync::LazyLock::new(|| ...)`
   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0507]: cannot move out of static item `x`
  --> $DIR/check-values-constraints.rs:126:9
   |
LL |         x
   |         ^ move occurs because `x` has type `Vec<isize>`, which does not implement the `Copy` trait
   |
help: consider borrowing here
   |
LL |         &x
   |         +
help: consider cloning the value if the performance cost is acceptable
   |
LL |         x.clone()
   |          ++++++++

error: aborting due to 24 previous errors

Some errors have detailed explanations: E0015, E0493, E0507.
For more information about an error, try `rustc --explain E0015`.
