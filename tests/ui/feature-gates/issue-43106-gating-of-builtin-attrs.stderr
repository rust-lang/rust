warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:17
   |
LL |     mod inner { #![macro_escape] }
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: try an outer attribute: `#[macro_use]`

warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:508:1
   |
LL | #[macro_escape]
   | ^^^^^^^^^^^^^^^

warning: unknown lint: `x5400`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:43:9
   |
LL | #![warn(x5400)]
   |         ^^^^^
   |
note: the lint level is defined here
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:37:28
   |
LL | #![warn(unused_attributes, unknown_lints)]
   |                            ^^^^^^^^^^^^^

warning: unknown lint: `x5300`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:44:10
   |
LL | #![allow(x5300)]
   |          ^^^^^

warning: unknown lint: `x5200`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:11
   |
LL | #![forbid(x5200)]
   |           ^^^^^

warning: unknown lint: `x5100`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:9
   |
LL | #![deny(x5100)]
   |         ^^^^^

warning: unknown lint: `x5400`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:111:8
   |
LL | #[warn(x5400)]
   |        ^^^^^

warning: unknown lint: `x5400`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:114:25
   |
LL |     mod inner { #![warn(x5400)] }
   |                         ^^^^^

warning: unknown lint: `x5400`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:117:12
   |
LL |     #[warn(x5400)] fn f() { }
   |            ^^^^^

warning: unknown lint: `x5400`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:120:12
   |
LL |     #[warn(x5400)] struct S;
   |            ^^^^^

warning: unknown lint: `x5400`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:123:12
   |
LL |     #[warn(x5400)] type T = S;
   |            ^^^^^

warning: unknown lint: `x5400`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:126:12
   |
LL |     #[warn(x5400)] impl S { }
   |            ^^^^^

warning: unknown lint: `x5300`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:130:9
   |
LL | #[allow(x5300)]
   |         ^^^^^

warning: unknown lint: `x5300`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:133:26
   |
LL |     mod inner { #![allow(x5300)] }
   |                          ^^^^^

warning: unknown lint: `x5300`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:136:13
   |
LL |     #[allow(x5300)] fn f() { }
   |             ^^^^^

warning: unknown lint: `x5300`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:139:13
   |
LL |     #[allow(x5300)] struct S;
   |             ^^^^^

warning: unknown lint: `x5300`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:142:13
   |
LL |     #[allow(x5300)] type T = S;
   |             ^^^^^

warning: unknown lint: `x5300`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:145:13
   |
LL |     #[allow(x5300)] impl S { }
   |             ^^^^^

warning: unknown lint: `x5200`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:149:10
   |
LL | #[forbid(x5200)]
   |          ^^^^^

warning: unknown lint: `x5200`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:152:27
   |
LL |     mod inner { #![forbid(x5200)] }
   |                           ^^^^^

warning: unknown lint: `x5200`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:155:14
   |
LL |     #[forbid(x5200)] fn f() { }
   |              ^^^^^

warning: unknown lint: `x5200`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:158:14
   |
LL |     #[forbid(x5200)] struct S;
   |              ^^^^^

warning: unknown lint: `x5200`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:161:14
   |
LL |     #[forbid(x5200)] type T = S;
   |              ^^^^^

warning: unknown lint: `x5200`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:164:14
   |
LL |     #[forbid(x5200)] impl S { }
   |              ^^^^^

warning: unknown lint: `x5100`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:168:8
   |
LL | #[deny(x5100)]
   |        ^^^^^

warning: unknown lint: `x5100`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:171:25
   |
LL |     mod inner { #![deny(x5100)] }
   |                         ^^^^^

warning: unknown lint: `x5100`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:174:12
   |
LL |     #[deny(x5100)] fn f() { }
   |            ^^^^^

warning: unknown lint: `x5100`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:177:12
   |
LL |     #[deny(x5100)] struct S;
   |            ^^^^^

warning: unknown lint: `x5100`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:180:12
   |
LL |     #[deny(x5100)] type T = S;
   |            ^^^^^

warning: unknown lint: `x5100`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:183:12
   |
LL |     #[deny(x5100)] impl S { }
   |            ^^^^^

warning: `#[macro_export]` only has an effect on macro definitions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:216:1
   |
LL | #[macro_export]
   | ^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:37:9
   |
LL | #![warn(unused_attributes, unknown_lints)]
   |         ^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:1
   |
LL | #[reexport_test_harness_main = "2900"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL | #![reexport_test_harness_main = "2900"]
   |  +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:540:1
   |
LL | #[no_std]
   | ^^^^^^^^^
   |
help: add a `!`
   |
LL | #![no_std]
   |  +

warning: attribute should be applied to an `extern` block with non-Rust ABI
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:1
   |
LL |   #[link(name = "x")]
   |   ^^^^^^^^^^^^^^^^^^^
...
LL | / mod link {
LL | |
LL | |
LL | |     mod inner { #![link(name = "x")] }
...  |
LL | | }
   | |_- not an `extern` block
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:771:1
   |
LL | #[windows_subsystem = "windows"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL | #![windows_subsystem = "windows"]
   |  +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:821:1
   |
LL | #[crate_type = "0800"]
   | ^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL | #![crate_type = "0800"]
   |  +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:845:1
   |
LL | #[feature(x0600)]
   | ^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL | #![feature(x0600)]
   |  +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:870:1
   |
LL | #[no_main]
   | ^^^^^^^^^^
   |
help: add a `!`
   |
LL | #![no_main]
   |  +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:894:1
   |
LL | #[no_builtins]
   | ^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL | #![no_builtins]
   |  +

warning: attribute should be applied to an `extern` block with non-Rust ABI
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:72:1
   |
LL | #![link(name = "x")]
   | ^^^^^^^^^^^^^^^^^^^^ not an `extern` block
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:100:12
   |
LL | #![feature(rust1)]
   |            ^^^^^
   |
   = note: `#[warn(stable_features)]` on by default

warning: `#[macro_export]` only has an effect on macro definitions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:219:17
   |
LL |     mod inner { #![macro_export] }
   |                 ^^^^^^^^^^^^^^^^

warning: `#[macro_export]` only has an effect on macro definitions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:222:5
   |
LL |     #[macro_export] fn f() { }
   |     ^^^^^^^^^^^^^^^

warning: `#[macro_export]` only has an effect on macro definitions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:225:5
   |
LL |     #[macro_export] struct S;
   |     ^^^^^^^^^^^^^^^

warning: `#[macro_export]` only has an effect on macro definitions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:228:5
   |
LL |     #[macro_export] type T = S;
   |     ^^^^^^^^^^^^^^^

warning: `#[macro_export]` only has an effect on macro definitions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:231:5
   |
LL |     #[macro_export] impl S { }
   |     ^^^^^^^^^^^^^^^

warning: crate-level attribute should be in the root module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:17
   |
LL |     mod inner { #![reexport_test_harness_main="2900"] }
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:490:5
   |
LL |     #[reexport_test_harness_main = "2900"] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![reexport_test_harness_main = "2900"] fn f() { }
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:494:5
   |
LL |     #[reexport_test_harness_main = "2900"] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![reexport_test_harness_main = "2900"] struct S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:498:5
   |
LL |     #[reexport_test_harness_main = "2900"] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![reexport_test_harness_main = "2900"] type T = S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:502:5
   |
LL |     #[reexport_test_harness_main = "2900"] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![reexport_test_harness_main = "2900"] impl S { }
   |      +

warning: crate-level attribute should be in the root module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:544:17
   |
LL |     mod inner { #![no_std] }
   |                 ^^^^^^^^^^

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:547:5
   |
LL |     #[no_std] fn f() { }
   |     ^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_std] fn f() { }
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:551:5
   |
LL |     #[no_std] struct S;
   |     ^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_std] struct S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:555:5
   |
LL |     #[no_std] type T = S;
   |     ^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_std] type T = S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:559:5
   |
LL |     #[no_std] impl S { }
   |     ^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_std] impl S { }
   |      +

warning: attribute should be applied to an `extern` block with non-Rust ABI
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:17
   |
LL |     mod inner { #![link(name = "x")] }
   |     ------------^^^^^^^^^^^^^^^^^^^^-- not an `extern` block
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: attribute should be applied to an `extern` block with non-Rust ABI
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:706:5
   |
LL |     #[link(name = "x")] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^ ---------- not an `extern` block
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: attribute should be applied to an `extern` block with non-Rust ABI
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:5
   |
LL |     #[link(name = "x")] struct S;
   |     ^^^^^^^^^^^^^^^^^^^ --------- not an `extern` block
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: attribute should be applied to an `extern` block with non-Rust ABI
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:5
   |
LL |     #[link(name = "x")] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^ ----------- not an `extern` block
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: attribute should be applied to an `extern` block with non-Rust ABI
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:721:5
   |
LL |     #[link(name = "x")] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^ ---------- not an `extern` block
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: attribute should be applied to an `extern` block with non-Rust ABI
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5
   |
LL |     #[link(name = "x")] extern "Rust" {}
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!

warning: crate-level attribute should be in the root module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:775:17
   |
LL |     mod inner { #![windows_subsystem="windows"] }
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:5
   |
LL |     #[windows_subsystem = "windows"] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![windows_subsystem = "windows"] fn f() { }
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5
   |
LL |     #[windows_subsystem = "windows"] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![windows_subsystem = "windows"] struct S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:5
   |
LL |     #[windows_subsystem = "windows"] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![windows_subsystem = "windows"] type T = S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5
   |
LL |     #[windows_subsystem = "windows"] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![windows_subsystem = "windows"] impl S { }
   |      +

warning: crate-level attribute should be in the root module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:825:17
   |
LL |     mod inner { #![crate_type="0800"] }
   |                 ^^^^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:828:5
   |
LL |     #[crate_type = "0800"] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![crate_type = "0800"] fn f() { }
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:832:5
   |
LL |     #[crate_type = "0800"] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![crate_type = "0800"] struct S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:836:5
   |
LL |     #[crate_type = "0800"] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![crate_type = "0800"] type T = S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:840:5
   |
LL |     #[crate_type = "0800"] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![crate_type = "0800"] impl S { }
   |      +

warning: crate-level attribute should be in the root module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:849:17
   |
LL |     mod inner { #![feature(x0600)] }
   |                 ^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:852:5
   |
LL |     #[feature(x0600)] fn f() { }
   |     ^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![feature(x0600)] fn f() { }
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:856:5
   |
LL |     #[feature(x0600)] struct S;
   |     ^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![feature(x0600)] struct S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:860:5
   |
LL |     #[feature(x0600)] type T = S;
   |     ^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![feature(x0600)] type T = S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:864:5
   |
LL |     #[feature(x0600)] impl S { }
   |     ^^^^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![feature(x0600)] impl S { }
   |      +

warning: crate-level attribute should be in the root module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:874:17
   |
LL |     mod inner { #![no_main] }
   |                 ^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:877:5
   |
LL |     #[no_main] fn f() { }
   |     ^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_main] fn f() { }
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:881:5
   |
LL |     #[no_main] struct S;
   |     ^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_main] struct S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:885:5
   |
LL |     #[no_main] type T = S;
   |     ^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_main] type T = S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:889:5
   |
LL |     #[no_main] impl S { }
   |     ^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_main] impl S { }
   |      +

warning: crate-level attribute should be in the root module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:898:17
   |
LL |     mod inner { #![no_builtins] }
   |                 ^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:901:5
   |
LL |     #[no_builtins] fn f() { }
   |     ^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_builtins] fn f() { }
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:905:5
   |
LL |     #[no_builtins] struct S;
   |     ^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_builtins] struct S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:909:5
   |
LL |     #[no_builtins] type T = S;
   |     ^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_builtins] type T = S;
   |      +

warning: crate-level attribute should be an inner attribute
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:913:5
   |
LL |     #[no_builtins] impl S { }
   |     ^^^^^^^^^^^^^^
   |
help: add a `!`
   |
LL |     #![no_builtins] impl S { }
   |      +

warning: `#[macro_use]` attribute cannot be used on functions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:191:5
   |
LL |     #[macro_use] fn f() { }
   |     ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[macro_use]` can be applied to modules, extern crates, and crates

warning: `#[macro_use]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:197:5
   |
LL |     #[macro_use] struct S;
   |     ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[macro_use]` can be applied to modules, extern crates, and crates

warning: `#[macro_use]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:203:5
   |
LL |     #[macro_use] type T = S;
   |     ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[macro_use]` can be applied to modules, extern crates, and crates

warning: `#[macro_use]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:209:5
   |
LL |     #[macro_use] impl S { }
   |     ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[macro_use]` can be applied to modules, extern crates, and crates

warning: `#[path]` attribute cannot be used on functions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:271:5
   |
LL |     #[path = "3800"] fn f() { }
   |     ^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[path]` can only be applied to modules

warning: `#[path]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:277:5
   |
LL |     #[path = "3800"]  struct S;
   |     ^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[path]` can only be applied to modules

warning: `#[path]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:283:5
   |
LL |     #[path = "3800"] type T = S;
   |     ^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[path]` can only be applied to modules

warning: `#[path]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:289:5
   |
LL |     #[path = "3800"] impl S { }
   |     ^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[path]` can only be applied to modules

warning: `#[automatically_derived]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:296:1
   |
LL | #[automatically_derived]
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[automatically_derived]` can only be applied to trait impl blocks

warning: `#[automatically_derived]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:302:17
   |
LL |     mod inner { #![automatically_derived] }
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[automatically_derived]` can only be applied to trait impl blocks

warning: `#[automatically_derived]` attribute cannot be used on functions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:308:5
   |
LL |     #[automatically_derived] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[automatically_derived]` can only be applied to trait impl blocks

warning: `#[automatically_derived]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:314:5
   |
LL |     #[automatically_derived] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[automatically_derived]` can only be applied to trait impl blocks

warning: `#[automatically_derived]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:320:5
   |
LL |     #[automatically_derived] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[automatically_derived]` can only be applied to trait impl blocks

warning: `#[automatically_derived]` attribute cannot be used on traits
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:326:5
   |
LL |     #[automatically_derived] trait W { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[automatically_derived]` can only be applied to trait impl blocks

warning: `#[automatically_derived]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:332:5
   |
LL |     #[automatically_derived] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[automatically_derived]` can only be applied to trait impl blocks

warning: `#[no_mangle]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:341:1
   |
LL | #[no_mangle]
   | ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_mangle]` can be applied to functions and statics

warning: `#[no_mangle]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:347:17
   |
LL |     mod inner { #![no_mangle] }
   |                 ^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_mangle]` can be applied to functions and statics

warning: `#[no_mangle]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:355:5
   |
LL |     #[no_mangle] struct S;
   |     ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_mangle]` can be applied to functions and statics

warning: `#[no_mangle]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:361:5
   |
LL |     #[no_mangle] type T = S;
   |     ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_mangle]` can be applied to functions and statics

warning: `#[no_mangle]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:367:5
   |
LL |     #[no_mangle] impl S { }
   |     ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_mangle]` can be applied to functions and statics

warning: `#[no_mangle]` attribute cannot be used on required trait methods
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:374:9
   |
LL |         #[no_mangle] fn foo();
   |         ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_mangle]` can be applied to functions, statics, inherent methods, and trait methods in impl blocks

warning: `#[no_mangle]` attribute cannot be used on provided trait methods
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:380:9
   |
LL |         #[no_mangle] fn bar() {}
   |         ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_mangle]` can be applied to functions, statics, inherent methods, and trait methods in impl blocks

warning: `#[should_panic]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:388:1
   |
LL | #[should_panic]
   | ^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[should_panic]` can only be applied to functions

warning: `#[should_panic]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:394:17
   |
LL |     mod inner { #![should_panic] }
   |                 ^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[should_panic]` can only be applied to functions

warning: `#[should_panic]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:402:5
   |
LL |     #[should_panic] struct S;
   |     ^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[should_panic]` can only be applied to functions

warning: `#[should_panic]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:408:5
   |
LL |     #[should_panic] type T = S;
   |     ^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[should_panic]` can only be applied to functions

warning: `#[should_panic]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:5
   |
LL |     #[should_panic] impl S { }
   |     ^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[should_panic]` can only be applied to functions

warning: `#[ignore]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:1
   |
LL | #[ignore]
   | ^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[ignore]` can only be applied to functions

warning: `#[ignore]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:17
   |
LL |     mod inner { #![ignore] }
   |                 ^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[ignore]` can only be applied to functions

warning: `#[ignore]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:435:5
   |
LL |     #[ignore] struct S;
   |     ^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[ignore]` can only be applied to functions

warning: `#[ignore]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:441:5
   |
LL |     #[ignore] type T = S;
   |     ^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[ignore]` can only be applied to functions

warning: `#[ignore]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:447:5
   |
LL |     #[ignore] impl S { }
   |     ^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[ignore]` can only be applied to functions

warning: `#[no_implicit_prelude]` attribute cannot be used on functions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:458:5
   |
LL |     #[no_implicit_prelude] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_implicit_prelude]` can be applied to modules and crates

warning: `#[no_implicit_prelude]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:464:5
   |
LL |     #[no_implicit_prelude] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_implicit_prelude]` can be applied to modules and crates

warning: `#[no_implicit_prelude]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:5
   |
LL |     #[no_implicit_prelude] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_implicit_prelude]` can be applied to modules and crates

warning: `#[no_implicit_prelude]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:476:5
   |
LL |     #[no_implicit_prelude] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[no_implicit_prelude]` can be applied to modules and crates

warning: `#[macro_escape]` attribute cannot be used on functions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:515:5
   |
LL |     #[macro_escape] fn f() { }
   |     ^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[macro_escape]` can be applied to modules, extern crates, and crates

warning: `#[macro_escape]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:521:5
   |
LL |     #[macro_escape] struct S;
   |     ^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[macro_escape]` can be applied to modules, extern crates, and crates

warning: `#[macro_escape]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:527:5
   |
LL |     #[macro_escape] type T = S;
   |     ^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[macro_escape]` can be applied to modules, extern crates, and crates

warning: `#[macro_escape]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:533:5
   |
LL |     #[macro_escape] impl S { }
   |     ^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[macro_escape]` can be applied to modules, extern crates, and crates

warning: `#[cold]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:581:1
   |
LL | #[cold]
   | ^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[cold]` can only be applied to functions

warning: `#[cold]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:588:17
   |
LL |     mod inner { #![cold] }
   |                 ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[cold]` can only be applied to functions

warning: `#[cold]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:596:5
   |
LL |     #[cold] struct S;
   |     ^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[cold]` can only be applied to functions

warning: `#[cold]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:602:5
   |
LL |     #[cold] type T = S;
   |     ^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[cold]` can only be applied to functions

warning: `#[cold]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:608:5
   |
LL |     #[cold] impl S { }
   |     ^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[cold]` can only be applied to functions

warning: `#[link_name]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:615:1
   |
LL | #[link_name = "1900"]
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_name]` can be applied to foreign functions and foreign statics

warning: `#[link_name]` attribute cannot be used on foreign modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:621:5
   |
LL |     #[link_name = "1900"]
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_name]` can be applied to foreign functions and foreign statics

warning: `#[link_name]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:628:17
   |
LL |     mod inner { #![link_name="1900"] }
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_name]` can be applied to foreign functions and foreign statics

warning: `#[link_name]` attribute cannot be used on functions
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:634:5
   |
LL |     #[link_name = "1900"] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_name]` can be applied to foreign functions and foreign statics

warning: `#[link_name]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:640:5
   |
LL |     #[link_name = "1900"] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_name]` can be applied to foreign functions and foreign statics

warning: `#[link_name]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:646:5
   |
LL |     #[link_name = "1900"] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_name]` can be applied to foreign functions and foreign statics

warning: `#[link_name]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:5
   |
LL |     #[link_name = "1900"] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_name]` can be applied to foreign functions and foreign statics

warning: `#[link_section]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:659:1
   |
LL | #[link_section = "1800"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_section]` can be applied to statics and functions

warning: `#[link_section]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:665:17
   |
LL |     mod inner { #![link_section="1800"] }
   |                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_section]` can be applied to statics and functions

warning: `#[link_section]` attribute cannot be used on structs
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:5
   |
LL |     #[link_section = "1800"] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_section]` can be applied to statics and functions

warning: `#[link_section]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:679:5
   |
LL |     #[link_section = "1800"] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_section]` can be applied to statics and functions

warning: `#[link_section]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5
   |
LL |     #[link_section = "1800"] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_section]` can be applied to statics and functions

warning: `#[must_use]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:746:1
   |
LL | #[must_use]
   | ^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[must_use]` can be applied to functions, data types, unions, and traits

warning: `#[must_use]` attribute cannot be used on modules
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:751:17
   |
LL |     mod inner { #![must_use] }
   |                 ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[must_use]` can be applied to functions, data types, unions, and traits

warning: `#[must_use]` attribute cannot be used on type aliases
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:760:5
   |
LL |     #[must_use] type T = S;
   |     ^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[must_use]` can be applied to functions, data types, unions, and traits

warning: `#[must_use]` attribute cannot be used on inherent impl blocks
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5
   |
LL |     #[must_use] impl S { }
   |     ^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[must_use]` can be applied to functions, data types, unions, and traits

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![crate_name]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:797:1
   |
LL | #[crate_name = "0900"]
   | ^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:799:1
   |
LL | / mod crate_name {
LL | |
LL | |     mod inner { #![crate_name="0900"] }
...  |
LL | | }
   | |_^

warning: the `#![crate_name]` attribute can only be used at the crate root
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:801:17
   |
LL |     mod inner { #![crate_name="0900"] }
   |                 ^^^^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![crate_name]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:804:5
   |
LL |     #[crate_name = "0900"] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this function
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:804:28
   |
LL |     #[crate_name = "0900"] fn f() { }
   |                            ^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![crate_name]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:808:5
   |
LL |     #[crate_name = "0900"] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this struct
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:808:28
   |
LL |     #[crate_name = "0900"] struct S;
   |                            ^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![crate_name]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:812:5
   |
LL |     #[crate_name = "0900"] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this type alias
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:812:28
   |
LL |     #[crate_name = "0900"] type T = S;
   |                            ^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![crate_name]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:816:5
   |
LL |     #[crate_name = "0900"] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this implementation block
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:816:28
   |
LL |     #[crate_name = "0900"] impl S { }
   |                            ^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![recursion_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:918:1
   |
LL | #[recursion_limit="0200"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:920:1
   |
LL | / mod recursion_limit {
LL | |
LL | |     mod inner { #![recursion_limit="0200"] }
...  |
LL | | }
   | |_^

warning: the `#![recursion_limit]` attribute can only be used at the crate root
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:922:17
   |
LL |     mod inner { #![recursion_limit="0200"] }
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![recursion_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:925:5
   |
LL |     #[recursion_limit="0200"] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this function
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:925:31
   |
LL |     #[recursion_limit="0200"] fn f() { }
   |                               ^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![recursion_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:929:5
   |
LL |     #[recursion_limit="0200"] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this struct
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:929:31
   |
LL |     #[recursion_limit="0200"] struct S;
   |                               ^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![recursion_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:933:5
   |
LL |     #[recursion_limit="0200"] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this type alias
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:933:31
   |
LL |     #[recursion_limit="0200"] type T = S;
   |                               ^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![recursion_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:937:5
   |
LL |     #[recursion_limit="0200"] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this implementation block
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:937:31
   |
LL |     #[recursion_limit="0200"] impl S { }
   |                               ^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![type_length_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:942:1
   |
LL | #[type_length_limit="0100"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this module
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:944:1
   |
LL | / mod type_length_limit {
LL | |
LL | |     mod inner { #![type_length_limit="0100"] }
...  |
LL | | }
   | |_^

warning: the `#![type_length_limit]` attribute can only be used at the crate root
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:946:17
   |
LL |     mod inner { #![type_length_limit="0100"] }
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![type_length_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:949:5
   |
LL |     #[type_length_limit="0100"] fn f() { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this function
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:949:33
   |
LL |     #[type_length_limit="0100"] fn f() { }
   |                                 ^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![type_length_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:953:5
   |
LL |     #[type_length_limit="0100"] struct S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this struct
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:953:33
   |
LL |     #[type_length_limit="0100"] struct S;
   |                                 ^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![type_length_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:957:5
   |
LL |     #[type_length_limit="0100"] type T = S;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this type alias
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:957:33
   |
LL |     #[type_length_limit="0100"] type T = S;
   |                                 ^^^^^^^^^^^

warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![type_length_limit]`
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:961:5
   |
LL |     #[type_length_limit="0100"] impl S { }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: This attribute does not have an `!`, which means it is applied to this implementation block
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:961:33
   |
LL |     #[type_length_limit="0100"] impl S { }
   |                                 ^^^^^^^^^^

warning: `#[should_panic]` attribute cannot be used on crates
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:50:1
   |
LL | #![should_panic]
   | ^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[should_panic]` can only be applied to functions

warning: `#[ignore]` attribute cannot be used on crates
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:54:1
   |
LL | #![ignore]
   | ^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[ignore]` can only be applied to functions

warning: `#[proc_macro_derive]` attribute cannot be used on crates
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:63:1
   |
LL | #![proc_macro_derive(Test)]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[proc_macro_derive]` can only be applied to functions

warning: `#[cold]` attribute cannot be used on crates
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:68:1
   |
LL | #![cold]
   | ^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[cold]` can only be applied to functions

warning: `#[link_name]` attribute cannot be used on crates
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:74:1
   |
LL | #![link_name = "1900"]
   | ^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_name]` can be applied to foreign functions and foreign statics

warning: `#[link_section]` attribute cannot be used on crates
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:79:1
   |
LL | #![link_section = "1800"]
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[link_section]` can be applied to statics and functions

warning: `#[must_use]` attribute cannot be used on crates
  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:84:1
   |
LL | #![must_use]
   | ^^^^^^^^^^^^
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = help: `#[must_use]` can be applied to functions, data types, unions, and traits

warning: 173 warnings emitted

