error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:9:19
   |
LL |     fn foo_sugar(&pin mut self) {}
   |                   ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:10:25
   |
LL |     fn foo_sugar_const(&pin const self) {}
   |                         ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:15:18
   |
LL |     fn pin_drop(&pin mut self) {}
   |                  ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:22:14
   |
LL |     let _y: &pin mut Foo = x;
   |              ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:26:14
   |
LL |     let _y: &pin const Foo = x;
   |              ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:29:18
   |
LL | fn foo_sugar(_: &pin mut Foo) {}
   |                  ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:41:18
   |
LL | fn baz_sugar(_: &pin const Foo) {}
   |                  ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:44:31
   |
LL |     let mut x: Pin<&mut _> = &pin mut Foo;
   |                               ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:49:23
   |
LL |     let x: Pin<&_> = &pin const Foo;
   |                       ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:63:23
   |
LL |         fn foo_sugar(&pin mut self) {}
   |                       ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:64:29
   |
LL |         fn foo_sugar_const(&pin const self) {}
   |                             ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:68:22
   |
LL |         fn pin_drop(&pin mut self) {}
   |                      ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:74:18
   |
LL |         let _y: &pin mut Foo = x;
   |                  ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:77:22
   |
LL |     fn foo_sugar(_: &pin mut Foo) {}
   |                      ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:89:22
   |
LL |     fn baz_sugar(_: &pin const Foo) {}
   |                      ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:92:35
   |
LL |         let mut x: Pin<&mut _> = &pin mut Foo;
   |                                   ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: pinned reference syntax is experimental
  --> $DIR/feature-gate-pin_ergonomics.rs:97:27
   |
LL |         let x: Pin<&_> = &pin const Foo;
   |                           ^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0658]: use of unstable library feature `pin_ergonomics`
  --> $DIR/feature-gate-pin_ergonomics.rs:15:5
   |
LL |     fn pin_drop(&pin mut self) {}
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0046]: not all trait items implemented, missing: `drop`
  --> $DIR/feature-gate-pin_ergonomics.rs:13:1
   |
LL | / impl Drop for Foo {
LL | |
LL | |     fn pin_drop(&pin mut self) {}
LL | |
LL | | }
   | |_^
   |
   = note: default implementation of `drop` is unstable
   = note: use of unstable library feature `pin_ergonomics`
   = note: see issue #130494 <https://github.com/rust-lang/rust/issues/130494> for more information
   = help: add `#![feature(pin_ergonomics)]` to the crate attributes to enable
   = note: this compiler was built on YYYY-MM-DD; consider upgrading it if it is out of date

error[E0382]: use of moved value: `x`
  --> $DIR/feature-gate-pin_ergonomics.rs:33:9
   |
LL | fn bar(x: Pin<&mut Foo>) {
   |        - move occurs because `x` has type `Pin<&mut Foo>`, which does not implement the `Copy` trait
LL |     foo(x);
   |         - value moved here
LL |     foo(x);
   |         ^ value used here after move
   |
note: consider changing this parameter type in function `foo` to borrow instead if owning the value isn't necessary
  --> $DIR/feature-gate-pin_ergonomics.rs:19:15
   |
LL | fn foo(mut x: Pin<&mut Foo>) {
   |    ---        ^^^^^^^^^^^^^ this parameter takes ownership of the value
   |    |
   |    in this function

error[E0382]: use of moved value: `x`
  --> $DIR/feature-gate-pin_ergonomics.rs:38:5
   |
LL | fn baz(mut x: Pin<&mut Foo>) {
   |        ----- move occurs because `x` has type `Pin<&mut Foo>`, which does not implement the `Copy` trait
LL |     x.foo();
   |       ----- `x` moved due to this method call
LL |     x.foo();
   |     ^ value used here after move
   |
note: `Foo::foo` takes ownership of the receiver `self`, which moves `x`
  --> $DIR/feature-gate-pin_ergonomics.rs:8:12
   |
LL |     fn foo(self: Pin<&mut Self>) {}
   |            ^^^^
help: consider reborrowing the `Pin` instead of moving it
   |
LL |     x.as_mut().foo();
   |      +++++++++

error: aborting due to 21 previous errors

Some errors have detailed explanations: E0046, E0382, E0658.
For more information about an error, try `rustc --explain E0046`.
