error[E0277]: the size for values of type `T` cannot be known at compilation time
  --> $DIR/issue-27060-2.rs:3:11
   |
LL | pub struct Bad<T: ?Sized> {
   |                - this type parameter needs to be `Sized`
LL |     data: T,
   |           ^ doesn't have a size known at compile-time
   |
   = note: the last field of a packed struct may only have a dynamically sized type if it does not need drop to be run
   = help: change the field's type to have a statically known size
help: consider removing the `?Sized` bound to make the type parameter `Sized`
   |
LL - pub struct Bad<T: ?Sized> {
LL + pub struct Bad<T> {
   |
help: borrowed types always have a statically known size
   |
LL |     data: &T,
   |           +
help: the `Box` type always has a statically known size and allocates its contents in the heap
   |
LL |     data: Box<T>,
   |           ++++ +

error: aborting due to 1 previous error

For more information about this error, try `rustc --explain E0277`.
