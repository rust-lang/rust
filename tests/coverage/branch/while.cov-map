Function name: while::while_cond
Raw bytes (38): 0x[01, 01, 01, 05, 01, 06, 01, 0c, 01, 01, 10, 01, 03, 09, 00, 12, 05, 01, 0b, 00, 10, 20, 02, 01, 00, 0b, 00, 10, 02, 00, 11, 02, 06, 01, 03, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 1
- expression 0 operands: lhs = Counter(1), rhs = Counter(0)
Number of file 0 mappings: 6
- Code(Counter(0)) at (prev + 12, 1) to (start + 1, 16)
- Code(Counter(0)) at (prev + 3, 9) to (start + 0, 18)
- Code(Counter(1)) at (prev + 1, 11) to (start + 0, 16)
- Branch { true: Expression(0, Sub), false: Counter(0) } at (prev + 0, 11) to (start + 0, 16)
    true  = (c1 - c0)
    false = c0
- Code(Expression(0, Sub)) at (prev + 0, 17) to (start + 2, 6)
    = (c1 - c0)
- Code(Counter(0)) at (prev + 3, 1) to (start + 0, 2)
Highest counter ID seen: c1

Function name: while::while_cond_not
Raw bytes (38): 0x[01, 01, 01, 05, 01, 06, 01, 15, 01, 01, 10, 01, 03, 09, 00, 12, 05, 01, 0b, 00, 14, 20, 02, 01, 00, 0b, 00, 14, 02, 00, 15, 02, 06, 01, 03, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 1
- expression 0 operands: lhs = Counter(1), rhs = Counter(0)
Number of file 0 mappings: 6
- Code(Counter(0)) at (prev + 21, 1) to (start + 1, 16)
- Code(Counter(0)) at (prev + 3, 9) to (start + 0, 18)
- Code(Counter(1)) at (prev + 1, 11) to (start + 0, 20)
- Branch { true: Expression(0, Sub), false: Counter(0) } at (prev + 0, 11) to (start + 0, 20)
    true  = (c1 - c0)
    false = c0
- Code(Expression(0, Sub)) at (prev + 0, 21) to (start + 2, 6)
    = (c1 - c0)
- Code(Counter(0)) at (prev + 3, 1) to (start + 0, 2)
Highest counter ID seen: c1

Function name: while::while_op_and
Raw bytes (58): 0x[01, 01, 05, 05, 09, 05, 01, 0f, 05, 01, 09, 05, 01, 08, 01, 1e, 01, 01, 10, 01, 03, 09, 01, 12, 05, 02, 0b, 00, 10, 20, 09, 02, 00, 0b, 00, 10, 09, 00, 14, 00, 19, 20, 12, 0a, 00, 14, 00, 19, 12, 00, 1a, 03, 06, 01, 04, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 5
- expression 0 operands: lhs = Counter(1), rhs = Counter(2)
- expression 1 operands: lhs = Counter(1), rhs = Counter(0)
- expression 2 operands: lhs = Expression(3, Add), rhs = Counter(1)
- expression 3 operands: lhs = Counter(0), rhs = Counter(2)
- expression 4 operands: lhs = Counter(1), rhs = Counter(0)
Number of file 0 mappings: 8
- Code(Counter(0)) at (prev + 30, 1) to (start + 1, 16)
- Code(Counter(0)) at (prev + 3, 9) to (start + 1, 18)
- Code(Counter(1)) at (prev + 2, 11) to (start + 0, 16)
- Branch { true: Counter(2), false: Expression(0, Sub) } at (prev + 0, 11) to (start + 0, 16)
    true  = c2
    false = (c1 - c2)
- Code(Counter(2)) at (prev + 0, 20) to (start + 0, 25)
- Branch { true: Expression(4, Sub), false: Expression(2, Sub) } at (prev + 0, 20) to (start + 0, 25)
    true  = (c1 - c0)
    false = ((c0 + c2) - c1)
- Code(Expression(4, Sub)) at (prev + 0, 26) to (start + 3, 6)
    = (c1 - c0)
- Code(Counter(0)) at (prev + 4, 1) to (start + 0, 2)
Highest counter ID seen: c2

Function name: while::while_op_or
Raw bytes (56): 0x[01, 01, 04, 05, 09, 05, 0b, 01, 09, 05, 01, 08, 01, 29, 01, 01, 10, 01, 03, 09, 01, 12, 05, 02, 0b, 00, 10, 20, 09, 02, 00, 0b, 00, 10, 02, 00, 14, 00, 19, 20, 06, 01, 00, 14, 00, 19, 0e, 00, 1a, 03, 06, 01, 04, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 4
- expression 0 operands: lhs = Counter(1), rhs = Counter(2)
- expression 1 operands: lhs = Counter(1), rhs = Expression(2, Add)
- expression 2 operands: lhs = Counter(0), rhs = Counter(2)
- expression 3 operands: lhs = Counter(1), rhs = Counter(0)
Number of file 0 mappings: 8
- Code(Counter(0)) at (prev + 41, 1) to (start + 1, 16)
- Code(Counter(0)) at (prev + 3, 9) to (start + 1, 18)
- Code(Counter(1)) at (prev + 2, 11) to (start + 0, 16)
- Branch { true: Counter(2), false: Expression(0, Sub) } at (prev + 0, 11) to (start + 0, 16)
    true  = c2
    false = (c1 - c2)
- Code(Expression(0, Sub)) at (prev + 0, 20) to (start + 0, 25)
    = (c1 - c2)
- Branch { true: Expression(1, Sub), false: Counter(0) } at (prev + 0, 20) to (start + 0, 25)
    true  = (c1 - (c0 + c2))
    false = c0
- Code(Expression(3, Sub)) at (prev + 0, 26) to (start + 3, 6)
    = (c1 - c0)
- Code(Counter(0)) at (prev + 4, 1) to (start + 0, 2)
Highest counter ID seen: c2

