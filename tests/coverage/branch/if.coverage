   LL|       |#![feature(coverage_attribute)]
   LL|       |//@ edition: 2021
   LL|       |//@ compile-flags: -Zcoverage-options=branch
   LL|       |//@ llvm-cov-flags: --show-branches=count
   LL|       |
   LL|       |macro_rules! no_merge {
   LL|       |    () => {
   LL|       |        for _ in 0..1 {}
   LL|       |    };
   LL|       |}
   LL|       |
   LL|      3|fn branch_not(a: bool) {
   LL|      3|    no_merge!();
   LL|       |
   LL|      3|    if a {
  ------------------
  |  Branch (LL:8): [True: 2, False: 1]
  ------------------
   LL|      2|        say("a")
   LL|      1|    }
   LL|      3|    if !a {
  ------------------
  |  Branch (LL:8): [True: 1, False: 2]
  ------------------
   LL|      1|        say("not a");
   LL|      2|    }
   LL|      3|    if !!a {
  ------------------
  |  Branch (LL:8): [True: 2, False: 1]
  ------------------
   LL|      2|        say("not not a");
   LL|      2|    }
                  ^1
   LL|      3|    if !!!a {
  ------------------
  |  Branch (LL:8): [True: 1, False: 2]
  ------------------
   LL|      1|        say("not not not a");
   LL|      2|    }
   LL|      3|}
   LL|       |
   LL|      3|fn branch_not_as(a: bool) {
   LL|      3|    no_merge!();
   LL|       |
   LL|      3|    if !(a as bool) {
  ------------------
  |  Branch (LL:8): [True: 1, False: 2]
  ------------------
   LL|      1|        say("not (a as bool)");
   LL|      2|    }
   LL|      3|    if !!(a as bool) {
  ------------------
  |  Branch (LL:8): [True: 2, False: 1]
  ------------------
   LL|      2|        say("not not (a as bool)");
   LL|      2|    }
                  ^1
   LL|      3|    if !!!(a as bool) {
  ------------------
  |  Branch (LL:8): [True: 1, False: 2]
  ------------------
   LL|      1|        say("not not (a as bool)");
   LL|      2|    }
   LL|      3|}
   LL|       |
   LL|     15|fn branch_and(a: bool, b: bool) {
   LL|     15|    no_merge!();
   LL|       |
   LL|     15|    if a && b {
                          ^12
  ------------------
  |  Branch (LL:8): [True: 12, False: 3]
  |  Branch (LL:13): [True: 8, False: 4]
  ------------------
   LL|      8|        say("both");
   LL|      8|    } else {
   LL|      7|        say("not both");
   LL|      7|    }
   LL|     15|}
   LL|       |
   LL|     15|fn branch_or(a: bool, b: bool) {
   LL|     15|    no_merge!();
   LL|       |
   LL|     15|    if a || b {
                          ^3
  ------------------
  |  Branch (LL:8): [True: 12, False: 3]
  |  Branch (LL:13): [True: 2, False: 1]
  ------------------
   LL|     14|        say("either");
   LL|     14|    } else {
   LL|      1|        say("neither");
   LL|      1|    }
   LL|     15|}
   LL|       |
   LL|       |#[coverage(off)]
   LL|       |fn say(message: &str) {
   LL|       |    core::hint::black_box(message);
   LL|       |}
   LL|       |
   LL|       |#[coverage(off)]
   LL|       |fn main() {
   LL|       |    for a in [false, true, true] {
   LL|       |        branch_not(a);
   LL|       |        branch_not_as(a);
   LL|       |    }
   LL|       |
   LL|       |    for a in [false, true, true, true, true] {
   LL|       |        for b in [false, true, true] {
   LL|       |            branch_and(a, b);
   LL|       |            branch_or(a, b);
   LL|       |        }
   LL|       |    }
   LL|       |}

