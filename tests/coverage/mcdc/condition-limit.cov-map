Function name: condition_limit::accept_7_conditions
Raw bytes (237): 0x[01, 01, 2e, 01, 05, 05, 09, 05, 09, 05, 7b, 09, 0d, 05, 7b, 09, 0d, 05, 77, 7b, 11, 09, 0d, 05, 77, 7b, 11, 09, 0d, 05, 73, 77, 15, 7b, 11, 09, 0d, 05, 73, 77, 15, 7b, 11, 09, 0d, 05, 6f, 73, 19, 77, 15, 7b, 11, 09, 0d, 05, 6f, 73, 19, 77, 15, 7b, 11, 09, 0d, 83, 01, 05, a7, 01, 21, ab, 01, 19, af, 01, 15, b3, 01, 11, b7, 01, 0d, 01, 09, 9f, 01, 05, a3, 01, 21, a7, 01, 1d, ab, 01, 19, af, 01, 15, b3, 01, 11, b7, 01, 0d, 01, 09, 12, 01, 07, 01, 02, 09, 28, 08, 07, 02, 08, 00, 27, 30, 05, 02, 01, 07, 00, 00, 08, 00, 09, 05, 00, 0d, 00, 0e, 30, 0a, 09, 07, 06, 00, 00, 0d, 00, 0e, 0a, 00, 12, 00, 13, 30, 16, 0d, 06, 05, 00, 00, 12, 00, 13, 16, 00, 17, 00, 18, 30, 2a, 11, 05, 04, 00, 00, 17, 00, 18, 2a, 00, 1c, 00, 1d, 30, 46, 15, 04, 03, 00, 00, 1c, 00, 1d, 46, 00, 21, 00, 22, 30, 6a, 19, 03, 02, 00, 00, 21, 00, 22, 6a, 00, 26, 00, 27, 30, 1d, 21, 02, 00, 00, 00, 26, 00, 27, 1d, 00, 28, 02, 06, 7e, 02, 05, 00, 06, 9a, 01, 01, 01, 00, 02]
Number of files: 1
- file 0 => global file 1
Number of expressions: 46
- expression 0 operands: lhs = Counter(0), rhs = Counter(1)
- expression 1 operands: lhs = Counter(1), rhs = Counter(2)
- expression 2 operands: lhs = Counter(1), rhs = Counter(2)
- expression 3 operands: lhs = Counter(1), rhs = Expression(30, Add)
- expression 4 operands: lhs = Counter(2), rhs = Counter(3)
- expression 5 operands: lhs = Counter(1), rhs = Expression(30, Add)
- expression 6 operands: lhs = Counter(2), rhs = Counter(3)
- expression 7 operands: lhs = Counter(1), rhs = Expression(29, Add)
- expression 8 operands: lhs = Expression(30, Add), rhs = Counter(4)
- expression 9 operands: lhs = Counter(2), rhs = Counter(3)
- expression 10 operands: lhs = Counter(1), rhs = Expression(29, Add)
- expression 11 operands: lhs = Expression(30, Add), rhs = Counter(4)
- expression 12 operands: lhs = Counter(2), rhs = Counter(3)
- expression 13 operands: lhs = Counter(1), rhs = Expression(28, Add)
- expression 14 operands: lhs = Expression(29, Add), rhs = Counter(5)
- expression 15 operands: lhs = Expression(30, Add), rhs = Counter(4)
- expression 16 operands: lhs = Counter(2), rhs = Counter(3)
- expression 17 operands: lhs = Counter(1), rhs = Expression(28, Add)
- expression 18 operands: lhs = Expression(29, Add), rhs = Counter(5)
- expression 19 operands: lhs = Expression(30, Add), rhs = Counter(4)
- expression 20 operands: lhs = Counter(2), rhs = Counter(3)
- expression 21 operands: lhs = Counter(1), rhs = Expression(27, Add)
- expression 22 operands: lhs = Expression(28, Add), rhs = Counter(6)
- expression 23 operands: lhs = Expression(29, Add), rhs = Counter(5)
- expression 24 operands: lhs = Expression(30, Add), rhs = Counter(4)
- expression 25 operands: lhs = Counter(2), rhs = Counter(3)
- expression 26 operands: lhs = Counter(1), rhs = Expression(27, Add)
- expression 27 operands: lhs = Expression(28, Add), rhs = Counter(6)
- expression 28 operands: lhs = Expression(29, Add), rhs = Counter(5)
- expression 29 operands: lhs = Expression(30, Add), rhs = Counter(4)
- expression 30 operands: lhs = Counter(2), rhs = Counter(3)
- expression 31 operands: lhs = Expression(32, Add), rhs = Counter(1)
- expression 32 operands: lhs = Expression(41, Add), rhs = Counter(8)
- expression 33 operands: lhs = Expression(42, Add), rhs = Counter(6)
- expression 34 operands: lhs = Expression(43, Add), rhs = Counter(5)
- expression 35 operands: lhs = Expression(44, Add), rhs = Counter(4)
- expression 36 operands: lhs = Expression(45, Add), rhs = Counter(3)
- expression 37 operands: lhs = Counter(0), rhs = Counter(2)
- expression 38 operands: lhs = Expression(39, Add), rhs = Counter(1)
- expression 39 operands: lhs = Expression(40, Add), rhs = Counter(8)
- expression 40 operands: lhs = Expression(41, Add), rhs = Counter(7)
- expression 41 operands: lhs = Expression(42, Add), rhs = Counter(6)
- expression 42 operands: lhs = Expression(43, Add), rhs = Counter(5)
- expression 43 operands: lhs = Expression(44, Add), rhs = Counter(4)
- expression 44 operands: lhs = Expression(45, Add), rhs = Counter(3)
- expression 45 operands: lhs = Counter(0), rhs = Counter(2)
Number of file 0 mappings: 18
- Code(Counter(0)) at (prev + 7, 1) to (start + 2, 9)
- MCDCDecision { bitmap_idx: 8, conditions_num: 7 } at (prev + 2, 8) to (start + 0, 39)
- MCDCBranch { true: Counter(1), false: Expression(0, Sub), condition_id: 1, true_next_id: 7, false_next_id: 0 } at (prev + 0, 8) to (start + 0, 9)
    true  = c1
    false = (c0 - c1)
- Code(Counter(1)) at (prev + 0, 13) to (start + 0, 14)
- MCDCBranch { true: Expression(2, Sub), false: Counter(2), condition_id: 7, true_next_id: 6, false_next_id: 0 } at (prev + 0, 13) to (start + 0, 14)
    true  = (c1 - c2)
    false = c2
- Code(Expression(2, Sub)) at (prev + 0, 18) to (start + 0, 19)
    = (c1 - c2)
- MCDCBranch { true: Expression(5, Sub), false: Counter(3), condition_id: 6, true_next_id: 5, false_next_id: 0 } at (prev + 0, 18) to (start + 0, 19)
    true  = (c1 - (c2 + c3))
    false = c3
- Code(Expression(5, Sub)) at (prev + 0, 23) to (start + 0, 24)
    = (c1 - (c2 + c3))
- MCDCBranch { true: Expression(10, Sub), false: Counter(4), condition_id: 5, true_next_id: 4, false_next_id: 0 } at (prev + 0, 23) to (start + 0, 24)
    true  = (c1 - ((c2 + c3) + c4))
    false = c4
- Code(Expression(10, Sub)) at (prev + 0, 28) to (start + 0, 29)
    = (c1 - ((c2 + c3) + c4))
- MCDCBranch { true: Expression(17, Sub), false: Counter(5), condition_id: 4, true_next_id: 3, false_next_id: 0 } at (prev + 0, 28) to (start + 0, 29)
    true  = (c1 - (((c2 + c3) + c4) + c5))
    false = c5
- Code(Expression(17, Sub)) at (prev + 0, 33) to (start + 0, 34)
    = (c1 - (((c2 + c3) + c4) + c5))
- MCDCBranch { true: Expression(26, Sub), false: Counter(6), condition_id: 3, true_next_id: 2, false_next_id: 0 } at (prev + 0, 33) to (start + 0, 34)
    true  = (c1 - ((((c2 + c3) + c4) + c5) + c6))
    false = c6
- Code(Expression(26, Sub)) at (prev + 0, 38) to (start + 0, 39)
    = (c1 - ((((c2 + c3) + c4) + c5) + c6))
- MCDCBranch { true: Counter(7), false: Counter(8), condition_id: 2, true_next_id: 0, false_next_id: 0 } at (prev + 0, 38) to (start + 0, 39)
    true  = c7
    false = c8
- Code(Counter(7)) at (prev + 0, 40) to (start + 2, 6)
- Code(Expression(31, Sub)) at (prev + 2, 5) to (start + 0, 6)
    = (((((((c0 + c2) + c3) + c4) + c5) + c6) + c8) - c1)
- Code(Expression(38, Sub)) at (prev + 1, 1) to (start + 0, 2)
    = ((((((((c0 + c2) + c3) + c4) + c5) + c6) + c7) + c8) - c1)
Highest counter ID seen: c8

